<?xml version="1.0" encoding="UTF-8"?>
<vivadoHLSLog:LogRoot xmlns:vivadoHLSLog="www.xilinx.com/vivadoHLSLog">
  <errorLogs>
    <logs>
      <synLog/>
      <simLog/>
      <mgLog/>
      <packageLog/>
      <csimLog/>
    </logs>
  </errorLogs>
  <warningLogs>
    <logs>
      <synLog>
        <logs message="WARNING: [XFORM 203-542] Cannot flatten a loop nest 'Transfrom' (fir_demo_stream/sources/fir.cpp:78:42) in function 'sha256d' : &#xD;&#xA;&#xD;&#xA;the outer loop is not a perfect loop." projectName="fir_demo_stream" solutionName="solution1" date="2024-07-31T15:24:08.012+1000" type="Warning"/>
        <logs message="WARNING: [XFORM 203-104] Completely partitioning array 'm.1' (fir_demo_stream/sources/fir.cpp:145) accessed through non-constant indices on dimension 1 (fir_demo_stream/sources/fir.cpp:162:3), which may result in long runtime and suboptimal QoR due to large multiplexers. Please consider wrapping the array access into a function or using a register file core instead." projectName="fir_demo_stream" solutionName="solution1" date="2024-07-31T15:24:05.094+1000" type="Warning"/>
        <logs message="WARNING: [XFORM 203-104] Completely partitioning array 'input_data' (fir_demo_stream/sources/fir.cpp:38) accessed through non-constant indices on dimension 1 (fir_demo_stream/sources/fir.cpp:40:19), which may result in long runtime and suboptimal QoR due to large multiplexers. Please consider wrapping the array access into a function or using a register file core instead." projectName="fir_demo_stream" solutionName="solution1" date="2024-07-31T15:24:05.024+1000" type="Warning"/>
        <logs message="WARNING: [SYNCHK 200-23] fir_demo_stream/sources/fir.cpp:40: variable-indexed range selection may cause suboptimal QoR." projectName="fir_demo_stream" solutionName="solution1" date="2024-07-31T15:24:04.353+1000" type="Warning"/>
        <logs message="WARNING: [HLS 200-40] In file included from fir_demo_stream/sources/fir.cpp:1:&#xD;&#xA;In file included from fir_demo_stream/sources/fir.cpp:1:&#xD;&#xA;In file included from fir_demo_stream/sources/fir.hpp:1:&#xD;&#xA;C:\Xilinx\Vivado\2020.1\include\gmp.h:2226:345: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]&#xD;&#xA;  do { mp_size_t __gmp_i; mp_limb_t __gmp_x; __gmp_i = (__gmp_ysize); if (__gmp_i != 0) { if (__gmpn_add_n (__gmp_wp, __gmp_xp, __gmp_yp, __gmp_i)) { do { if (__gmp_i >= (__gmp_xsize)) { (__gmp_c) = 1; goto __gmp_done; } __gmp_x = (__gmp_xp)[__gmp_i]; } while ((((__gmp_wp)[__gmp_i++] = (__gmp_x + 1) &amp; ((~ (static_cast&lt;mp_limb_t> (0))) >> 0)) == 0)); } } if ((__gmp_wp) != (__gmp_xp)) do { mp_size_t __gmp_j; for (__gmp_j = (__gmp_i); __gmp_j &lt; (__gmp_xsize); __gmp_j++) (__gmp_wp)[__gmp_j] = (__gmp_xp)[__gmp_j]; } while (0); (__gmp_c) = 0; __gmp_done: ; } while (0);&#xD;&#xA;                                                                                                                                                                                                                                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~&#xD;&#xA;C:\Xilinx\Vivado\2020.1\include\gmp.h:2226:345: note: remove extraneous parentheses around the comparison to silence this warning&#xD;&#xA;  do { mp_size_t __gmp_i; mp_limb_t __gmp_x; __gmp_i = (__gmp_ysize); if (__gmp_i != 0) { if (__gmpn_add_n (__gmp_wp, __gmp_xp, __gmp_yp, __gmp_i)) { do { if (__gmp_i >= (__gmp_xsize)) { (__gmp_c) = 1; goto __gmp_done; } __gmp_x = (__gmp_xp)[__gmp_i]; } while ((((__gmp_wp)[__gmp_i++] = (__gmp_x + 1) &amp; ((~ (static_cast&lt;mp_limb_t> (0))) >> 0)) == 0)); } } if ((__gmp_wp) != (__gmp_xp)) do { mp_size_t __gmp_j; for (__gmp_j = (__gmp_i); __gmp_j &lt; (__gmp_xsize); __gmp_j++) (__gmp_wp)[__gmp_j] = (__gmp_xp)[__gmp_j]; } while (0); (__gmp_c) = 0; __gmp_done: ; } while (0);&#xD;&#xA;                                                                                                                                                                                                                                                                     ~                                                                                  ^   ~&#xD;&#xA;C:\Xilinx\Vivado\2020.1\include\gmp.h:2226:345: note: use '=' to turn this equality comparison into an assignment&#xD;&#xA;  do { mp_size_t __gmp_i; mp_limb_t __gmp_x; __gmp_i = (__gmp_ysize); if (__gmp_i != 0) { if (__gmpn_add_n (__gmp_wp, __gmp_xp, __gmp_yp, __gmp_i)) { do { if (__gmp_i >= (__gmp_xsize)) { (__gmp_c) = 1; goto __gmp_done; } __gmp_x = (__gmp_xp)[__gmp_i]; } while ((((__gmp_wp)[__gmp_i++] = (__gmp_x + 1) &amp; ((~ (static_cast&lt;mp_limb_t> (0))) >> 0)) == 0)); } } if ((__gmp_wp) != (__gmp_xp)) do { mp_size_t __gmp_j; for (__gmp_j = (__gmp_i); __gmp_j &lt; (__gmp_xsize); __gmp_j++) (__gmp_wp)[__gmp_j] = (__gmp_xp)[__gmp_j]; } while (0); (__gmp_c) = 0; __gmp_done: ; } while (0);&#xD;&#xA;                                                                                                                                                                                                                                                                                                                                                        ^~&#xD;&#xA;                                                                                                                                                                                                                                                                                                                                                        =&#xD;&#xA;1 warning generated." projectName="fir_demo_stream" solutionName="solution1" date="2024-07-31T15:24:03.623+1000" type="Warning"/>
      </synLog>
      <simLog/>
      <mgLog/>
      <packageLog/>
      <csimLog/>
    </logs>
  </warningLogs>
</vivadoHLSLog:LogRoot>
