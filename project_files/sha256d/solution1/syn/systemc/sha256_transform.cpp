// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sha256_transform.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sha256_transform::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sha256_transform::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<15> sha256_transform::ap_ST_fsm_state1 = "1";
const sc_lv<15> sha256_transform::ap_ST_fsm_state2 = "10";
const sc_lv<15> sha256_transform::ap_ST_fsm_state3 = "100";
const sc_lv<15> sha256_transform::ap_ST_fsm_state4 = "1000";
const sc_lv<15> sha256_transform::ap_ST_fsm_state5 = "10000";
const sc_lv<15> sha256_transform::ap_ST_fsm_state6 = "100000";
const sc_lv<15> sha256_transform::ap_ST_fsm_state7 = "1000000";
const sc_lv<15> sha256_transform::ap_ST_fsm_state8 = "10000000";
const sc_lv<15> sha256_transform::ap_ST_fsm_state9 = "100000000";
const sc_lv<15> sha256_transform::ap_ST_fsm_state10 = "1000000000";
const sc_lv<15> sha256_transform::ap_ST_fsm_state11 = "10000000000";
const sc_lv<15> sha256_transform::ap_ST_fsm_state12 = "100000000000";
const sc_lv<15> sha256_transform::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<15> sha256_transform::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<15> sha256_transform::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<32> sha256_transform::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sha256_transform::ap_const_lv32_1 = "1";
const sc_lv<1> sha256_transform::ap_const_lv1_0 = "0";
const sc_lv<32> sha256_transform::ap_const_lv32_3 = "11";
const sc_lv<1> sha256_transform::ap_const_lv1_1 = "1";
const sc_lv<32> sha256_transform::ap_const_lv32_4 = "100";
const sc_lv<32> sha256_transform::ap_const_lv32_5 = "101";
const sc_lv<32> sha256_transform::ap_const_lv32_6 = "110";
const sc_lv<32> sha256_transform::ap_const_lv32_7 = "111";
const sc_lv<32> sha256_transform::ap_const_lv32_8 = "1000";
const sc_lv<32> sha256_transform::ap_const_lv32_9 = "1001";
const sc_lv<32> sha256_transform::ap_const_lv32_A = "1010";
const sc_lv<32> sha256_transform::ap_const_lv32_B = "1011";
const sc_lv<32> sha256_transform::ap_const_lv32_2 = "10";
const sc_lv<7> sha256_transform::ap_const_lv7_0 = "0000000";
const sc_lv<5> sha256_transform::ap_const_lv5_0 = "00000";
const sc_lv<7> sha256_transform::ap_const_lv7_10 = "10000";
const sc_lv<64> sha256_transform::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> sha256_transform::ap_const_lv64_1 = "1";
const sc_lv<64> sha256_transform::ap_const_lv64_2 = "10";
const sc_lv<64> sha256_transform::ap_const_lv64_3 = "11";
const sc_lv<64> sha256_transform::ap_const_lv64_4 = "100";
const sc_lv<64> sha256_transform::ap_const_lv64_5 = "101";
const sc_lv<64> sha256_transform::ap_const_lv64_6 = "110";
const sc_lv<64> sha256_transform::ap_const_lv64_7 = "111";
const sc_lv<32> sha256_transform::ap_const_lv32_C = "1100";
const sc_lv<32> sha256_transform::ap_const_lv32_D = "1101";
const sc_lv<32> sha256_transform::ap_const_lv32_E = "1110";
const sc_lv<5> sha256_transform::ap_const_lv5_10 = "10000";
const sc_lv<5> sha256_transform::ap_const_lv5_1 = "1";
const sc_lv<6> sha256_transform::ap_const_lv6_3 = "11";
const sc_lv<7> sha256_transform::ap_const_lv7_4 = "100";
const sc_lv<7> sha256_transform::ap_const_lv7_40 = "1000000";
const sc_lv<6> sha256_transform::ap_const_lv6_3E = "111110";
const sc_lv<6> sha256_transform::ap_const_lv6_39 = "111001";
const sc_lv<6> sha256_transform::ap_const_lv6_31 = "110001";
const sc_lv<6> sha256_transform::ap_const_lv6_30 = "110000";
const sc_lv<32> sha256_transform::ap_const_lv32_11 = "10001";
const sc_lv<32> sha256_transform::ap_const_lv32_1F = "11111";
const sc_lv<32> sha256_transform::ap_const_lv32_13 = "10011";
const sc_lv<32> sha256_transform::ap_const_lv32_12 = "10010";
const sc_lv<7> sha256_transform::ap_const_lv7_1 = "1";
const sc_lv<32> sha256_transform::ap_const_lv32_19 = "11001";
const sc_lv<32> sha256_transform::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> sha256_transform::ap_const_lv32_16 = "10110";
const bool sha256_transform::ap_const_boolean_1 = true;

sha256_transform::sha256_transform(sc_module_name name) : sc_module(name), mVcdFile(0) {
    K_V_U = new sha256_transform_bkb("K_V_U");
    K_V_U->clk(ap_clk);
    K_V_U->reset(ap_rst);
    K_V_U->address0(K_V_address0);
    K_V_U->ce0(K_V_ce0);
    K_V_U->q0(K_V_q0);
    m_V_U = new sha256_transform_cud("m_V_U");
    m_V_U->clk(ap_clk);
    m_V_U->reset(ap_rst);
    m_V_U->address0(m_V_address0);
    m_V_U->ce0(m_V_ce0);
    m_V_U->we0(m_V_we0);
    m_V_U->d0(m_V_d0);
    m_V_U->q0(m_V_q0);
    m_V_U->address1(m_V_address1);
    m_V_U->ce1(m_V_ce1);
    m_V_U->we1(m_V_we1);
    m_V_U->d1(m_V_d1);
    m_V_U->q1(m_V_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_K_V_address0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln544_6_fu_800_p1 );

    SC_METHOD(thread_K_V_ce0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_a_V_1_fu_980_p2);
    sensitive << ( ret_V_25_reg_1168 );
    sensitive << ( add_ln209_8_fu_974_p2 );

    SC_METHOD(thread_add_ln209_1_fu_667_p2);
    sensitive << ( ret_V_5_fu_586_p2 );
    sensitive << ( ret_V_10_fu_656_p2 );

    SC_METHOD(thread_add_ln209_3_fu_879_p2);
    sensitive << ( K_V_q0 );
    sensitive << ( m_V_q0 );

    SC_METHOD(thread_add_ln209_4_fu_806_p2);
    sensitive << ( ret_V_18_fu_794_p2 );
    sensitive << ( ret_V_15_fu_770_p2 );

    SC_METHOD(thread_add_ln209_5_fu_812_p2);
    sensitive << ( p_01439_0_reg_417 );
    sensitive << ( add_ln209_4_fu_806_p2 );

    SC_METHOD(thread_add_ln209_8_fu_974_p2);
    sensitive << ( t1_V_fu_885_p2 );
    sensitive << ( ret_V_22_fu_962_p2 );

    SC_METHOD(thread_add_ln209_fu_662_p2);
    sensitive << ( m_V_q0 );
    sensitive << ( m_V_load_1_reg_1047 );

    SC_METHOD(thread_add_ln700_10_fu_874_p2);
    sensitive << ( h_V_reg_1139 );
    sensitive << ( p_01439_0_reg_417 );

    SC_METHOD(thread_add_ln700_3_fu_842_p2);
    sensitive << ( a_V_reg_1067 );
    sensitive << ( lhs_V_10_reg_342 );

    SC_METHOD(thread_add_ln700_4_fu_848_p2);
    sensitive << ( b_V_reg_1073 );
    sensitive << ( rhs_V_16_reg_352 );

    SC_METHOD(thread_add_ln700_5_fu_854_p2);
    sensitive << ( c_V_reg_1089 );
    sensitive << ( rhs_V_17_reg_363 );

    SC_METHOD(thread_add_ln700_6_fu_985_p2);
    sensitive << ( d_V_reg_1095 );
    sensitive << ( p_01587_0_reg_374 );

    SC_METHOD(thread_add_ln700_7_fu_859_p2);
    sensitive << ( e_V_reg_1111 );
    sensitive << ( lhs_V_reg_385 );

    SC_METHOD(thread_add_ln700_8_fu_864_p2);
    sensitive << ( f_V_reg_1117 );
    sensitive << ( rhs_V_reg_395 );

    SC_METHOD(thread_add_ln700_9_fu_869_p2);
    sensitive << ( g_V_reg_1133 );
    sensitive << ( rhs_V_15_reg_406 );

    SC_METHOD(thread_add_ln700_fu_433_p2);
    sensitive << ( p_01115_0_reg_307 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_data_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln544_1_fu_449_p1 );

    SC_METHOD(thread_data_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_e_V_1_fu_968_p2);
    sensitive << ( p_01587_0_reg_374 );
    sensitive << ( t1_V_fu_885_p2 );

    SC_METHOD(thread_i_V_1_fu_692_p2);
    sensitive << ( p_01115_2_reg_331 );

    SC_METHOD(thread_i_V_fu_680_p2);
    sensitive << ( p_01115_1_reg_319 );

    SC_METHOD(thread_icmp_ln38_fu_470_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_01115_1_reg_319 );

    SC_METHOD(thread_icmp_ln887_1_fu_686_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( p_01115_2_reg_331 );

    SC_METHOD(thread_icmp_ln887_fu_427_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( p_01115_0_reg_307 );

    SC_METHOD(thread_j_V_fu_454_p2);
    sensitive << ( p_0262_0_reg_296 );

    SC_METHOD(thread_m_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln544_fu_460_p1 );
    sensitive << ( zext_ln544_3_fu_486_p1 );
    sensitive << ( zext_ln544_7_fu_517_p1 );
    sensitive << ( zext_ln544_6_fu_800_p1 );

    SC_METHOD(thread_m_V_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln544_4_fu_497_p1 );
    sensitive << ( zext_ln544_5_fu_507_p1 );
    sensitive << ( zext_ln544_2_fu_522_p1 );

    SC_METHOD(thread_m_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_m_V_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_m_V_d0);
    sensitive << ( data_V_q0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_m_V_d1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( add_ln209_1_fu_667_p2 );
    sensitive << ( add_ln209_fu_662_p2 );

    SC_METHOD(thread_m_V_we0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_m_V_we1);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_r_V_10_fu_934_p4);
    sensitive << ( lhs_V_10_reg_342 );

    SC_METHOD(thread_r_V_14_fu_576_p1);
    sensitive << ( r_V_1_fu_567_p4 );

    SC_METHOD(thread_r_V_15_fu_646_p1);
    sensitive << ( r_V_4_fu_636_p4 );

    SC_METHOD(thread_r_V_16_fu_782_p2);
    sensitive << ( lhs_V_reg_385 );

    SC_METHOD(thread_r_V_1_fu_567_p4);
    sensitive << ( m_V_load_reg_1038 );

    SC_METHOD(thread_r_V_2_fu_592_p4);
    sensitive << ( m_V_q1 );

    SC_METHOD(thread_r_V_3_fu_614_p4);
    sensitive << ( m_V_q1 );

    SC_METHOD(thread_r_V_4_fu_636_p4);
    sensitive << ( m_V_q1 );

    SC_METHOD(thread_r_V_5_fu_698_p4);
    sensitive << ( lhs_V_reg_385 );

    SC_METHOD(thread_r_V_6_fu_720_p4);
    sensitive << ( lhs_V_reg_385 );

    SC_METHOD(thread_r_V_7_fu_742_p4);
    sensitive << ( lhs_V_reg_385 );

    SC_METHOD(thread_r_V_8_fu_890_p4);
    sensitive << ( lhs_V_10_reg_342 );

    SC_METHOD(thread_r_V_9_fu_912_p4);
    sensitive << ( lhs_V_10_reg_342 );

    SC_METHOD(thread_r_V_fu_527_p4);
    sensitive << ( m_V_load_reg_1038 );

    SC_METHOD(thread_r_V_s_fu_547_p4);
    sensitive << ( m_V_load_reg_1038 );

    SC_METHOD(thread_ret_V_10_fu_656_p2);
    sensitive << ( xor_ln1357_2_fu_650_p2 );
    sensitive << ( ret_V_28_fu_606_p3 );

    SC_METHOD(thread_ret_V_11_fu_512_p2);
    sensitive << ( trunc_ln215_1_reg_1017 );

    SC_METHOD(thread_ret_V_15_fu_770_p2);
    sensitive << ( xor_ln1357_4_fu_764_p2 );
    sensitive << ( ret_V_32_fu_756_p3 );

    SC_METHOD(thread_ret_V_18_fu_794_p2);
    sensitive << ( ret_V_34_fu_788_p2 );
    sensitive << ( ret_V_33_fu_776_p2 );

    SC_METHOD(thread_ret_V_22_fu_962_p2);
    sensitive << ( xor_ln1357_7_fu_956_p2 );
    sensitive << ( ret_V_37_fu_948_p3 );

    SC_METHOD(thread_ret_V_25_fu_836_p2);
    sensitive << ( ret_V_38_fu_824_p2 );
    sensitive << ( ret_V_39_fu_830_p2 );

    SC_METHOD(thread_ret_V_26_fu_539_p3);
    sensitive << ( trunc_ln1503_fu_536_p1 );
    sensitive << ( r_V_fu_527_p4 );

    SC_METHOD(thread_ret_V_27_fu_559_p3);
    sensitive << ( trunc_ln1503_1_fu_556_p1 );
    sensitive << ( r_V_s_fu_547_p4 );

    SC_METHOD(thread_ret_V_28_fu_606_p3);
    sensitive << ( trunc_ln1503_2_fu_602_p1 );
    sensitive << ( r_V_2_fu_592_p4 );

    SC_METHOD(thread_ret_V_29_fu_628_p3);
    sensitive << ( trunc_ln1503_3_fu_624_p1 );
    sensitive << ( r_V_3_fu_614_p4 );

    SC_METHOD(thread_ret_V_2_fu_480_p2);
    sensitive << ( trunc_ln215_1_fu_476_p1 );

    SC_METHOD(thread_ret_V_30_fu_712_p3);
    sensitive << ( trunc_ln1503_4_fu_708_p1 );
    sensitive << ( r_V_5_fu_698_p4 );

    SC_METHOD(thread_ret_V_31_fu_734_p3);
    sensitive << ( trunc_ln1503_5_fu_730_p1 );
    sensitive << ( r_V_6_fu_720_p4 );

    SC_METHOD(thread_ret_V_32_fu_756_p3);
    sensitive << ( trunc_ln1503_6_fu_752_p1 );
    sensitive << ( r_V_7_fu_742_p4 );

    SC_METHOD(thread_ret_V_33_fu_776_p2);
    sensitive << ( lhs_V_reg_385 );
    sensitive << ( rhs_V_reg_395 );

    SC_METHOD(thread_ret_V_34_fu_788_p2);
    sensitive << ( rhs_V_15_reg_406 );
    sensitive << ( r_V_16_fu_782_p2 );

    SC_METHOD(thread_ret_V_35_fu_904_p3);
    sensitive << ( trunc_ln1503_7_fu_900_p1 );
    sensitive << ( r_V_8_fu_890_p4 );

    SC_METHOD(thread_ret_V_36_fu_926_p3);
    sensitive << ( trunc_ln1503_8_fu_922_p1 );
    sensitive << ( r_V_9_fu_912_p4 );

    SC_METHOD(thread_ret_V_37_fu_948_p3);
    sensitive << ( trunc_ln1503_9_fu_944_p1 );
    sensitive << ( r_V_10_fu_934_p4 );

    SC_METHOD(thread_ret_V_38_fu_824_p2);
    sensitive << ( lhs_V_10_reg_342 );
    sensitive << ( xor_ln1357_9_fu_818_p2 );

    SC_METHOD(thread_ret_V_39_fu_830_p2);
    sensitive << ( rhs_V_16_reg_352 );
    sensitive << ( rhs_V_17_reg_363 );

    SC_METHOD(thread_ret_V_5_fu_586_p2);
    sensitive << ( xor_ln1357_fu_580_p2 );
    sensitive << ( ret_V_26_fu_539_p3 );

    SC_METHOD(thread_ret_V_6_fu_491_p2);
    sensitive << ( trunc_ln215_1_fu_476_p1 );

    SC_METHOD(thread_ret_V_7_fu_502_p2);
    sensitive << ( trunc_ln215_1_reg_1017 );

    SC_METHOD(thread_ret_V_fu_443_p2);
    sensitive << ( trunc_ln215_fu_439_p1 );

    SC_METHOD(thread_state_V_addr_1_reg_1033);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln38_fu_470_p2 );

    SC_METHOD(thread_state_V_addr_2_reg_1079);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_state_V_addr_3_reg_1084);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_state_V_addr_4_reg_1101);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_state_V_addr_5_reg_1106);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_state_V_addr_6_reg_1123);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_state_V_addr_7_reg_1128);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_state_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( state_V_addr_2_reg_1079 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( state_V_addr_4_reg_1101 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( state_V_addr_6_reg_1123 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_state_V_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( state_V_addr_1_reg_1033 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( state_V_addr_3_reg_1084 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( state_V_addr_5_reg_1106 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( state_V_addr_7_reg_1128 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_state_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_state_V_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_state_V_d0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( add_ln700_5_reg_1173 );
    sensitive << ( add_ln700_7_reg_1178 );
    sensitive << ( add_ln700_9_reg_1188 );
    sensitive << ( add_ln700_3_fu_842_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_state_V_d1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( add_ln700_8_reg_1183 );
    sensitive << ( add_ln700_10_reg_1193 );
    sensitive << ( add_ln700_4_fu_848_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( add_ln700_6_fu_985_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_state_V_we0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln887_1_fu_686_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_state_V_we1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln887_1_fu_686_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_t1_V_fu_885_p2);
    sensitive << ( add_ln209_5_reg_1163 );
    sensitive << ( add_ln209_3_fu_879_p2 );

    SC_METHOD(thread_trunc_ln1503_1_fu_556_p1);
    sensitive << ( m_V_load_reg_1038 );

    SC_METHOD(thread_trunc_ln1503_2_fu_602_p1);
    sensitive << ( m_V_q1 );

    SC_METHOD(thread_trunc_ln1503_3_fu_624_p1);
    sensitive << ( m_V_q1 );

    SC_METHOD(thread_trunc_ln1503_4_fu_708_p1);
    sensitive << ( lhs_V_reg_385 );

    SC_METHOD(thread_trunc_ln1503_5_fu_730_p1);
    sensitive << ( lhs_V_reg_385 );

    SC_METHOD(thread_trunc_ln1503_6_fu_752_p1);
    sensitive << ( lhs_V_reg_385 );

    SC_METHOD(thread_trunc_ln1503_7_fu_900_p1);
    sensitive << ( lhs_V_10_reg_342 );

    SC_METHOD(thread_trunc_ln1503_8_fu_922_p1);
    sensitive << ( lhs_V_10_reg_342 );

    SC_METHOD(thread_trunc_ln1503_9_fu_944_p1);
    sensitive << ( lhs_V_10_reg_342 );

    SC_METHOD(thread_trunc_ln1503_fu_536_p1);
    sensitive << ( m_V_load_reg_1038 );

    SC_METHOD(thread_trunc_ln215_1_fu_476_p1);
    sensitive << ( p_01115_1_reg_319 );

    SC_METHOD(thread_trunc_ln215_fu_439_p1);
    sensitive << ( p_0262_0_reg_296 );

    SC_METHOD(thread_xor_ln1357_2_fu_650_p2);
    sensitive << ( r_V_15_fu_646_p1 );
    sensitive << ( ret_V_29_fu_628_p3 );

    SC_METHOD(thread_xor_ln1357_4_fu_764_p2);
    sensitive << ( ret_V_30_fu_712_p3 );
    sensitive << ( ret_V_31_fu_734_p3 );

    SC_METHOD(thread_xor_ln1357_7_fu_956_p2);
    sensitive << ( ret_V_35_fu_904_p3 );
    sensitive << ( ret_V_36_fu_926_p3 );

    SC_METHOD(thread_xor_ln1357_9_fu_818_p2);
    sensitive << ( rhs_V_16_reg_352 );
    sensitive << ( rhs_V_17_reg_363 );

    SC_METHOD(thread_xor_ln1357_fu_580_p2);
    sensitive << ( r_V_14_fu_576_p1 );
    sensitive << ( ret_V_27_fu_559_p3 );

    SC_METHOD(thread_zext_ln544_1_fu_449_p1);
    sensitive << ( ret_V_fu_443_p2 );

    SC_METHOD(thread_zext_ln544_2_fu_522_p1);
    sensitive << ( p_01115_1_reg_319 );

    SC_METHOD(thread_zext_ln544_3_fu_486_p1);
    sensitive << ( ret_V_2_fu_480_p2 );

    SC_METHOD(thread_zext_ln544_4_fu_497_p1);
    sensitive << ( ret_V_6_fu_491_p2 );

    SC_METHOD(thread_zext_ln544_5_fu_507_p1);
    sensitive << ( ret_V_7_fu_502_p2 );

    SC_METHOD(thread_zext_ln544_6_fu_800_p1);
    sensitive << ( p_01115_2_reg_331 );

    SC_METHOD(thread_zext_ln544_7_fu_517_p1);
    sensitive << ( ret_V_11_fu_512_p2 );

    SC_METHOD(thread_zext_ln544_fu_460_p1);
    sensitive << ( p_01115_0_reg_307 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln887_fu_427_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln38_fu_470_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln887_1_fu_686_p2 );

    ap_CS_fsm = "000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sha256_transform_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, state_V_address0, "(port)state_V_address0");
    sc_trace(mVcdFile, state_V_ce0, "(port)state_V_ce0");
    sc_trace(mVcdFile, state_V_we0, "(port)state_V_we0");
    sc_trace(mVcdFile, state_V_d0, "(port)state_V_d0");
    sc_trace(mVcdFile, state_V_q0, "(port)state_V_q0");
    sc_trace(mVcdFile, state_V_address1, "(port)state_V_address1");
    sc_trace(mVcdFile, state_V_ce1, "(port)state_V_ce1");
    sc_trace(mVcdFile, state_V_we1, "(port)state_V_we1");
    sc_trace(mVcdFile, state_V_d1, "(port)state_V_d1");
    sc_trace(mVcdFile, state_V_q1, "(port)state_V_q1");
    sc_trace(mVcdFile, data_V_address0, "(port)data_V_address0");
    sc_trace(mVcdFile, data_V_ce0, "(port)data_V_ce0");
    sc_trace(mVcdFile, data_V_q0, "(port)data_V_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, K_V_address0, "K_V_address0");
    sc_trace(mVcdFile, K_V_ce0, "K_V_ce0");
    sc_trace(mVcdFile, K_V_q0, "K_V_q0");
    sc_trace(mVcdFile, add_ln700_fu_433_p2, "add_ln700_fu_433_p2");
    sc_trace(mVcdFile, add_ln700_reg_999, "add_ln700_reg_999");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln887_fu_427_p2, "icmp_ln887_fu_427_p2");
    sc_trace(mVcdFile, j_V_fu_454_p2, "j_V_fu_454_p2");
    sc_trace(mVcdFile, j_V_reg_1009, "j_V_reg_1009");
    sc_trace(mVcdFile, trunc_ln215_1_fu_476_p1, "trunc_ln215_1_fu_476_p1");
    sc_trace(mVcdFile, trunc_ln215_1_reg_1017, "trunc_ln215_1_reg_1017");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln38_fu_470_p2, "icmp_ln38_fu_470_p2");
    sc_trace(mVcdFile, state_V_addr_1_reg_1033, "state_V_addr_1_reg_1033");
    sc_trace(mVcdFile, m_V_q0, "m_V_q0");
    sc_trace(mVcdFile, m_V_load_reg_1038, "m_V_load_reg_1038");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, m_V_q1, "m_V_q1");
    sc_trace(mVcdFile, m_V_load_1_reg_1047, "m_V_load_1_reg_1047");
    sc_trace(mVcdFile, i_V_fu_680_p2, "i_V_fu_680_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, a_V_reg_1067, "a_V_reg_1067");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, b_V_reg_1073, "b_V_reg_1073");
    sc_trace(mVcdFile, state_V_addr_2_reg_1079, "state_V_addr_2_reg_1079");
    sc_trace(mVcdFile, state_V_addr_3_reg_1084, "state_V_addr_3_reg_1084");
    sc_trace(mVcdFile, c_V_reg_1089, "c_V_reg_1089");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, d_V_reg_1095, "d_V_reg_1095");
    sc_trace(mVcdFile, state_V_addr_4_reg_1101, "state_V_addr_4_reg_1101");
    sc_trace(mVcdFile, state_V_addr_5_reg_1106, "state_V_addr_5_reg_1106");
    sc_trace(mVcdFile, e_V_reg_1111, "e_V_reg_1111");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, f_V_reg_1117, "f_V_reg_1117");
    sc_trace(mVcdFile, state_V_addr_6_reg_1123, "state_V_addr_6_reg_1123");
    sc_trace(mVcdFile, state_V_addr_7_reg_1128, "state_V_addr_7_reg_1128");
    sc_trace(mVcdFile, g_V_reg_1133, "g_V_reg_1133");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, h_V_reg_1139, "h_V_reg_1139");
    sc_trace(mVcdFile, i_V_1_fu_692_p2, "i_V_1_fu_692_p2");
    sc_trace(mVcdFile, i_V_1_reg_1148, "i_V_1_reg_1148");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, icmp_ln887_1_fu_686_p2, "icmp_ln887_1_fu_686_p2");
    sc_trace(mVcdFile, add_ln209_5_fu_812_p2, "add_ln209_5_fu_812_p2");
    sc_trace(mVcdFile, add_ln209_5_reg_1163, "add_ln209_5_reg_1163");
    sc_trace(mVcdFile, ret_V_25_fu_836_p2, "ret_V_25_fu_836_p2");
    sc_trace(mVcdFile, ret_V_25_reg_1168, "ret_V_25_reg_1168");
    sc_trace(mVcdFile, add_ln700_5_fu_854_p2, "add_ln700_5_fu_854_p2");
    sc_trace(mVcdFile, add_ln700_5_reg_1173, "add_ln700_5_reg_1173");
    sc_trace(mVcdFile, add_ln700_7_fu_859_p2, "add_ln700_7_fu_859_p2");
    sc_trace(mVcdFile, add_ln700_7_reg_1178, "add_ln700_7_reg_1178");
    sc_trace(mVcdFile, add_ln700_8_fu_864_p2, "add_ln700_8_fu_864_p2");
    sc_trace(mVcdFile, add_ln700_8_reg_1183, "add_ln700_8_reg_1183");
    sc_trace(mVcdFile, add_ln700_9_fu_869_p2, "add_ln700_9_fu_869_p2");
    sc_trace(mVcdFile, add_ln700_9_reg_1188, "add_ln700_9_reg_1188");
    sc_trace(mVcdFile, add_ln700_10_fu_874_p2, "add_ln700_10_fu_874_p2");
    sc_trace(mVcdFile, add_ln700_10_reg_1193, "add_ln700_10_reg_1193");
    sc_trace(mVcdFile, e_V_1_fu_968_p2, "e_V_1_fu_968_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, a_V_1_fu_980_p2, "a_V_1_fu_980_p2");
    sc_trace(mVcdFile, m_V_address0, "m_V_address0");
    sc_trace(mVcdFile, m_V_ce0, "m_V_ce0");
    sc_trace(mVcdFile, m_V_we0, "m_V_we0");
    sc_trace(mVcdFile, m_V_d0, "m_V_d0");
    sc_trace(mVcdFile, m_V_address1, "m_V_address1");
    sc_trace(mVcdFile, m_V_ce1, "m_V_ce1");
    sc_trace(mVcdFile, m_V_we1, "m_V_we1");
    sc_trace(mVcdFile, m_V_d1, "m_V_d1");
    sc_trace(mVcdFile, p_0262_0_reg_296, "p_0262_0_reg_296");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, p_01115_0_reg_307, "p_01115_0_reg_307");
    sc_trace(mVcdFile, p_01115_1_reg_319, "p_01115_1_reg_319");
    sc_trace(mVcdFile, p_01115_2_reg_331, "p_01115_2_reg_331");
    sc_trace(mVcdFile, lhs_V_10_reg_342, "lhs_V_10_reg_342");
    sc_trace(mVcdFile, rhs_V_16_reg_352, "rhs_V_16_reg_352");
    sc_trace(mVcdFile, rhs_V_17_reg_363, "rhs_V_17_reg_363");
    sc_trace(mVcdFile, p_01587_0_reg_374, "p_01587_0_reg_374");
    sc_trace(mVcdFile, lhs_V_reg_385, "lhs_V_reg_385");
    sc_trace(mVcdFile, rhs_V_reg_395, "rhs_V_reg_395");
    sc_trace(mVcdFile, rhs_V_15_reg_406, "rhs_V_15_reg_406");
    sc_trace(mVcdFile, p_01439_0_reg_417, "p_01439_0_reg_417");
    sc_trace(mVcdFile, zext_ln544_1_fu_449_p1, "zext_ln544_1_fu_449_p1");
    sc_trace(mVcdFile, zext_ln544_fu_460_p1, "zext_ln544_fu_460_p1");
    sc_trace(mVcdFile, zext_ln544_3_fu_486_p1, "zext_ln544_3_fu_486_p1");
    sc_trace(mVcdFile, zext_ln544_4_fu_497_p1, "zext_ln544_4_fu_497_p1");
    sc_trace(mVcdFile, zext_ln544_5_fu_507_p1, "zext_ln544_5_fu_507_p1");
    sc_trace(mVcdFile, zext_ln544_7_fu_517_p1, "zext_ln544_7_fu_517_p1");
    sc_trace(mVcdFile, zext_ln544_2_fu_522_p1, "zext_ln544_2_fu_522_p1");
    sc_trace(mVcdFile, zext_ln544_6_fu_800_p1, "zext_ln544_6_fu_800_p1");
    sc_trace(mVcdFile, add_ln700_3_fu_842_p2, "add_ln700_3_fu_842_p2");
    sc_trace(mVcdFile, add_ln700_4_fu_848_p2, "add_ln700_4_fu_848_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, add_ln700_6_fu_985_p2, "add_ln700_6_fu_985_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, trunc_ln215_fu_439_p1, "trunc_ln215_fu_439_p1");
    sc_trace(mVcdFile, ret_V_fu_443_p2, "ret_V_fu_443_p2");
    sc_trace(mVcdFile, ret_V_2_fu_480_p2, "ret_V_2_fu_480_p2");
    sc_trace(mVcdFile, ret_V_6_fu_491_p2, "ret_V_6_fu_491_p2");
    sc_trace(mVcdFile, ret_V_7_fu_502_p2, "ret_V_7_fu_502_p2");
    sc_trace(mVcdFile, ret_V_11_fu_512_p2, "ret_V_11_fu_512_p2");
    sc_trace(mVcdFile, trunc_ln1503_fu_536_p1, "trunc_ln1503_fu_536_p1");
    sc_trace(mVcdFile, r_V_fu_527_p4, "r_V_fu_527_p4");
    sc_trace(mVcdFile, trunc_ln1503_1_fu_556_p1, "trunc_ln1503_1_fu_556_p1");
    sc_trace(mVcdFile, r_V_s_fu_547_p4, "r_V_s_fu_547_p4");
    sc_trace(mVcdFile, r_V_1_fu_567_p4, "r_V_1_fu_567_p4");
    sc_trace(mVcdFile, r_V_14_fu_576_p1, "r_V_14_fu_576_p1");
    sc_trace(mVcdFile, ret_V_27_fu_559_p3, "ret_V_27_fu_559_p3");
    sc_trace(mVcdFile, xor_ln1357_fu_580_p2, "xor_ln1357_fu_580_p2");
    sc_trace(mVcdFile, ret_V_26_fu_539_p3, "ret_V_26_fu_539_p3");
    sc_trace(mVcdFile, trunc_ln1503_2_fu_602_p1, "trunc_ln1503_2_fu_602_p1");
    sc_trace(mVcdFile, r_V_2_fu_592_p4, "r_V_2_fu_592_p4");
    sc_trace(mVcdFile, trunc_ln1503_3_fu_624_p1, "trunc_ln1503_3_fu_624_p1");
    sc_trace(mVcdFile, r_V_3_fu_614_p4, "r_V_3_fu_614_p4");
    sc_trace(mVcdFile, r_V_4_fu_636_p4, "r_V_4_fu_636_p4");
    sc_trace(mVcdFile, r_V_15_fu_646_p1, "r_V_15_fu_646_p1");
    sc_trace(mVcdFile, ret_V_29_fu_628_p3, "ret_V_29_fu_628_p3");
    sc_trace(mVcdFile, xor_ln1357_2_fu_650_p2, "xor_ln1357_2_fu_650_p2");
    sc_trace(mVcdFile, ret_V_28_fu_606_p3, "ret_V_28_fu_606_p3");
    sc_trace(mVcdFile, ret_V_5_fu_586_p2, "ret_V_5_fu_586_p2");
    sc_trace(mVcdFile, ret_V_10_fu_656_p2, "ret_V_10_fu_656_p2");
    sc_trace(mVcdFile, add_ln209_1_fu_667_p2, "add_ln209_1_fu_667_p2");
    sc_trace(mVcdFile, add_ln209_fu_662_p2, "add_ln209_fu_662_p2");
    sc_trace(mVcdFile, trunc_ln1503_4_fu_708_p1, "trunc_ln1503_4_fu_708_p1");
    sc_trace(mVcdFile, r_V_5_fu_698_p4, "r_V_5_fu_698_p4");
    sc_trace(mVcdFile, trunc_ln1503_5_fu_730_p1, "trunc_ln1503_5_fu_730_p1");
    sc_trace(mVcdFile, r_V_6_fu_720_p4, "r_V_6_fu_720_p4");
    sc_trace(mVcdFile, trunc_ln1503_6_fu_752_p1, "trunc_ln1503_6_fu_752_p1");
    sc_trace(mVcdFile, r_V_7_fu_742_p4, "r_V_7_fu_742_p4");
    sc_trace(mVcdFile, ret_V_30_fu_712_p3, "ret_V_30_fu_712_p3");
    sc_trace(mVcdFile, ret_V_31_fu_734_p3, "ret_V_31_fu_734_p3");
    sc_trace(mVcdFile, xor_ln1357_4_fu_764_p2, "xor_ln1357_4_fu_764_p2");
    sc_trace(mVcdFile, ret_V_32_fu_756_p3, "ret_V_32_fu_756_p3");
    sc_trace(mVcdFile, r_V_16_fu_782_p2, "r_V_16_fu_782_p2");
    sc_trace(mVcdFile, ret_V_34_fu_788_p2, "ret_V_34_fu_788_p2");
    sc_trace(mVcdFile, ret_V_33_fu_776_p2, "ret_V_33_fu_776_p2");
    sc_trace(mVcdFile, ret_V_18_fu_794_p2, "ret_V_18_fu_794_p2");
    sc_trace(mVcdFile, ret_V_15_fu_770_p2, "ret_V_15_fu_770_p2");
    sc_trace(mVcdFile, add_ln209_4_fu_806_p2, "add_ln209_4_fu_806_p2");
    sc_trace(mVcdFile, xor_ln1357_9_fu_818_p2, "xor_ln1357_9_fu_818_p2");
    sc_trace(mVcdFile, ret_V_38_fu_824_p2, "ret_V_38_fu_824_p2");
    sc_trace(mVcdFile, ret_V_39_fu_830_p2, "ret_V_39_fu_830_p2");
    sc_trace(mVcdFile, add_ln209_3_fu_879_p2, "add_ln209_3_fu_879_p2");
    sc_trace(mVcdFile, trunc_ln1503_7_fu_900_p1, "trunc_ln1503_7_fu_900_p1");
    sc_trace(mVcdFile, r_V_8_fu_890_p4, "r_V_8_fu_890_p4");
    sc_trace(mVcdFile, trunc_ln1503_8_fu_922_p1, "trunc_ln1503_8_fu_922_p1");
    sc_trace(mVcdFile, r_V_9_fu_912_p4, "r_V_9_fu_912_p4");
    sc_trace(mVcdFile, trunc_ln1503_9_fu_944_p1, "trunc_ln1503_9_fu_944_p1");
    sc_trace(mVcdFile, r_V_10_fu_934_p4, "r_V_10_fu_934_p4");
    sc_trace(mVcdFile, ret_V_35_fu_904_p3, "ret_V_35_fu_904_p3");
    sc_trace(mVcdFile, ret_V_36_fu_926_p3, "ret_V_36_fu_926_p3");
    sc_trace(mVcdFile, xor_ln1357_7_fu_956_p2, "xor_ln1357_7_fu_956_p2");
    sc_trace(mVcdFile, ret_V_37_fu_948_p3, "ret_V_37_fu_948_p3");
    sc_trace(mVcdFile, t1_V_fu_885_p2, "t1_V_fu_885_p2");
    sc_trace(mVcdFile, ret_V_22_fu_962_p2, "ret_V_22_fu_962_p2");
    sc_trace(mVcdFile, add_ln209_8_fu_974_p2, "add_ln209_8_fu_974_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

sha256_transform::~sha256_transform() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete K_V_U;
    delete m_V_U;
}

void sha256_transform::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        lhs_V_10_reg_342 = a_V_1_fu_980_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        lhs_V_10_reg_342 = a_V_reg_1067.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        lhs_V_reg_385 = e_V_1_fu_968_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        lhs_V_reg_385 = e_V_reg_1111.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_01115_0_reg_307 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_01115_0_reg_307 = add_ln700_reg_999.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln887_fu_427_p2.read(), ap_const_lv1_1))) {
        p_01115_1_reg_319 = ap_const_lv7_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        p_01115_1_reg_319 = i_V_fu_680_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        p_01115_2_reg_331 = i_V_1_reg_1148.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        p_01115_2_reg_331 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        p_01439_0_reg_417 = rhs_V_15_reg_406.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        p_01439_0_reg_417 = state_V_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        p_01587_0_reg_374 = rhs_V_17_reg_363.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        p_01587_0_reg_374 = d_V_reg_1095.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_0262_0_reg_296 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_0262_0_reg_296 = j_V_reg_1009.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        rhs_V_15_reg_406 = rhs_V_reg_395.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        rhs_V_15_reg_406 = state_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        rhs_V_16_reg_352 = lhs_V_10_reg_342.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        rhs_V_16_reg_352 = b_V_reg_1073.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        rhs_V_17_reg_363 = rhs_V_16_reg_352.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        rhs_V_17_reg_363 = c_V_reg_1089.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        rhs_V_reg_395 = lhs_V_reg_385.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        rhs_V_reg_395 = f_V_reg_1117.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        a_V_reg_1067 = state_V_q0.read();
        b_V_reg_1073 = state_V_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_fu_686_p2.read()))) {
        add_ln209_5_reg_1163 = add_ln209_5_fu_812_p2.read();
        ret_V_25_reg_1168 = ret_V_25_fu_836_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_fu_686_p2.read()))) {
        add_ln700_10_reg_1193 = add_ln700_10_fu_874_p2.read();
        add_ln700_5_reg_1173 = add_ln700_5_fu_854_p2.read();
        add_ln700_7_reg_1178 = add_ln700_7_fu_859_p2.read();
        add_ln700_8_reg_1183 = add_ln700_8_fu_864_p2.read();
        add_ln700_9_reg_1188 = add_ln700_9_fu_869_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln700_reg_999 = add_ln700_fu_433_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        c_V_reg_1089 = state_V_q0.read();
        d_V_reg_1095 = state_V_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        e_V_reg_1111 = state_V_q0.read();
        f_V_reg_1117 = state_V_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        g_V_reg_1133 = state_V_q0.read();
        h_V_reg_1139 = state_V_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_V_1_reg_1148 = i_V_1_fu_692_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln887_fu_427_p2.read(), ap_const_lv1_0))) {
        j_V_reg_1009 = j_V_fu_454_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_V_load_1_reg_1047 = m_V_q1.read();
        m_V_load_reg_1038 = m_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln38_fu_470_p2.read()))) {
        trunc_ln215_1_reg_1017 = trunc_ln215_1_fu_476_p1.read();
    }
}

void sha256_transform::thread_K_V_address0() {
    K_V_address0 =  (sc_lv<6>) (zext_ln544_6_fu_800_p1.read());
}

void sha256_transform::thread_K_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        K_V_ce0 = ap_const_logic_1;
    } else {
        K_V_ce0 = ap_const_logic_0;
    }
}

void sha256_transform::thread_a_V_1_fu_980_p2() {
    a_V_1_fu_980_p2 = (!add_ln209_8_fu_974_p2.read().is_01() || !ret_V_25_reg_1168.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln209_8_fu_974_p2.read()) + sc_biguint<32>(ret_V_25_reg_1168.read()));
}

void sha256_transform::thread_add_ln209_1_fu_667_p2() {
    add_ln209_1_fu_667_p2 = (!ret_V_5_fu_586_p2.read().is_01() || !ret_V_10_fu_656_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ret_V_5_fu_586_p2.read()) + sc_biguint<32>(ret_V_10_fu_656_p2.read()));
}

void sha256_transform::thread_add_ln209_3_fu_879_p2() {
    add_ln209_3_fu_879_p2 = (!K_V_q0.read().is_01() || !m_V_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(K_V_q0.read()) + sc_biguint<32>(m_V_q0.read()));
}

void sha256_transform::thread_add_ln209_4_fu_806_p2() {
    add_ln209_4_fu_806_p2 = (!ret_V_18_fu_794_p2.read().is_01() || !ret_V_15_fu_770_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ret_V_18_fu_794_p2.read()) + sc_biguint<32>(ret_V_15_fu_770_p2.read()));
}

void sha256_transform::thread_add_ln209_5_fu_812_p2() {
    add_ln209_5_fu_812_p2 = (!add_ln209_4_fu_806_p2.read().is_01() || !p_01439_0_reg_417.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln209_4_fu_806_p2.read()) + sc_biguint<32>(p_01439_0_reg_417.read()));
}

void sha256_transform::thread_add_ln209_8_fu_974_p2() {
    add_ln209_8_fu_974_p2 = (!ret_V_22_fu_962_p2.read().is_01() || !t1_V_fu_885_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ret_V_22_fu_962_p2.read()) + sc_biguint<32>(t1_V_fu_885_p2.read()));
}

void sha256_transform::thread_add_ln209_fu_662_p2() {
    add_ln209_fu_662_p2 = (!m_V_load_1_reg_1047.read().is_01() || !m_V_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(m_V_load_1_reg_1047.read()) + sc_biguint<32>(m_V_q0.read()));
}

void sha256_transform::thread_add_ln700_10_fu_874_p2() {
    add_ln700_10_fu_874_p2 = (!h_V_reg_1139.read().is_01() || !p_01439_0_reg_417.read().is_01())? sc_lv<32>(): (sc_biguint<32>(h_V_reg_1139.read()) + sc_biguint<32>(p_01439_0_reg_417.read()));
}

void sha256_transform::thread_add_ln700_3_fu_842_p2() {
    add_ln700_3_fu_842_p2 = (!a_V_reg_1067.read().is_01() || !lhs_V_10_reg_342.read().is_01())? sc_lv<32>(): (sc_biguint<32>(a_V_reg_1067.read()) + sc_biguint<32>(lhs_V_10_reg_342.read()));
}

void sha256_transform::thread_add_ln700_4_fu_848_p2() {
    add_ln700_4_fu_848_p2 = (!b_V_reg_1073.read().is_01() || !rhs_V_16_reg_352.read().is_01())? sc_lv<32>(): (sc_biguint<32>(b_V_reg_1073.read()) + sc_biguint<32>(rhs_V_16_reg_352.read()));
}

void sha256_transform::thread_add_ln700_5_fu_854_p2() {
    add_ln700_5_fu_854_p2 = (!c_V_reg_1089.read().is_01() || !rhs_V_17_reg_363.read().is_01())? sc_lv<32>(): (sc_biguint<32>(c_V_reg_1089.read()) + sc_biguint<32>(rhs_V_17_reg_363.read()));
}

void sha256_transform::thread_add_ln700_6_fu_985_p2() {
    add_ln700_6_fu_985_p2 = (!d_V_reg_1095.read().is_01() || !p_01587_0_reg_374.read().is_01())? sc_lv<32>(): (sc_biguint<32>(d_V_reg_1095.read()) + sc_biguint<32>(p_01587_0_reg_374.read()));
}

void sha256_transform::thread_add_ln700_7_fu_859_p2() {
    add_ln700_7_fu_859_p2 = (!e_V_reg_1111.read().is_01() || !lhs_V_reg_385.read().is_01())? sc_lv<32>(): (sc_biguint<32>(e_V_reg_1111.read()) + sc_biguint<32>(lhs_V_reg_385.read()));
}

void sha256_transform::thread_add_ln700_8_fu_864_p2() {
    add_ln700_8_fu_864_p2 = (!f_V_reg_1117.read().is_01() || !rhs_V_reg_395.read().is_01())? sc_lv<32>(): (sc_biguint<32>(f_V_reg_1117.read()) + sc_biguint<32>(rhs_V_reg_395.read()));
}

void sha256_transform::thread_add_ln700_9_fu_869_p2() {
    add_ln700_9_fu_869_p2 = (!g_V_reg_1133.read().is_01() || !rhs_V_15_reg_406.read().is_01())? sc_lv<32>(): (sc_biguint<32>(g_V_reg_1133.read()) + sc_biguint<32>(rhs_V_15_reg_406.read()));
}

void sha256_transform::thread_add_ln700_fu_433_p2() {
    add_ln700_fu_433_p2 = (!p_01115_0_reg_307.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(p_01115_0_reg_307.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void sha256_transform::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sha256_transform::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void sha256_transform::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void sha256_transform::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void sha256_transform::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void sha256_transform::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void sha256_transform::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void sha256_transform::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sha256_transform::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sha256_transform::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void sha256_transform::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void sha256_transform::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void sha256_transform::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void sha256_transform::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void sha256_transform::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void sha256_transform::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sha256_transform::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sha256_transform::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sha256_transform::thread_data_V_address0() {
    data_V_address0 =  (sc_lv<6>) (zext_ln544_1_fu_449_p1.read());
}

void sha256_transform::thread_data_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        data_V_ce0 = ap_const_logic_1;
    } else {
        data_V_ce0 = ap_const_logic_0;
    }
}

void sha256_transform::thread_e_V_1_fu_968_p2() {
    e_V_1_fu_968_p2 = (!t1_V_fu_885_p2.read().is_01() || !p_01587_0_reg_374.read().is_01())? sc_lv<32>(): (sc_biguint<32>(t1_V_fu_885_p2.read()) + sc_biguint<32>(p_01587_0_reg_374.read()));
}

void sha256_transform::thread_i_V_1_fu_692_p2() {
    i_V_1_fu_692_p2 = (!p_01115_2_reg_331.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(p_01115_2_reg_331.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void sha256_transform::thread_i_V_fu_680_p2() {
    i_V_fu_680_p2 = (!ap_const_lv7_1.is_01() || !p_01115_1_reg_319.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_1) + sc_biguint<7>(p_01115_1_reg_319.read()));
}

void sha256_transform::thread_icmp_ln38_fu_470_p2() {
    icmp_ln38_fu_470_p2 = (!p_01115_1_reg_319.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(p_01115_1_reg_319.read() == ap_const_lv7_40);
}

void sha256_transform::thread_icmp_ln887_1_fu_686_p2() {
    icmp_ln887_1_fu_686_p2 = (!p_01115_2_reg_331.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(p_01115_2_reg_331.read() == ap_const_lv7_40);
}

void sha256_transform::thread_icmp_ln887_fu_427_p2() {
    icmp_ln887_fu_427_p2 = (!p_01115_0_reg_307.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(p_01115_0_reg_307.read() == ap_const_lv5_10);
}

void sha256_transform::thread_j_V_fu_454_p2() {
    j_V_fu_454_p2 = (!ap_const_lv7_4.is_01() || !p_0262_0_reg_296.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_4) + sc_biguint<7>(p_0262_0_reg_296.read()));
}

void sha256_transform::thread_m_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        m_V_address0 =  (sc_lv<6>) (zext_ln544_6_fu_800_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_V_address0 =  (sc_lv<6>) (zext_ln544_7_fu_517_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        m_V_address0 =  (sc_lv<6>) (zext_ln544_3_fu_486_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        m_V_address0 =  (sc_lv<6>) (zext_ln544_fu_460_p1.read());
    } else {
        m_V_address0 = "XXXXXX";
    }
}

void sha256_transform::thread_m_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        m_V_address1 =  (sc_lv<6>) (zext_ln544_2_fu_522_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_V_address1 =  (sc_lv<6>) (zext_ln544_5_fu_507_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        m_V_address1 =  (sc_lv<6>) (zext_ln544_4_fu_497_p1.read());
    } else {
        m_V_address1 = "XXXXXX";
    }
}

void sha256_transform::thread_m_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        m_V_ce0 = ap_const_logic_1;
    } else {
        m_V_ce0 = ap_const_logic_0;
    }
}

void sha256_transform::thread_m_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        m_V_ce1 = ap_const_logic_1;
    } else {
        m_V_ce1 = ap_const_logic_0;
    }
}

void sha256_transform::thread_m_V_d0() {
    m_V_d0 = esl_zext<32,8>(data_V_q0.read());
}

void sha256_transform::thread_m_V_d1() {
    m_V_d1 = (!add_ln209_1_fu_667_p2.read().is_01() || !add_ln209_fu_662_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln209_1_fu_667_p2.read()) + sc_biguint<32>(add_ln209_fu_662_p2.read()));
}

void sha256_transform::thread_m_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        m_V_we0 = ap_const_logic_1;
    } else {
        m_V_we0 = ap_const_logic_0;
    }
}

void sha256_transform::thread_m_V_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        m_V_we1 = ap_const_logic_1;
    } else {
        m_V_we1 = ap_const_logic_0;
    }
}

void sha256_transform::thread_r_V_10_fu_934_p4() {
    r_V_10_fu_934_p4 = lhs_V_10_reg_342.read().range(31, 22);
}

void sha256_transform::thread_r_V_14_fu_576_p1() {
    r_V_14_fu_576_p1 = esl_zext<32,22>(r_V_1_fu_567_p4.read());
}

void sha256_transform::thread_r_V_15_fu_646_p1() {
    r_V_15_fu_646_p1 = esl_zext<32,29>(r_V_4_fu_636_p4.read());
}

void sha256_transform::thread_r_V_16_fu_782_p2() {
    r_V_16_fu_782_p2 = (lhs_V_reg_385.read() ^ ap_const_lv32_FFFFFFFF);
}

void sha256_transform::thread_r_V_1_fu_567_p4() {
    r_V_1_fu_567_p4 = m_V_load_reg_1038.read().range(31, 10);
}

void sha256_transform::thread_r_V_2_fu_592_p4() {
    r_V_2_fu_592_p4 = m_V_q1.read().range(31, 7);
}

void sha256_transform::thread_r_V_3_fu_614_p4() {
    r_V_3_fu_614_p4 = m_V_q1.read().range(31, 18);
}

void sha256_transform::thread_r_V_4_fu_636_p4() {
    r_V_4_fu_636_p4 = m_V_q1.read().range(31, 3);
}

void sha256_transform::thread_r_V_5_fu_698_p4() {
    r_V_5_fu_698_p4 = lhs_V_reg_385.read().range(31, 6);
}

void sha256_transform::thread_r_V_6_fu_720_p4() {
    r_V_6_fu_720_p4 = lhs_V_reg_385.read().range(31, 11);
}

void sha256_transform::thread_r_V_7_fu_742_p4() {
    r_V_7_fu_742_p4 = lhs_V_reg_385.read().range(31, 25);
}

void sha256_transform::thread_r_V_8_fu_890_p4() {
    r_V_8_fu_890_p4 = lhs_V_10_reg_342.read().range(31, 2);
}

void sha256_transform::thread_r_V_9_fu_912_p4() {
    r_V_9_fu_912_p4 = lhs_V_10_reg_342.read().range(31, 13);
}

void sha256_transform::thread_r_V_fu_527_p4() {
    r_V_fu_527_p4 = m_V_load_reg_1038.read().range(31, 17);
}

void sha256_transform::thread_r_V_s_fu_547_p4() {
    r_V_s_fu_547_p4 = m_V_load_reg_1038.read().range(31, 19);
}

void sha256_transform::thread_ret_V_10_fu_656_p2() {
    ret_V_10_fu_656_p2 = (xor_ln1357_2_fu_650_p2.read() ^ ret_V_28_fu_606_p3.read());
}

void sha256_transform::thread_ret_V_11_fu_512_p2() {
    ret_V_11_fu_512_p2 = (!ap_const_lv6_30.is_01() || !trunc_ln215_1_reg_1017.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_30) + sc_biguint<6>(trunc_ln215_1_reg_1017.read()));
}

void sha256_transform::thread_ret_V_15_fu_770_p2() {
    ret_V_15_fu_770_p2 = (xor_ln1357_4_fu_764_p2.read() ^ ret_V_32_fu_756_p3.read());
}

void sha256_transform::thread_ret_V_18_fu_794_p2() {
    ret_V_18_fu_794_p2 = (ret_V_34_fu_788_p2.read() ^ ret_V_33_fu_776_p2.read());
}

void sha256_transform::thread_ret_V_22_fu_962_p2() {
    ret_V_22_fu_962_p2 = (xor_ln1357_7_fu_956_p2.read() ^ ret_V_37_fu_948_p3.read());
}

void sha256_transform::thread_ret_V_25_fu_836_p2() {
    ret_V_25_fu_836_p2 = (ret_V_38_fu_824_p2.read() ^ ret_V_39_fu_830_p2.read());
}

void sha256_transform::thread_ret_V_26_fu_539_p3() {
    ret_V_26_fu_539_p3 = esl_concat<17,15>(trunc_ln1503_fu_536_p1.read(), r_V_fu_527_p4.read());
}

void sha256_transform::thread_ret_V_27_fu_559_p3() {
    ret_V_27_fu_559_p3 = esl_concat<19,13>(trunc_ln1503_1_fu_556_p1.read(), r_V_s_fu_547_p4.read());
}

void sha256_transform::thread_ret_V_28_fu_606_p3() {
    ret_V_28_fu_606_p3 = esl_concat<7,25>(trunc_ln1503_2_fu_602_p1.read(), r_V_2_fu_592_p4.read());
}

void sha256_transform::thread_ret_V_29_fu_628_p3() {
    ret_V_29_fu_628_p3 = esl_concat<18,14>(trunc_ln1503_3_fu_624_p1.read(), r_V_3_fu_614_p4.read());
}

void sha256_transform::thread_ret_V_2_fu_480_p2() {
    ret_V_2_fu_480_p2 = (!ap_const_lv6_3E.is_01() || !trunc_ln215_1_fu_476_p1.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_3E) + sc_biguint<6>(trunc_ln215_1_fu_476_p1.read()));
}

void sha256_transform::thread_ret_V_30_fu_712_p3() {
    ret_V_30_fu_712_p3 = esl_concat<6,26>(trunc_ln1503_4_fu_708_p1.read(), r_V_5_fu_698_p4.read());
}

void sha256_transform::thread_ret_V_31_fu_734_p3() {
    ret_V_31_fu_734_p3 = esl_concat<11,21>(trunc_ln1503_5_fu_730_p1.read(), r_V_6_fu_720_p4.read());
}

void sha256_transform::thread_ret_V_32_fu_756_p3() {
    ret_V_32_fu_756_p3 = esl_concat<25,7>(trunc_ln1503_6_fu_752_p1.read(), r_V_7_fu_742_p4.read());
}

void sha256_transform::thread_ret_V_33_fu_776_p2() {
    ret_V_33_fu_776_p2 = (rhs_V_reg_395.read() & lhs_V_reg_385.read());
}

void sha256_transform::thread_ret_V_34_fu_788_p2() {
    ret_V_34_fu_788_p2 = (rhs_V_15_reg_406.read() & r_V_16_fu_782_p2.read());
}

void sha256_transform::thread_ret_V_35_fu_904_p3() {
    ret_V_35_fu_904_p3 = esl_concat<2,30>(trunc_ln1503_7_fu_900_p1.read(), r_V_8_fu_890_p4.read());
}

void sha256_transform::thread_ret_V_36_fu_926_p3() {
    ret_V_36_fu_926_p3 = esl_concat<13,19>(trunc_ln1503_8_fu_922_p1.read(), r_V_9_fu_912_p4.read());
}

void sha256_transform::thread_ret_V_37_fu_948_p3() {
    ret_V_37_fu_948_p3 = esl_concat<22,10>(trunc_ln1503_9_fu_944_p1.read(), r_V_10_fu_934_p4.read());
}

void sha256_transform::thread_ret_V_38_fu_824_p2() {
    ret_V_38_fu_824_p2 = (xor_ln1357_9_fu_818_p2.read() & lhs_V_10_reg_342.read());
}

void sha256_transform::thread_ret_V_39_fu_830_p2() {
    ret_V_39_fu_830_p2 = (rhs_V_17_reg_363.read() & rhs_V_16_reg_352.read());
}

void sha256_transform::thread_ret_V_5_fu_586_p2() {
    ret_V_5_fu_586_p2 = (xor_ln1357_fu_580_p2.read() ^ ret_V_26_fu_539_p3.read());
}

void sha256_transform::thread_ret_V_6_fu_491_p2() {
    ret_V_6_fu_491_p2 = (!ap_const_lv6_39.is_01() || !trunc_ln215_1_fu_476_p1.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_39) + sc_biguint<6>(trunc_ln215_1_fu_476_p1.read()));
}

void sha256_transform::thread_ret_V_7_fu_502_p2() {
    ret_V_7_fu_502_p2 = (!ap_const_lv6_31.is_01() || !trunc_ln215_1_reg_1017.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_31) + sc_biguint<6>(trunc_ln215_1_reg_1017.read()));
}

void sha256_transform::thread_ret_V_fu_443_p2() {
    ret_V_fu_443_p2 = (trunc_ln215_fu_439_p1.read() | ap_const_lv6_3);
}

void sha256_transform::thread_state_V_addr_1_reg_1033() {
    state_V_addr_1_reg_1033 =  (sc_lv<3>) (ap_const_lv64_1);
}

void sha256_transform::thread_state_V_addr_2_reg_1079() {
    state_V_addr_2_reg_1079 =  (sc_lv<3>) (ap_const_lv64_2);
}

void sha256_transform::thread_state_V_addr_3_reg_1084() {
    state_V_addr_3_reg_1084 =  (sc_lv<3>) (ap_const_lv64_3);
}

void sha256_transform::thread_state_V_addr_4_reg_1101() {
    state_V_addr_4_reg_1101 =  (sc_lv<3>) (ap_const_lv64_4);
}

void sha256_transform::thread_state_V_addr_5_reg_1106() {
    state_V_addr_5_reg_1106 =  (sc_lv<3>) (ap_const_lv64_5);
}

void sha256_transform::thread_state_V_addr_6_reg_1123() {
    state_V_addr_6_reg_1123 =  (sc_lv<3>) (ap_const_lv64_6);
}

void sha256_transform::thread_state_V_addr_7_reg_1128() {
    state_V_addr_7_reg_1128 =  (sc_lv<3>) (ap_const_lv64_7);
}

void sha256_transform::thread_state_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        state_V_address0 = state_V_addr_6_reg_1123.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        state_V_address0 = state_V_addr_4_reg_1101.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        state_V_address0 = state_V_addr_2_reg_1079.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        state_V_address0 =  (sc_lv<3>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        state_V_address0 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        state_V_address0 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        state_V_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else {
        state_V_address0 =  (sc_lv<3>) ("XXX");
    }
}

void sha256_transform::thread_state_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        state_V_address1 = state_V_addr_7_reg_1128.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        state_V_address1 = state_V_addr_5_reg_1106.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        state_V_address1 = state_V_addr_3_reg_1084.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        state_V_address1 = state_V_addr_1_reg_1033.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        state_V_address1 =  (sc_lv<3>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        state_V_address1 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        state_V_address1 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        state_V_address1 =  (sc_lv<3>) (ap_const_lv64_1);
    } else {
        state_V_address1 =  (sc_lv<3>) ("XXX");
    }
}

void sha256_transform::thread_state_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        state_V_ce0 = ap_const_logic_1;
    } else {
        state_V_ce0 = ap_const_logic_0;
    }
}

void sha256_transform::thread_state_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        state_V_ce1 = ap_const_logic_1;
    } else {
        state_V_ce1 = ap_const_logic_0;
    }
}

void sha256_transform::thread_state_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        state_V_d0 = add_ln700_9_reg_1188.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        state_V_d0 = add_ln700_7_reg_1178.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        state_V_d0 = add_ln700_5_reg_1173.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        state_V_d0 = add_ln700_3_fu_842_p2.read();
    } else {
        state_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_transform::thread_state_V_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        state_V_d1 = add_ln700_10_reg_1193.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        state_V_d1 = add_ln700_8_reg_1183.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        state_V_d1 = add_ln700_6_fu_985_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        state_V_d1 = add_ln700_4_fu_848_p2.read();
    } else {
        state_V_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_transform::thread_state_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_fu_686_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        state_V_we0 = ap_const_logic_1;
    } else {
        state_V_we0 = ap_const_logic_0;
    }
}

void sha256_transform::thread_state_V_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_fu_686_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        state_V_we1 = ap_const_logic_1;
    } else {
        state_V_we1 = ap_const_logic_0;
    }
}

void sha256_transform::thread_t1_V_fu_885_p2() {
    t1_V_fu_885_p2 = (!add_ln209_5_reg_1163.read().is_01() || !add_ln209_3_fu_879_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(add_ln209_5_reg_1163.read()) + sc_biguint<32>(add_ln209_3_fu_879_p2.read()));
}

void sha256_transform::thread_trunc_ln1503_1_fu_556_p1() {
    trunc_ln1503_1_fu_556_p1 = m_V_load_reg_1038.read().range(19-1, 0);
}

void sha256_transform::thread_trunc_ln1503_2_fu_602_p1() {
    trunc_ln1503_2_fu_602_p1 = m_V_q1.read().range(7-1, 0);
}

void sha256_transform::thread_trunc_ln1503_3_fu_624_p1() {
    trunc_ln1503_3_fu_624_p1 = m_V_q1.read().range(18-1, 0);
}

void sha256_transform::thread_trunc_ln1503_4_fu_708_p1() {
    trunc_ln1503_4_fu_708_p1 = lhs_V_reg_385.read().range(6-1, 0);
}

void sha256_transform::thread_trunc_ln1503_5_fu_730_p1() {
    trunc_ln1503_5_fu_730_p1 = lhs_V_reg_385.read().range(11-1, 0);
}

void sha256_transform::thread_trunc_ln1503_6_fu_752_p1() {
    trunc_ln1503_6_fu_752_p1 = lhs_V_reg_385.read().range(25-1, 0);
}

void sha256_transform::thread_trunc_ln1503_7_fu_900_p1() {
    trunc_ln1503_7_fu_900_p1 = lhs_V_10_reg_342.read().range(2-1, 0);
}

void sha256_transform::thread_trunc_ln1503_8_fu_922_p1() {
    trunc_ln1503_8_fu_922_p1 = lhs_V_10_reg_342.read().range(13-1, 0);
}

void sha256_transform::thread_trunc_ln1503_9_fu_944_p1() {
    trunc_ln1503_9_fu_944_p1 = lhs_V_10_reg_342.read().range(22-1, 0);
}

void sha256_transform::thread_trunc_ln1503_fu_536_p1() {
    trunc_ln1503_fu_536_p1 = m_V_load_reg_1038.read().range(17-1, 0);
}

void sha256_transform::thread_trunc_ln215_1_fu_476_p1() {
    trunc_ln215_1_fu_476_p1 = p_01115_1_reg_319.read().range(6-1, 0);
}

void sha256_transform::thread_trunc_ln215_fu_439_p1() {
    trunc_ln215_fu_439_p1 = p_0262_0_reg_296.read().range(6-1, 0);
}

void sha256_transform::thread_xor_ln1357_2_fu_650_p2() {
    xor_ln1357_2_fu_650_p2 = (r_V_15_fu_646_p1.read() ^ ret_V_29_fu_628_p3.read());
}

void sha256_transform::thread_xor_ln1357_4_fu_764_p2() {
    xor_ln1357_4_fu_764_p2 = (ret_V_30_fu_712_p3.read() ^ ret_V_31_fu_734_p3.read());
}

void sha256_transform::thread_xor_ln1357_7_fu_956_p2() {
    xor_ln1357_7_fu_956_p2 = (ret_V_35_fu_904_p3.read() ^ ret_V_36_fu_926_p3.read());
}

void sha256_transform::thread_xor_ln1357_9_fu_818_p2() {
    xor_ln1357_9_fu_818_p2 = (rhs_V_17_reg_363.read() ^ rhs_V_16_reg_352.read());
}

void sha256_transform::thread_xor_ln1357_fu_580_p2() {
    xor_ln1357_fu_580_p2 = (r_V_14_fu_576_p1.read() ^ ret_V_27_fu_559_p3.read());
}

void sha256_transform::thread_zext_ln544_1_fu_449_p1() {
    zext_ln544_1_fu_449_p1 = esl_zext<64,6>(ret_V_fu_443_p2.read());
}

void sha256_transform::thread_zext_ln544_2_fu_522_p1() {
    zext_ln544_2_fu_522_p1 = esl_zext<64,7>(p_01115_1_reg_319.read());
}

void sha256_transform::thread_zext_ln544_3_fu_486_p1() {
    zext_ln544_3_fu_486_p1 = esl_zext<64,6>(ret_V_2_fu_480_p2.read());
}

void sha256_transform::thread_zext_ln544_4_fu_497_p1() {
    zext_ln544_4_fu_497_p1 = esl_zext<64,6>(ret_V_6_fu_491_p2.read());
}

void sha256_transform::thread_zext_ln544_5_fu_507_p1() {
    zext_ln544_5_fu_507_p1 = esl_zext<64,6>(ret_V_7_fu_502_p2.read());
}

void sha256_transform::thread_zext_ln544_6_fu_800_p1() {
    zext_ln544_6_fu_800_p1 = esl_zext<64,7>(p_01115_2_reg_331.read());
}

void sha256_transform::thread_zext_ln544_7_fu_517_p1() {
    zext_ln544_7_fu_517_p1 = esl_zext<64,6>(ret_V_11_fu_512_p2.read());
}

void sha256_transform::thread_zext_ln544_fu_460_p1() {
    zext_ln544_fu_460_p1 = esl_zext<64,5>(p_01115_0_reg_307.read());
}

void sha256_transform::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln887_fu_427_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln38_fu_470_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_fu_686_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
            break;
    }
}

}

