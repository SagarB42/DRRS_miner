// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sha256_update_1_HH_
#define _sha256_update_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sha256_transform.h"
#include "sha256_update_blodEe.h"

namespace ap_rtl {

struct sha256_update_1 : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > state_V_address0;
    sc_out< sc_logic > state_V_ce0;
    sc_out< sc_logic > state_V_we0;
    sc_out< sc_lv<32> > state_V_d0;
    sc_in< sc_lv<32> > state_V_q0;
    sc_out< sc_lv<3> > state_V_address1;
    sc_out< sc_logic > state_V_ce1;
    sc_out< sc_logic > state_V_we1;
    sc_out< sc_lv<32> > state_V_d1;
    sc_in< sc_lv<32> > state_V_q1;
    sc_out< sc_lv<5> > data_V_address0;
    sc_out< sc_logic > data_V_ce0;
    sc_in< sc_lv<8> > data_V_q0;


    // Module declarations
    sha256_update_1(sc_module_name name);
    SC_HAS_PROCESS(sha256_update_1);

    ~sha256_update_1();

    sc_trace_file* mVcdFile;

    sha256_update_blodEe* block_V_U;
    sha256_transform* grp_sha256_transform_fu_186;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > i_fu_201_p2;
    sc_signal< sc_lv<7> > i_reg_306;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln91_fu_207_p1;
    sc_signal< sc_lv<64> > zext_ln91_reg_311;
    sc_signal< sc_lv<1> > icmp_ln90_fu_195_p2;
    sc_signal< sc_lv<7> > i_2_fu_218_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<5> > i_3_fu_235_p2;
    sc_signal< sc_lv<5> > i_3_reg_332;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln99_fu_229_p2;
    sc_signal< sc_lv<6> > i_4_fu_270_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > icmp_ln105_fu_259_p2;
    sc_signal< sc_lv<4> > i_5_fu_282_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<6> > block_V_address0;
    sc_signal< sc_logic > block_V_ce0;
    sc_signal< sc_logic > block_V_we0;
    sc_signal< sc_lv<8> > block_V_d0;
    sc_signal< sc_lv<8> > block_V_q0;
    sc_signal< sc_logic > grp_sha256_transform_fu_186_ap_start;
    sc_signal< sc_logic > grp_sha256_transform_fu_186_ap_done;
    sc_signal< sc_logic > grp_sha256_transform_fu_186_ap_idle;
    sc_signal< sc_logic > grp_sha256_transform_fu_186_ap_ready;
    sc_signal< sc_lv<3> > grp_sha256_transform_fu_186_state_V_address0;
    sc_signal< sc_logic > grp_sha256_transform_fu_186_state_V_ce0;
    sc_signal< sc_logic > grp_sha256_transform_fu_186_state_V_we0;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_186_state_V_d0;
    sc_signal< sc_lv<3> > grp_sha256_transform_fu_186_state_V_address1;
    sc_signal< sc_logic > grp_sha256_transform_fu_186_state_V_ce1;
    sc_signal< sc_logic > grp_sha256_transform_fu_186_state_V_we1;
    sc_signal< sc_lv<32> > grp_sha256_transform_fu_186_state_V_d1;
    sc_signal< sc_lv<6> > grp_sha256_transform_fu_186_data_V_address0;
    sc_signal< sc_logic > grp_sha256_transform_fu_186_data_V_ce0;
    sc_signal< sc_lv<7> > i_0_reg_130;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<7> > i1_0_reg_141;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln96_fu_212_p2;
    sc_signal< sc_lv<5> > i2_0_reg_152;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<6> > i3_0_reg_164;
    sc_signal< sc_lv<4> > i4_0_reg_175;
    sc_signal< sc_lv<1> > icmp_ln109_fu_276_p2;
    sc_signal< sc_logic > grp_sha256_transform_fu_186_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > zext_ln97_fu_224_p1;
    sc_signal< sc_lv<64> > zext_ln100_1_fu_249_p1;
    sc_signal< sc_lv<64> > zext_ln100_fu_254_p1;
    sc_signal< sc_lv<64> > zext_ln106_fu_265_p1;
    sc_signal< sc_lv<64> > zext_ln110_fu_298_p1;
    sc_signal< sc_lv<7> > or_ln_fu_241_p3;
    sc_signal< sc_lv<4> > xor_ln110_fu_288_p2;
    sc_signal< sc_lv<6> > sext_ln110_fu_294_p1;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<6> ap_const_lv6_11;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<64> ap_const_lv64_10;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<6> ap_const_lv6_38;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_block_V_address0();
    void thread_block_V_ce0();
    void thread_block_V_d0();
    void thread_block_V_we0();
    void thread_data_V_address0();
    void thread_data_V_ce0();
    void thread_grp_sha256_transform_fu_186_ap_start();
    void thread_i_2_fu_218_p2();
    void thread_i_3_fu_235_p2();
    void thread_i_4_fu_270_p2();
    void thread_i_5_fu_282_p2();
    void thread_i_fu_201_p2();
    void thread_icmp_ln105_fu_259_p2();
    void thread_icmp_ln109_fu_276_p2();
    void thread_icmp_ln90_fu_195_p2();
    void thread_icmp_ln96_fu_212_p2();
    void thread_icmp_ln99_fu_229_p2();
    void thread_or_ln_fu_241_p3();
    void thread_sext_ln110_fu_294_p1();
    void thread_state_V_address0();
    void thread_state_V_address1();
    void thread_state_V_ce0();
    void thread_state_V_ce1();
    void thread_state_V_d0();
    void thread_state_V_d1();
    void thread_state_V_we0();
    void thread_state_V_we1();
    void thread_xor_ln110_fu_288_p2();
    void thread_zext_ln100_1_fu_249_p1();
    void thread_zext_ln100_fu_254_p1();
    void thread_zext_ln106_fu_265_p1();
    void thread_zext_ln110_fu_298_p1();
    void thread_zext_ln91_fu_207_p1();
    void thread_zext_ln97_fu_224_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
