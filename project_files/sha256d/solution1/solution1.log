==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xqzu5ev-ffrb900-1-i'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'sha256d/sha256.c' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from sha256d/sha256.c:1:
sha256d/sha256.c:96:14: error: redefinition of 'i'
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:90:14: note: previous definition is here
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:99:14: error: redefinition of 'i'
    for (int i = 0; i < 16; i++) {
             ^
sha256d/sha256.c:90:14: note: previous definition is here
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:105:14: error: redefinition of 'i'
    for (int i = 17; i < 56; i++) {
             ^
sha256d/sha256.c:90:14: note: previous definition is here
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:109:14: error: redefinition of 'i'
    for (int i = 0; i < 8; i++) {
             ^
sha256d/sha256.c:90:14: note: previous definition is here
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:146:13: warning: passing 'volatile uint8_t [80]' to parameter of type 'const uint8_t *' (aka 'const unsigned char *') discards qualifiers [-Wincompatible-pointer-types]
    sha256d(input_memory, output_memory);
            ^~~~~~~~~~~~
sha256d/sha256.c:134:28: note: passing argument to parameter 'input' here
void sha256d(const uint8_t input[], uint8_t output[]) {
                           ^
sha256d/sha256.c:146:27: warning: passing 'volatile uint8_t [32]' to parameter of type 'uint8_t *' (aka 'unsigned char *') discards qualifiers [-Wincompatible-pointer-types]
    sha256d(input_memory, output_memory);
                          ^~~~~~~~~~~~~
sha256d/sha256.c:134:45: note: passing argument to parameter 'output' here
void sha256d(const uint8_t input[], uint8_t output[]) {
                                            ^
2 warnings and 4 errors generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xqzu5ev-ffrb900-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'sha256d/sha256.c' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from sha256d/sha256.c:1:
sha256d/sha256.c:2:14: error: unknown type name 'uint32_t'
static const uint32_t K[] = {
             ^
sha256d/sha256.c:31:23: error: unknown type name 'uint32_t'
void sha256_transform(uint32_t state[8], const uint8_t data[]) {
                      ^
sha256d/sha256.c:31:48: error: unknown type name 'uint8_t'
void sha256_transform(uint32_t state[8], const uint8_t data[]) {
                                               ^
sha256d/sha256.c:32:5: error: use of undeclared identifier 'uint32_t'
    uint32_t a, b, c, d, e, f, g, h, i, j, t1, t2, m[64];
    ^
sha256d/sha256.c:34:10: error: use of undeclared identifier 'i'
    for (i = 0, j = 0; i < 16; ++i, j += 4)
         ^
sha256d/sha256.c:34:17: error: use of undeclared identifier 'j'
    for (i = 0, j = 0; i < 16; ++i, j += 4)
                ^
sha256d/sha256.c:34:24: error: use of undeclared identifier 'i'
    for (i = 0, j = 0; i < 16; ++i, j += 4)
                       ^
sha256d/sha256.c:34:34: error: use of undeclared identifier 'i'
    for (i = 0, j = 0; i < 16; ++i, j += 4)
                                 ^
sha256d/sha256.c:34:37: error: use of undeclared identifier 'j'
    for (i = 0, j = 0; i < 16; ++i, j += 4)
                                    ^
sha256d/sha256.c:35:9: error: use of undeclared identifier 'm'
        m[i] = (data[j] << 24) | (data[j + 1] << 16) | (data[j + 2] << 8) | (data[j + 3]);
        ^
sha256d/sha256.c:35:11: error: use of undeclared identifier 'i'
        m[i] = (data[j] << 24) | (data[j + 1] << 16) | (data[j + 2] << 8) | (data[j + 3]);
          ^
sha256d/sha256.c:35:22: error: use of undeclared identifier 'j'
        m[i] = (data[j] << 24) | (data[j + 1] << 16) | (data[j + 2] << 8) | (data[j + 3]);
                     ^
sha256d/sha256.c:35:40: error: use of undeclared identifier 'j'
        m[i] = (data[j] << 24) | (data[j + 1] << 16) | (data[j + 2] << 8) | (data[j + 3]);
                                       ^
sha256d/sha256.c:35:62: error: use of undeclared identifier 'j'
        m[i] = (data[j] << 24) | (data[j + 1] << 16) | (data[j + 2] << 8) | (data[j + 3]);
                                                             ^
sha256d/sha256.c:35:83: error: use of undeclared identifier 'j'
        m[i] = (data[j] << 24) | (data[j + 1] << 16) | (data[j + 2] << 8) | (data[j + 3]);
                                                                                  ^
sha256d/sha256.c:36:12: error: use of undeclared identifier 'i'
    for (; i < 64; ++i)
           ^
sha256d/sha256.c:36:22: error: use of undeclared identifier 'i'
    for (; i < 64; ++i)
                     ^
sha256d/sha256.c:37:9: error: use of undeclared identifier 'm'
        m[i] = ((((m[i - 2]) >> (17)) | ((m[i - 2]) << (32 -(17)))) ^ (((m[i - 2]) >> (19)) | ((m[i - 2]) << (32 -(19)))) ^ ((m[i - 2]) >> 10)) + m[i - 7] + ((((m[i - 15]) >> (7)) | ((m[i - 15]) << (32 -(7)))) ^ (((m[i - 15]) >> (18)) | ((m[i - 15]) << (32 -(18)))) ^ ((m[i - 15]) >> 3)) + m[i - 16];
        ^
sha256d/sha256.c:37:11: error: use of undeclared identifier 'i'
        m[i] = ((((m[i - 2]) >> (17)) | ((m[i - 2]) << (32 -(17)))) ^ (((m[i - 2]) >> (19)) | ((m[i - 2]) << (32 -(19)))) ^ ((m[i - 2]) >> 10)) + m[i - 7] + ((((m[i - 15]) >> (7)) | ((m[i - 15]) << (32 -(7)))) ^ (((m[i - 15]) >> (18)) | ((m[i - 15]) << (32 -(18)))) ^ ((m[i - 15]) >> 3)) + m[i - 16];
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xqzu5ev-ffrb900-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'sha256d/sha256.c' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from sha256d/sha256.c:1:
sha256d/sha256.c:33:48: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
void sha256_transform(uint32_t state[8], const uint8_t data[]) {
                                               ^~~~~~~
                                               uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:86:45: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
void sha256_update(uint32_t state[8], const uint8_t data[]) {
                                            ^~~~~~~
                                            uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:87:5: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
    uint8_t block[64];
    ^~~~~~~
    uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:96:14: error: redefinition of 'i'
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:90:14: note: previous definition is here
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:99:14: error: redefinition of 'i'
    for (int i = 0; i < 16; i++) {
             ^
sha256d/sha256.c:90:14: note: previous definition is here
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:105:14: error: redefinition of 'i'
    for (int i = 17; i < 56; i++) {
             ^
sha256d/sha256.c:90:14: note: previous definition is here
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:108:5: error: unknown type name 'uint64_t'; did you mean 'uint32_t'?
    uint64_t len_be = __builtin_bswap64(80 * 8);
    ^~~~~~~~
    uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:109:14: error: redefinition of 'i'
    for (int i = 0; i < 8; i++) {
             ^
sha256d/sha256.c:90:14: note: previous definition is here
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:116:38: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
void sha256_final(uint32_t state[8], uint8_t hash[]) {
                                     ^~~~~~~
                                     uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:126:19: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
void sha256(const uint8_t data[], uint8_t hash[]) {
                  ^~~~~~~
                  uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:126:35: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
void sha256(const uint8_t data[], uint8_t hash[]) {
                                  ^~~~~~~
                                  uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:134:20: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
void sha256d(const uint8_t input[], uint8_t output[]) {
                   ^~~~~~~
                   uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:134:37: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
void sha256d(const uint8_t input[], uint8_t output[]) {
                                    ^~~~~~~
                                    uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:135:5: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
    uint8_t hash1[32];
    ^~~~~~~
    uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:141:10: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
volatile uint8_t input_memory[80];
         ^~~~~~~
         uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:142:10: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
volatile uint8_t output_memory[32];
         ^~~~~~~
         uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:146:13: warning: passing 'volatile uint32_t [80]' to parameter of type 'const uint32_t *' (aka 'const unsigned int *') discards qualifiers [-Wincompatible-pointer-types]
    sha256d(input_memory, output_memory);
            ^~~~~~~~~~~~
sha256d/sha256.c:134:28: note: passing argument to parameter 'input' here
void sha256d(const uint8_t input[], uint8_t output[]) {
                           ^
sha256d/sha256.c:146:27: warning: passing 'volatile uint32_t [32]' to parameter of type 'uint32_t *' (aka 'unsigned int *') discards qualifiers [-Wincompatible-pointer-types]
    sha256d(input_memory, output_memory);
                          ^~~~~~~~~~~~~
sha256d/sha256.c:134:45: note: passing argument to parameter 'output' here
void sha256d(const uint8_t input[], uint8_t output[]) {
                                            ^
2 warnings and 16 errors generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xqzu5ev-ffrb900-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'sha256d/sha256d.cpp' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from sha256d/sha256d.cpp:1:
sha256d/sha256d.cpp:109:5: error: use of undeclared identifier 'uint64_t'
    uint64_t len_be = __builtin_bswap64(80 * 8);
    ^
sha256d/sha256d.cpp:111:26: error: use of undeclared identifier 'len_be'
        block[56 + i] = (len_be >> (56 - 8 * i)) & 0xFF;
                         ^
2 errors generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xqzu5ev-ffrb900-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'sha256d/sha256d.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:09 . Memory (MB): peak = 979.781 ; gain = 883.566
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:09 . Memory (MB): peak = 979.781 ; gain = 883.566
INFO: [HLS 200-10] Starting code transformations ...
ERROR: [SYNCHK 200-79] Cannot find the top function 'main' in the design. Possible causes are: (1) the top function name is misspelled; (2) the top function is nonexistent or declared as static.
ERROR: [HLS 200-70] Synthesizability check failed.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xqzu5ev-ffrb900-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'sha256d/sha256d.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:08 . Memory (MB): peak = 979.758 ; gain = 883.523
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:08 . Memory (MB): peak = 979.758 ; gain = 883.523
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:09 . Memory (MB): peak = 979.758 ; gain = 883.523
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'sha256_init' into 'sha256.1' (sha256d/sha256d.cpp:129) automatically.
INFO: [XFORM 203-602] Inlining function 'sha256_final' into 'sha256.1' (sha256d/sha256d.cpp:131) automatically.
INFO: [XFORM 203-602] Inlining function 'sha256_init' into 'sha256' (sha256d/sha256d.cpp:129) automatically.
INFO: [XFORM 203-602] Inlining function 'sha256_final.1' into 'sha256' (sha256d/sha256d.cpp:131) automatically.
INFO: [XFORM 203-602] Inlining function 'sha256.1' into 'sha256d' (sha256d/sha256d.cpp:137) automatically.
INFO: [XFORM 203-602] Inlining function 'sha256' into 'sha256d' (sha256d/sha256d.cpp:138) automatically.
ERROR: [SYNCHK 200-61] sha256d/sha256d.cpp:119: unsupported memory access on variable 'hash.V' which is (or contains) an array with unknown size at compile time.
INFO: [SYNCHK 200-10] 1 error(s), 0 warning(s).
ERROR: [HLS 200-70] Synthesizability check failed.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xqzu5ev-ffrb900-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'sha256d/sha256d.cpp' ... 
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:08 . Memory (MB): peak = 979.273 ; gain = 882.902
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:08 . Memory (MB): peak = 979.273 ; gain = 882.902
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:09 . Memory (MB): peak = 979.273 ; gain = 882.902
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [XFORM 203-602] Inlining function 'sha256_init' into 'sha256.1' (sha256d/sha256d.cpp:128) automatically.
INFO: [XFORM 203-602] Inlining function 'sha256_final' into 'sha256.1' (sha256d/sha256d.cpp:130) automatically.
INFO: [XFORM 203-602] Inlining function 'sha256_init' into 'sha256' (sha256d/sha256d.cpp:128) automatically.
INFO: [XFORM 203-602] Inlining function 'sha256_final' into 'sha256' (sha256d/sha256d.cpp:130) automatically.
INFO: [XFORM 203-602] Inlining function 'sha256.1' into 'sha256d' (sha256d/sha256d.cpp:136) automatically.
INFO: [XFORM 203-602] Inlining function 'sha256' into 'sha256d' (sha256d/sha256d.cpp:137) automatically.
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:09 . Memory (MB): peak = 979.273 ; gain = 882.902
INFO: [XFORM 203-602] Inlining function 'sha256_init' into 'sha256.1' (sha256d/sha256d.cpp:128) automatically.
INFO: [XFORM 203-602] Inlining function 'sha256_final' into 'sha256.1' (sha256d/sha256d.cpp:130) automatically.
INFO: [XFORM 203-602] Inlining function 'sha256_init' into 'sha256' (sha256d/sha256d.cpp:128) automatically.
INFO: [XFORM 203-602] Inlining function 'sha256_final' into 'sha256' (sha256d/sha256d.cpp:130) automatically.
INFO: [XFORM 203-602] Inlining function 'sha256.1' into 'sha256d' (sha256d/sha256d.cpp:136) automatically.
INFO: [XFORM 203-602] Inlining function 'sha256' into 'sha256d' (sha256d/sha256d.cpp:137) automatically.
WARNING: [ANALYSIS 214-31] The program may have out of bound access of array variable 'data.V' in function 'sha256_update.1' (sha256d/sha256d.cpp:91:9).
INFO: [XFORM 203-11] Balancing expressions in function 'sha256_transform' (sha256d/sha256d.cpp:33)...10 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:09 . Memory (MB): peak = 979.273 ; gain = 882.902
INFO: [HLS 200-472] Inferring partial write operation for 'state.V' (sha256d/sha256d.cpp:75:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V' (sha256d/sha256d.cpp:76:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V' (sha256d/sha256d.cpp:77:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V' (sha256d/sha256d.cpp:78:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V' (sha256d/sha256d.cpp:79:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V' (sha256d/sha256d.cpp:80:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V' (sha256d/sha256d.cpp:81:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V' (sha256d/sha256d.cpp:82:5)
INFO: [HLS 200-472] Inferring partial write operation for 'hash1.V' (sha256d/sha256d.cpp:118:24)
INFO: [HLS 200-472] Inferring partial write operation for 'hash1.V' (sha256d/sha256d.cpp:119:28)
INFO: [HLS 200-472] Inferring partial write operation for 'hash1.V' (sha256d/sha256d.cpp:120:28)
INFO: [HLS 200-472] Inferring partial write operation for 'hash1.V' (sha256d/sha256d.cpp:121:27)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V.1' (sha256d/sha256d.cpp:75:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V.1' (sha256d/sha256d.cpp:76:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V.1' (sha256d/sha256d.cpp:77:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V.1' (sha256d/sha256d.cpp:78:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V.1' (sha256d/sha256d.cpp:79:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V.1' (sha256d/sha256d.cpp:80:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V.1' (sha256d/sha256d.cpp:81:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V.1' (sha256d/sha256d.cpp:82:5)
INFO: [HLS 200-472] Inferring partial write operation for 'block.V' (sha256d/sha256d.cpp:91:9)
INFO: [HLS 200-472] Inferring partial write operation for 'block.V' (sha256d/sha256d.cpp:97:9)
INFO: [HLS 200-472] Inferring partial write operation for 'block.V' (sha256d/sha256d.cpp:100:9)
INFO: [HLS 200-472] Inferring partial write operation for 'block.V' (sha256d/sha256d.cpp:104:5)
INFO: [HLS 200-472] Inferring partial write operation for 'block.V' (sha256d/sha256d.cpp:106:9)
INFO: [HLS 200-472] Inferring partial write operation for 'block.V' (sha256d/sha256d.cpp:110:26)
INFO: [HLS 200-472] Inferring partial write operation for 'm.V' (sha256d/sha256d.cpp:37:83)
INFO: [HLS 200-472] Inferring partial write operation for 'm.V' (sha256d/sha256d.cpp:39)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V' (sha256d/sha256d.cpp:63:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V' (sha256d/sha256d.cpp:64:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V' (sha256d/sha256d.cpp:65:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V' (sha256d/sha256d.cpp:66:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V' (sha256d/sha256d.cpp:67:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V' (sha256d/sha256d.cpp:68:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V' (sha256d/sha256d.cpp:69:5)
INFO: [HLS 200-472] Inferring partial write operation for 'state.V' (sha256d/sha256d.cpp:70:5)
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:01 ; elapsed = 00:00:10 . Memory (MB): peak = 979.273 ; gain = 882.902
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'sha256d' ...
WARNING: [SYN 201-103] Legalizing function name 'sha256_update.1' to 'sha256_update_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'sha256_transform' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 9.892 seconds; current allocated memory: 170.350 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.119 seconds; current allocated memory: 170.915 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'sha256_update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.145 seconds; current allocated memory: 171.114 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.085 seconds; current allocated memory: 171.350 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'sha256_update_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.126 seconds; current allocated memory: 171.564 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.101 seconds; current allocated memory: 171.799 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'sha256d' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.125 seconds; current allocated memory: 172.120 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.157 seconds; current allocated memory: 172.464 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'sha256_transform' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'sha256_transform_K_V' to 'sha256_transform_bkb' due to the length limit 20
INFO: [SYN 201-210] Renamed object name 'sha256_transform_m_V' to 'sha256_transform_cud' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'sha256_transform'.
INFO: [HLS 200-111]  Elapsed time: 0.185 seconds; current allocated memory: 173.509 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'sha256_update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'sha256_update_block_V' to 'sha256_update_blodEe' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'sha256_update'.
INFO: [HLS 200-111]  Elapsed time: 0.375 seconds; current allocated memory: 175.999 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'sha256_update_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SYN 201-210] Renamed object name 'sha256_update_1_block_V' to 'sha256_update_1_beOg' due to the length limit 20
INFO: [RTGEN 206-100] Finished creating RTL model for 'sha256_update_1'.
INFO: [HLS 200-111]  Elapsed time: 0.235 seconds; current allocated memory: 177.269 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'sha256d' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'sha256d/input_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'sha256d/output_V' to 'ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on function 'sha256d' to 'ap_ctrl_hs'.
INFO: [RTGEN 206-100] Finished creating RTL model for 'sha256d'.
INFO: [HLS 200-111]  Elapsed time: 0.264 seconds; current allocated memory: 178.926 MB.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 208.51 MHz
INFO: [RTMG 210-279] Implementing memory 'sha256_transform_bkb_rom' using auto ROMs.
INFO: [RTMG 210-278] Implementing memory 'sha256_transform_cud_ram (RAM)' using block RAMs.
INFO: [RTMG 210-278] Implementing memory 'sha256_update_blodEe_ram (RAM)' using distributed RAMs.
INFO: [RTMG 210-278] Implementing memory 'sha256d_state_V_1_ram (RAM)' using block RAMs.
INFO: [RTMG 210-278] Implementing memory 'sha256d_hash1_V_ram (RAM)' using block RAMs.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:01 ; elapsed = 00:00:13 . Memory (MB): peak = 979.273 ; gain = 882.902
INFO: [VHDL 208-304] Generating VHDL RTL for sha256d.
INFO: [VLOG 209-307] Generating Verilog RTL for sha256d.
INFO: [HLS 200-112] Total elapsed time: 13.56 seconds; peak allocated memory: 178.926 MB.
