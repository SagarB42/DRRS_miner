==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xqzu5ev-ffrb900-1-i'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'sha256d/sha256.c' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from sha256d/sha256.c:1:
sha256d/sha256.c:96:14: error: redefinition of 'i'
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:90:14: note: previous definition is here
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:99:14: error: redefinition of 'i'
    for (int i = 0; i < 16; i++) {
             ^
sha256d/sha256.c:90:14: note: previous definition is here
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:105:14: error: redefinition of 'i'
    for (int i = 17; i < 56; i++) {
             ^
sha256d/sha256.c:90:14: note: previous definition is here
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:109:14: error: redefinition of 'i'
    for (int i = 0; i < 8; i++) {
             ^
sha256d/sha256.c:90:14: note: previous definition is here
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:146:13: warning: passing 'volatile uint8_t [80]' to parameter of type 'const uint8_t *' (aka 'const unsigned char *') discards qualifiers [-Wincompatible-pointer-types]
    sha256d(input_memory, output_memory);
            ^~~~~~~~~~~~
sha256d/sha256.c:134:28: note: passing argument to parameter 'input' here
void sha256d(const uint8_t input[], uint8_t output[]) {
                           ^
sha256d/sha256.c:146:27: warning: passing 'volatile uint8_t [32]' to parameter of type 'uint8_t *' (aka 'unsigned char *') discards qualifiers [-Wincompatible-pointer-types]
    sha256d(input_memory, output_memory);
                          ^~~~~~~~~~~~~
sha256d/sha256.c:134:45: note: passing argument to parameter 'output' here
void sha256d(const uint8_t input[], uint8_t output[]) {
                                            ^
2 warnings and 4 errors generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xqzu5ev-ffrb900-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'sha256d/sha256.c' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from sha256d/sha256.c:1:
sha256d/sha256.c:2:14: error: unknown type name 'uint32_t'
static const uint32_t K[] = {
             ^
sha256d/sha256.c:31:23: error: unknown type name 'uint32_t'
void sha256_transform(uint32_t state[8], const uint8_t data[]) {
                      ^
sha256d/sha256.c:31:48: error: unknown type name 'uint8_t'
void sha256_transform(uint32_t state[8], const uint8_t data[]) {
                                               ^
sha256d/sha256.c:32:5: error: use of undeclared identifier 'uint32_t'
    uint32_t a, b, c, d, e, f, g, h, i, j, t1, t2, m[64];
    ^
sha256d/sha256.c:34:10: error: use of undeclared identifier 'i'
    for (i = 0, j = 0; i < 16; ++i, j += 4)
         ^
sha256d/sha256.c:34:17: error: use of undeclared identifier 'j'
    for (i = 0, j = 0; i < 16; ++i, j += 4)
                ^
sha256d/sha256.c:34:24: error: use of undeclared identifier 'i'
    for (i = 0, j = 0; i < 16; ++i, j += 4)
                       ^
sha256d/sha256.c:34:34: error: use of undeclared identifier 'i'
    for (i = 0, j = 0; i < 16; ++i, j += 4)
                                 ^
sha256d/sha256.c:34:37: error: use of undeclared identifier 'j'
    for (i = 0, j = 0; i < 16; ++i, j += 4)
                                    ^
sha256d/sha256.c:35:9: error: use of undeclared identifier 'm'
        m[i] = (data[j] << 24) | (data[j + 1] << 16) | (data[j + 2] << 8) | (data[j + 3]);
        ^
sha256d/sha256.c:35:11: error: use of undeclared identifier 'i'
        m[i] = (data[j] << 24) | (data[j + 1] << 16) | (data[j + 2] << 8) | (data[j + 3]);
          ^
sha256d/sha256.c:35:22: error: use of undeclared identifier 'j'
        m[i] = (data[j] << 24) | (data[j + 1] << 16) | (data[j + 2] << 8) | (data[j + 3]);
                     ^
sha256d/sha256.c:35:40: error: use of undeclared identifier 'j'
        m[i] = (data[j] << 24) | (data[j + 1] << 16) | (data[j + 2] << 8) | (data[j + 3]);
                                       ^
sha256d/sha256.c:35:62: error: use of undeclared identifier 'j'
        m[i] = (data[j] << 24) | (data[j + 1] << 16) | (data[j + 2] << 8) | (data[j + 3]);
                                                             ^
sha256d/sha256.c:35:83: error: use of undeclared identifier 'j'
        m[i] = (data[j] << 24) | (data[j + 1] << 16) | (data[j + 2] << 8) | (data[j + 3]);
                                                                                  ^
sha256d/sha256.c:36:12: error: use of undeclared identifier 'i'
    for (; i < 64; ++i)
           ^
sha256d/sha256.c:36:22: error: use of undeclared identifier 'i'
    for (; i < 64; ++i)
                     ^
sha256d/sha256.c:37:9: error: use of undeclared identifier 'm'
        m[i] = ((((m[i - 2]) >> (17)) | ((m[i - 2]) << (32 -(17)))) ^ (((m[i - 2]) >> (19)) | ((m[i - 2]) << (32 -(19)))) ^ ((m[i - 2]) >> 10)) + m[i - 7] + ((((m[i - 15]) >> (7)) | ((m[i - 15]) << (32 -(7)))) ^ (((m[i - 15]) >> (18)) | ((m[i - 15]) << (32 -(18)))) ^ ((m[i - 15]) >> 3)) + m[i - 16];
        ^
sha256d/sha256.c:37:11: error: use of undeclared identifier 'i'
        m[i] = ((((m[i - 2]) >> (17)) | ((m[i - 2]) << (32 -(17)))) ^ (((m[i - 2]) >> (19)) | ((m[i - 2]) << (32 -(19)))) ^ ((m[i - 2]) >> 10)) + m[i - 7] + ((((m[i - 15]) >> (7)) | ((m[i - 15]) << (32 -(7)))) ^ (((m[i - 15]) >> (18)) | ((m[i - 15]) << (32 -(18)))) ^ ((m[i - 15]) >> 3)) + m[i - 16];
          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
==============================================================
Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xqzu5ev-ffrb900-1-i'
INFO: [SCHED 204-61] Option 'relax_ii_for_timing' is enabled, will increase II to preserve clock frequency constraints.
INFO: [HLS 200-10] Analyzing design file 'sha256d/sha256.c' ... 
ERROR: [HLS 200-70] Compilation errors found: In file included from sha256d/sha256.c:1:
sha256d/sha256.c:33:48: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
void sha256_transform(uint32_t state[8], const uint8_t data[]) {
                                               ^~~~~~~
                                               uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:86:45: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
void sha256_update(uint32_t state[8], const uint8_t data[]) {
                                            ^~~~~~~
                                            uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:87:5: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
    uint8_t block[64];
    ^~~~~~~
    uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:96:14: error: redefinition of 'i'
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:90:14: note: previous definition is here
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:99:14: error: redefinition of 'i'
    for (int i = 0; i < 16; i++) {
             ^
sha256d/sha256.c:90:14: note: previous definition is here
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:105:14: error: redefinition of 'i'
    for (int i = 17; i < 56; i++) {
             ^
sha256d/sha256.c:90:14: note: previous definition is here
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:108:5: error: unknown type name 'uint64_t'; did you mean 'uint32_t'?
    uint64_t len_be = __builtin_bswap64(80 * 8);
    ^~~~~~~~
    uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:109:14: error: redefinition of 'i'
    for (int i = 0; i < 8; i++) {
             ^
sha256d/sha256.c:90:14: note: previous definition is here
    for (int i = 0; i < 64; i++) {
             ^
sha256d/sha256.c:116:38: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
void sha256_final(uint32_t state[8], uint8_t hash[]) {
                                     ^~~~~~~
                                     uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:126:19: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
void sha256(const uint8_t data[], uint8_t hash[]) {
                  ^~~~~~~
                  uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:126:35: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
void sha256(const uint8_t data[], uint8_t hash[]) {
                                  ^~~~~~~
                                  uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:134:20: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
void sha256d(const uint8_t input[], uint8_t output[]) {
                   ^~~~~~~
                   uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:134:37: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
void sha256d(const uint8_t input[], uint8_t output[]) {
                                    ^~~~~~~
                                    uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:135:5: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
    uint8_t hash1[32];
    ^~~~~~~
    uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:141:10: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
volatile uint8_t input_memory[80];
         ^~~~~~~
         uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:142:10: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?
volatile uint8_t output_memory[32];
         ^~~~~~~
         uint32_t
sha256d/sha256.c:1:22: note: 'uint32_t' declared here
typedef unsigned int uint32_t;
                     ^
sha256d/sha256.c:146:13: warning: passing 'volatile uint32_t [80]' to parameter of type 'const uint32_t *' (aka 'const unsigned int *') discards qualifiers [-Wincompatible-pointer-types]
    sha256d(input_memory, output_memory);
            ^~~~~~~~~~~~
sha256d/sha256.c:134:28: note: passing argument to parameter 'input' here
void sha256d(const uint8_t input[], uint8_t output[]) {
                           ^
sha256d/sha256.c:146:27: warning: passing 'volatile uint32_t [32]' to parameter of type 'uint32_t *' (aka 'unsigned int *') discards qualifiers [-Wincompatible-pointer-types]
    sha256d(input_memory, output_memory);
                          ^~~~~~~~~~~~~
sha256d/sha256.c:134:45: note: passing argument to parameter 'output' here
void sha256d(const uint8_t input[], uint8_t output[]) {
                                            ^
2 warnings and 16 errors generated.
