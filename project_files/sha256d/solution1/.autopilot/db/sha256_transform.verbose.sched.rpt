

================================================================
== Vivado HLS Report for 'sha256_transform'
================================================================
* Date:           Sat Jul 27 12:36:34 2024

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        sha256d
* Solution:       solution1
* Product family: zynquplus
* Target device:  xqzu5ev-ffrb900-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 4.796 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      314|      314| 3.140 us | 3.140 us |  314|  314|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |       32|       32|         2|          -|          -|    16|    no    |
        |- Loop 2  |      144|      144|         3|          -|          -|    48|    no    |
        |- Loop 3  |      128|      128|         2|          -|          -|    64|    no    |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 15
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 4 
3 --> 2 
4 --> 5 7 
5 --> 6 
6 --> 4 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 13 
12 --> 11 
13 --> 14 
14 --> 15 
15 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.75>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%state_V_addr = getelementptr [8 x i32]* %state_V, i64 0, i64 0" [sha256d/sha256d.cpp:33]   --->   Operation 16 'getelementptr' 'state_V_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%m_V = alloca [64 x i32], align 4" [sha256d/sha256d.cpp:34]   --->   Operation 17 'alloca' 'm_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_1 : Operation 18 [1/1] (0.75ns)   --->   "br label %.preheader2532" [sha256d/sha256d.cpp:36]   --->   Operation 18 'br' <Predicate = true> <Delay = 0.75>

State 2 <SV = 1> <Delay = 0.89>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%p_0262_0 = phi i7 [ %j_V, %_ZlsILi8ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit203 ], [ 0, %.preheader2532.preheader ]"   --->   Operation 19 'phi' 'p_0262_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%p_01115_0 = phi i5 [ %add_ln700, %_ZlsILi8ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit203 ], [ 0, %.preheader2532.preheader ]" [sha256d/sha256d.cpp:36]   --->   Operation 20 'phi' 'p_01115_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.87ns)   --->   "%icmp_ln887 = icmp eq i5 %p_01115_0, -16" [sha256d/sha256d.cpp:36]   --->   Operation 21 'icmp' 'icmp_ln887' <Predicate = true> <Delay = 0.87> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 22 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.87ns)   --->   "%add_ln700 = add i5 %p_01115_0, 1" [sha256d/sha256d.cpp:36]   --->   Operation 23 'add' 'add_ln700' <Predicate = true> <Delay = 0.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "br i1 %icmp_ln887, label %.preheader.preheader, label %_ZlsILi8ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit203" [sha256d/sha256d.cpp:36]   --->   Operation 24 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%trunc_ln215 = trunc i7 %p_0262_0 to i6" [sha256d/sha256d.cpp:37]   --->   Operation 25 'trunc' 'trunc_ln215' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%ret_V = or i6 %trunc_ln215, 3" [sha256d/sha256d.cpp:37]   --->   Operation 26 'or' 'ret_V' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln544_1 = zext i6 %ret_V to i64" [sha256d/sha256d.cpp:37]   --->   Operation 27 'zext' 'zext_ln544_1' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%data_V_addr = getelementptr [64 x i8]* %data_V, i64 0, i64 %zext_ln544_1" [sha256d/sha256d.cpp:37]   --->   Operation 28 'getelementptr' 'data_V_addr' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_2 : Operation 29 [2/2] (0.79ns)   --->   "%rhs_V_14 = load i8* %data_V_addr, align 1" [sha256d/sha256d.cpp:37]   --->   Operation 29 'load' 'rhs_V_14' <Predicate = (!icmp_ln887)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 30 [1/1] (0.89ns)   --->   "%j_V = add i7 4, %p_0262_0" [sha256d/sha256d.cpp:36]   --->   Operation 30 'add' 'j_V' <Predicate = (!icmp_ln887)> <Delay = 0.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.75ns)   --->   "br label %.preheader" [sha256d/sha256d.cpp:38]   --->   Operation 31 'br' <Predicate = (icmp_ln887)> <Delay = 0.75>

State 3 <SV = 2> <Delay = 2.14>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln544 = zext i5 %p_01115_0 to i64" [sha256d/sha256d.cpp:37]   --->   Operation 32 'zext' 'zext_ln544' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/2] (0.79ns)   --->   "%rhs_V_14 = load i8* %data_V_addr, align 1" [sha256d/sha256d.cpp:37]   --->   Operation 33 'load' 'rhs_V_14' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln209 = zext i8 %rhs_V_14 to i32" [sha256d/sha256d.cpp:37]   --->   Operation 34 'zext' 'zext_ln209' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%m_V_addr = getelementptr [64 x i32]* %m_V, i64 0, i64 %zext_ln544" [sha256d/sha256d.cpp:37]   --->   Operation 35 'getelementptr' 'm_V_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (1.35ns)   --->   "store i32 %zext_ln209, i32* %m_V_addr, align 4" [sha256d/sha256d.cpp:37]   --->   Operation 36 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "br label %.preheader2532" [sha256d/sha256d.cpp:36]   --->   Operation 37 'br' <Predicate = true> <Delay = 0.00>

State 4 <SV = 2> <Delay = 2.23>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%p_01115_1 = phi i7 [ %i_V, %_ZrsILi32ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit177 ], [ 16, %.preheader.preheader ]"   --->   Operation 38 'phi' 'p_01115_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.86ns)   --->   "%icmp_ln38 = icmp eq i7 %p_01115_1, -64" [sha256d/sha256d.cpp:38]   --->   Operation 39 'icmp' 'icmp_ln38' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%empty_14 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 48, i64 48, i64 48)"   --->   Operation 40 'speclooptripcount' 'empty_14' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "br i1 %icmp_ln38, label %0, label %_ZrsILi32ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit177" [sha256d/sha256d.cpp:38]   --->   Operation 41 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%trunc_ln215_1 = trunc i7 %p_01115_1 to i6" [sha256d/sha256d.cpp:39]   --->   Operation 42 'trunc' 'trunc_ln215_1' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.88ns)   --->   "%ret_V_2 = add i6 -2, %trunc_ln215_1" [sha256d/sha256d.cpp:39]   --->   Operation 43 'add' 'ret_V_2' <Predicate = (!icmp_ln38)> <Delay = 0.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln544_3 = zext i6 %ret_V_2 to i64" [sha256d/sha256d.cpp:39]   --->   Operation 44 'zext' 'zext_ln544_3' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%m_V_addr_1 = getelementptr [64 x i32]* %m_V, i64 0, i64 %zext_ln544_3" [sha256d/sha256d.cpp:39]   --->   Operation 45 'getelementptr' 'm_V_addr_1' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_4 : Operation 46 [2/2] (1.35ns)   --->   "%m_V_load = load i32* %m_V_addr_1, align 4" [sha256d/sha256d.cpp:39]   --->   Operation 46 'load' 'm_V_load' <Predicate = (!icmp_ln38)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_4 : Operation 47 [1/1] (0.88ns)   --->   "%ret_V_6 = add i6 -7, %trunc_ln215_1" [sha256d/sha256d.cpp:39]   --->   Operation 47 'add' 'ret_V_6' <Predicate = (!icmp_ln38)> <Delay = 0.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln544_4 = zext i6 %ret_V_6 to i64" [sha256d/sha256d.cpp:39]   --->   Operation 48 'zext' 'zext_ln544_4' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%m_V_addr_2 = getelementptr [64 x i32]* %m_V, i64 0, i64 %zext_ln544_4" [sha256d/sha256d.cpp:39]   --->   Operation 49 'getelementptr' 'm_V_addr_2' <Predicate = (!icmp_ln38)> <Delay = 0.00>
ST_4 : Operation 50 [2/2] (1.35ns)   --->   "%m_V_load_1 = load i32* %m_V_addr_2, align 4" [sha256d/sha256d.cpp:39]   --->   Operation 50 'load' 'm_V_load_1' <Predicate = (!icmp_ln38)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_4 : Operation 51 [2/2] (0.79ns)   --->   "%a_V = load i32* %state_V_addr, align 4" [sha256d/sha256d.cpp:41]   --->   Operation 51 'load' 'a_V' <Predicate = (icmp_ln38)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%state_V_addr_1 = getelementptr [8 x i32]* %state_V, i64 0, i64 1" [sha256d/sha256d.cpp:42]   --->   Operation 52 'getelementptr' 'state_V_addr_1' <Predicate = (icmp_ln38)> <Delay = 0.00>
ST_4 : Operation 53 [2/2] (0.79ns)   --->   "%b_V = load i32* %state_V_addr_1, align 4" [sha256d/sha256d.cpp:42]   --->   Operation 53 'load' 'b_V' <Predicate = (icmp_ln38)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 5 <SV = 3> <Delay = 2.23>
ST_5 : Operation 54 [1/2] (1.35ns)   --->   "%m_V_load = load i32* %m_V_addr_1, align 4" [sha256d/sha256d.cpp:39]   --->   Operation 54 'load' 'm_V_load' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_5 : Operation 55 [1/2] (1.35ns)   --->   "%m_V_load_1 = load i32* %m_V_addr_2, align 4" [sha256d/sha256d.cpp:39]   --->   Operation 55 'load' 'm_V_load_1' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_5 : Operation 56 [1/1] (0.88ns)   --->   "%ret_V_7 = add i6 -15, %trunc_ln215_1" [sha256d/sha256d.cpp:39]   --->   Operation 56 'add' 'ret_V_7' <Predicate = true> <Delay = 0.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln544_5 = zext i6 %ret_V_7 to i64" [sha256d/sha256d.cpp:39]   --->   Operation 57 'zext' 'zext_ln544_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%m_V_addr_3 = getelementptr [64 x i32]* %m_V, i64 0, i64 %zext_ln544_5" [sha256d/sha256d.cpp:39]   --->   Operation 58 'getelementptr' 'm_V_addr_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 59 [2/2] (1.35ns)   --->   "%m_V_load_2 = load i32* %m_V_addr_3, align 4" [sha256d/sha256d.cpp:39]   --->   Operation 59 'load' 'm_V_load_2' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_5 : Operation 60 [1/1] (0.88ns)   --->   "%ret_V_11 = add i6 -16, %trunc_ln215_1" [sha256d/sha256d.cpp:39]   --->   Operation 60 'add' 'ret_V_11' <Predicate = true> <Delay = 0.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln544_7 = zext i6 %ret_V_11 to i64" [sha256d/sha256d.cpp:39]   --->   Operation 61 'zext' 'zext_ln544_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%m_V_addr_4 = getelementptr [64 x i32]* %m_V, i64 0, i64 %zext_ln544_7" [sha256d/sha256d.cpp:39]   --->   Operation 62 'getelementptr' 'm_V_addr_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 63 [2/2] (1.35ns)   --->   "%m_V_load_3 = load i32* %m_V_addr_4, align 4" [sha256d/sha256d.cpp:39]   --->   Operation 63 'load' 'm_V_load_3' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 6 <SV = 4> <Delay = 4.79>
ST_6 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln544_2 = zext i7 %p_01115_1 to i64" [sha256d/sha256d.cpp:39]   --->   Operation 64 'zext' 'zext_ln544_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%r_V = call i15 @_ssdm_op_PartSelect.i15.i32.i32.i32(i32 %m_V_load, i32 17, i32 31)" [sha256d/sha256d.cpp:39]   --->   Operation 65 'partselect' 'r_V' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%trunc_ln1503 = trunc i32 %m_V_load to i17" [sha256d/sha256d.cpp:39]   --->   Operation 66 'trunc' 'trunc_ln1503' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%ret_V_26 = call i32 @_ssdm_op_BitConcatenate.i32.i17.i15(i17 %trunc_ln1503, i15 %r_V)" [sha256d/sha256d.cpp:39]   --->   Operation 67 'bitconcatenate' 'ret_V_26' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%r_V_s = call i13 @_ssdm_op_PartSelect.i13.i32.i32.i32(i32 %m_V_load, i32 19, i32 31)" [sha256d/sha256d.cpp:39]   --->   Operation 68 'partselect' 'r_V_s' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%trunc_ln1503_1 = trunc i32 %m_V_load to i19" [sha256d/sha256d.cpp:39]   --->   Operation 69 'trunc' 'trunc_ln1503_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%ret_V_27 = call i32 @_ssdm_op_BitConcatenate.i32.i19.i13(i19 %trunc_ln1503_1, i13 %r_V_s)" [sha256d/sha256d.cpp:39]   --->   Operation 70 'bitconcatenate' 'ret_V_27' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%r_V_1 = call i22 @_ssdm_op_PartSelect.i22.i32.i32.i32(i32 %m_V_load, i32 10, i32 31)" [sha256d/sha256d.cpp:39]   --->   Operation 71 'partselect' 'r_V_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%r_V_14 = zext i22 %r_V_1 to i32" [sha256d/sha256d.cpp:39]   --->   Operation 72 'zext' 'r_V_14' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%xor_ln1357 = xor i32 %r_V_14, %ret_V_27" [sha256d/sha256d.cpp:39]   --->   Operation 73 'xor' 'xor_ln1357' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%ret_V_5 = xor i32 %xor_ln1357, %ret_V_26" [sha256d/sha256d.cpp:39]   --->   Operation 74 'xor' 'ret_V_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 75 [1/2] (1.35ns)   --->   "%m_V_load_2 = load i32* %m_V_addr_3, align 4" [sha256d/sha256d.cpp:39]   --->   Operation 75 'load' 'm_V_load_2' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%r_V_2 = call i25 @_ssdm_op_PartSelect.i25.i32.i32.i32(i32 %m_V_load_2, i32 7, i32 31)" [sha256d/sha256d.cpp:39]   --->   Operation 76 'partselect' 'r_V_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%trunc_ln1503_2 = trunc i32 %m_V_load_2 to i7" [sha256d/sha256d.cpp:39]   --->   Operation 77 'trunc' 'trunc_ln1503_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%ret_V_28 = call i32 @_ssdm_op_BitConcatenate.i32.i7.i25(i7 %trunc_ln1503_2, i25 %r_V_2)" [sha256d/sha256d.cpp:39]   --->   Operation 78 'bitconcatenate' 'ret_V_28' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%r_V_3 = call i14 @_ssdm_op_PartSelect.i14.i32.i32.i32(i32 %m_V_load_2, i32 18, i32 31)" [sha256d/sha256d.cpp:39]   --->   Operation 79 'partselect' 'r_V_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%trunc_ln1503_3 = trunc i32 %m_V_load_2 to i18" [sha256d/sha256d.cpp:39]   --->   Operation 80 'trunc' 'trunc_ln1503_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%ret_V_29 = call i32 @_ssdm_op_BitConcatenate.i32.i18.i14(i18 %trunc_ln1503_3, i14 %r_V_3)" [sha256d/sha256d.cpp:39]   --->   Operation 81 'bitconcatenate' 'ret_V_29' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%r_V_4 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %m_V_load_2, i32 3, i32 31)" [sha256d/sha256d.cpp:39]   --->   Operation 82 'partselect' 'r_V_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%r_V_15 = zext i29 %r_V_4 to i32" [sha256d/sha256d.cpp:39]   --->   Operation 83 'zext' 'r_V_15' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%xor_ln1357_2 = xor i32 %r_V_15, %ret_V_29" [sha256d/sha256d.cpp:39]   --->   Operation 84 'xor' 'xor_ln1357_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node add_ln209_1)   --->   "%ret_V_10 = xor i32 %xor_ln1357_2, %ret_V_28" [sha256d/sha256d.cpp:39]   --->   Operation 85 'xor' 'ret_V_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 86 [1/2] (1.35ns)   --->   "%m_V_load_3 = load i32* %m_V_addr_4, align 4" [sha256d/sha256d.cpp:39]   --->   Operation 86 'load' 'm_V_load_3' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 87 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln209 = add i32 %m_V_load_1, %m_V_load_3" [sha256d/sha256d.cpp:39]   --->   Operation 87 'add' 'add_ln209' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 88 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln209_1 = add i32 %ret_V_5, %ret_V_10" [sha256d/sha256d.cpp:39]   --->   Operation 88 'add' 'add_ln209_1' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 89 [1/1] (0.88ns) (root node of TernaryAdder)   --->   "%add_ln209_2 = add i32 %add_ln209_1, %add_ln209" [sha256d/sha256d.cpp:39]   --->   Operation 89 'add' 'add_ln209_2' <Predicate = true> <Delay = 0.88> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 90 [1/1] (0.00ns)   --->   "%m_V_addr_5 = getelementptr [64 x i32]* %m_V, i64 0, i64 %zext_ln544_2" [sha256d/sha256d.cpp:39]   --->   Operation 90 'getelementptr' 'm_V_addr_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 91 [1/1] (1.35ns)   --->   "store i32 %add_ln209_2, i32* %m_V_addr_5, align 4" [sha256d/sha256d.cpp:39]   --->   Operation 91 'store' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 92 [1/1] (0.89ns)   --->   "%i_V = add i7 1, %p_01115_1" [sha256d/sha256d.cpp:38]   --->   Operation 92 'add' 'i_V' <Predicate = true> <Delay = 0.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 93 [1/1] (0.00ns)   --->   "br label %.preheader" [sha256d/sha256d.cpp:38]   --->   Operation 93 'br' <Predicate = true> <Delay = 0.00>

State 7 <SV = 3> <Delay = 0.79>
ST_7 : Operation 94 [1/2] (0.79ns)   --->   "%a_V = load i32* %state_V_addr, align 4" [sha256d/sha256d.cpp:41]   --->   Operation 94 'load' 'a_V' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_7 : Operation 95 [1/2] (0.79ns)   --->   "%b_V = load i32* %state_V_addr_1, align 4" [sha256d/sha256d.cpp:42]   --->   Operation 95 'load' 'b_V' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_7 : Operation 96 [1/1] (0.00ns)   --->   "%state_V_addr_2 = getelementptr [8 x i32]* %state_V, i64 0, i64 2" [sha256d/sha256d.cpp:43]   --->   Operation 96 'getelementptr' 'state_V_addr_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 97 [2/2] (0.79ns)   --->   "%c_V = load i32* %state_V_addr_2, align 4" [sha256d/sha256d.cpp:43]   --->   Operation 97 'load' 'c_V' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_7 : Operation 98 [1/1] (0.00ns)   --->   "%state_V_addr_3 = getelementptr [8 x i32]* %state_V, i64 0, i64 3" [sha256d/sha256d.cpp:44]   --->   Operation 98 'getelementptr' 'state_V_addr_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 99 [2/2] (0.79ns)   --->   "%d_V = load i32* %state_V_addr_3, align 4" [sha256d/sha256d.cpp:44]   --->   Operation 99 'load' 'd_V' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 8 <SV = 4> <Delay = 0.79>
ST_8 : Operation 100 [1/2] (0.79ns)   --->   "%c_V = load i32* %state_V_addr_2, align 4" [sha256d/sha256d.cpp:43]   --->   Operation 100 'load' 'c_V' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_8 : Operation 101 [1/2] (0.79ns)   --->   "%d_V = load i32* %state_V_addr_3, align 4" [sha256d/sha256d.cpp:44]   --->   Operation 101 'load' 'd_V' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_8 : Operation 102 [1/1] (0.00ns)   --->   "%state_V_addr_4 = getelementptr [8 x i32]* %state_V, i64 0, i64 4" [sha256d/sha256d.cpp:45]   --->   Operation 102 'getelementptr' 'state_V_addr_4' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 103 [2/2] (0.79ns)   --->   "%e_V = load i32* %state_V_addr_4, align 4" [sha256d/sha256d.cpp:45]   --->   Operation 103 'load' 'e_V' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_8 : Operation 104 [1/1] (0.00ns)   --->   "%state_V_addr_5 = getelementptr [8 x i32]* %state_V, i64 0, i64 5" [sha256d/sha256d.cpp:46]   --->   Operation 104 'getelementptr' 'state_V_addr_5' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 105 [2/2] (0.79ns)   --->   "%f_V = load i32* %state_V_addr_5, align 4" [sha256d/sha256d.cpp:46]   --->   Operation 105 'load' 'f_V' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 9 <SV = 5> <Delay = 0.79>
ST_9 : Operation 106 [1/2] (0.79ns)   --->   "%e_V = load i32* %state_V_addr_4, align 4" [sha256d/sha256d.cpp:45]   --->   Operation 106 'load' 'e_V' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_9 : Operation 107 [1/2] (0.79ns)   --->   "%f_V = load i32* %state_V_addr_5, align 4" [sha256d/sha256d.cpp:46]   --->   Operation 107 'load' 'f_V' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_9 : Operation 108 [1/1] (0.00ns)   --->   "%state_V_addr_6 = getelementptr [8 x i32]* %state_V, i64 0, i64 6" [sha256d/sha256d.cpp:47]   --->   Operation 108 'getelementptr' 'state_V_addr_6' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 109 [2/2] (0.79ns)   --->   "%g_V = load i32* %state_V_addr_6, align 4" [sha256d/sha256d.cpp:47]   --->   Operation 109 'load' 'g_V' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_9 : Operation 110 [1/1] (0.00ns)   --->   "%state_V_addr_7 = getelementptr [8 x i32]* %state_V, i64 0, i64 7" [sha256d/sha256d.cpp:48]   --->   Operation 110 'getelementptr' 'state_V_addr_7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 111 [2/2] (0.79ns)   --->   "%h_V = load i32* %state_V_addr_7, align 4" [sha256d/sha256d.cpp:48]   --->   Operation 111 'load' 'h_V' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 10 <SV = 6> <Delay = 0.79>
ST_10 : Operation 112 [1/2] (0.79ns)   --->   "%g_V = load i32* %state_V_addr_6, align 4" [sha256d/sha256d.cpp:47]   --->   Operation 112 'load' 'g_V' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_10 : Operation 113 [1/2] (0.79ns)   --->   "%h_V = load i32* %state_V_addr_7, align 4" [sha256d/sha256d.cpp:48]   --->   Operation 113 'load' 'h_V' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_10 : Operation 114 [1/1] (0.75ns)   --->   "br label %1" [sha256d/sha256d.cpp:50]   --->   Operation 114 'br' <Predicate = true> <Delay = 0.75>

State 11 <SV = 7> <Delay = 1.99>
ST_11 : Operation 115 [1/1] (0.00ns)   --->   "%p_01115_2 = phi i7 [ 0, %0 ], [ %i_V_1, %_ZrsILi32ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit94 ]"   --->   Operation 115 'phi' 'p_01115_2' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 116 [1/1] (0.00ns)   --->   "%lhs_V_10 = phi i32 [ %a_V, %0 ], [ %a_V_1, %_ZrsILi32ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit94 ]"   --->   Operation 116 'phi' 'lhs_V_10' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 117 [1/1] (0.00ns)   --->   "%rhs_V_16 = phi i32 [ %b_V, %0 ], [ %lhs_V_10, %_ZrsILi32ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit94 ]"   --->   Operation 117 'phi' 'rhs_V_16' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 118 [1/1] (0.00ns)   --->   "%rhs_V_17 = phi i32 [ %c_V, %0 ], [ %rhs_V_16, %_ZrsILi32ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit94 ]"   --->   Operation 118 'phi' 'rhs_V_17' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 119 [1/1] (0.00ns)   --->   "%p_01587_0 = phi i32 [ %d_V, %0 ], [ %rhs_V_17, %_ZrsILi32ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit94 ]"   --->   Operation 119 'phi' 'p_01587_0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 120 [1/1] (0.00ns)   --->   "%lhs_V = phi i32 [ %e_V, %0 ], [ %e_V_1, %_ZrsILi32ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit94 ]"   --->   Operation 120 'phi' 'lhs_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 121 [1/1] (0.00ns)   --->   "%rhs_V = phi i32 [ %f_V, %0 ], [ %lhs_V, %_ZrsILi32ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit94 ]"   --->   Operation 121 'phi' 'rhs_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 122 [1/1] (0.00ns)   --->   "%rhs_V_15 = phi i32 [ %g_V, %0 ], [ %rhs_V, %_ZrsILi32ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit94 ]"   --->   Operation 122 'phi' 'rhs_V_15' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 123 [1/1] (0.00ns)   --->   "%p_01439_0 = phi i32 [ %h_V, %0 ], [ %rhs_V_15, %_ZrsILi32ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit94 ]"   --->   Operation 123 'phi' 'p_01439_0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 124 [1/1] (0.86ns)   --->   "%icmp_ln887_1 = icmp eq i7 %p_01115_2, -64" [sha256d/sha256d.cpp:50]   --->   Operation 124 'icmp' 'icmp_ln887_1' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 125 [1/1] (0.00ns)   --->   "%empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)"   --->   Operation 125 'speclooptripcount' 'empty_15' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 126 [1/1] (0.89ns)   --->   "%i_V_1 = add i7 %p_01115_2, 1" [sha256d/sha256d.cpp:50]   --->   Operation 126 'add' 'i_V_1' <Predicate = true> <Delay = 0.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 127 [1/1] (0.00ns)   --->   "br i1 %icmp_ln887_1, label %2, label %_ZrsILi32ELb0EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit94" [sha256d/sha256d.cpp:50]   --->   Operation 127 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node ret_V_15)   --->   "%r_V_5 = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %lhs_V, i32 6, i32 31)" [sha256d/sha256d.cpp:51]   --->   Operation 128 'partselect' 'r_V_5' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_11 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node ret_V_15)   --->   "%trunc_ln1503_4 = trunc i32 %lhs_V to i6" [sha256d/sha256d.cpp:51]   --->   Operation 129 'trunc' 'trunc_ln1503_4' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_11 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node ret_V_15)   --->   "%ret_V_30 = call i32 @_ssdm_op_BitConcatenate.i32.i6.i26(i6 %trunc_ln1503_4, i26 %r_V_5)" [sha256d/sha256d.cpp:51]   --->   Operation 130 'bitconcatenate' 'ret_V_30' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_11 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node ret_V_15)   --->   "%r_V_6 = call i21 @_ssdm_op_PartSelect.i21.i32.i32.i32(i32 %lhs_V, i32 11, i32 31)" [sha256d/sha256d.cpp:51]   --->   Operation 131 'partselect' 'r_V_6' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_11 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node ret_V_15)   --->   "%trunc_ln1503_5 = trunc i32 %lhs_V to i11" [sha256d/sha256d.cpp:51]   --->   Operation 132 'trunc' 'trunc_ln1503_5' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_11 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node ret_V_15)   --->   "%ret_V_31 = call i32 @_ssdm_op_BitConcatenate.i32.i11.i21(i11 %trunc_ln1503_5, i21 %r_V_6)" [sha256d/sha256d.cpp:51]   --->   Operation 133 'bitconcatenate' 'ret_V_31' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_11 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node ret_V_15)   --->   "%r_V_7 = call i7 @_ssdm_op_PartSelect.i7.i32.i32.i32(i32 %lhs_V, i32 25, i32 31)" [sha256d/sha256d.cpp:51]   --->   Operation 134 'partselect' 'r_V_7' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_11 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node ret_V_15)   --->   "%trunc_ln1503_6 = trunc i32 %lhs_V to i25" [sha256d/sha256d.cpp:51]   --->   Operation 135 'trunc' 'trunc_ln1503_6' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_11 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node ret_V_15)   --->   "%ret_V_32 = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 %trunc_ln1503_6, i7 %r_V_7)" [sha256d/sha256d.cpp:51]   --->   Operation 136 'bitconcatenate' 'ret_V_32' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_11 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node ret_V_15)   --->   "%xor_ln1357_4 = xor i32 %ret_V_30, %ret_V_31" [sha256d/sha256d.cpp:51]   --->   Operation 137 'xor' 'xor_ln1357_4' <Predicate = (!icmp_ln887_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 138 [1/1] (0.40ns) (out node of the LUT)   --->   "%ret_V_15 = xor i32 %xor_ln1357_4, %ret_V_32" [sha256d/sha256d.cpp:51]   --->   Operation 138 'xor' 'ret_V_15' <Predicate = (!icmp_ln887_1)> <Delay = 0.40> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node ret_V_18)   --->   "%ret_V_33 = and i32 %rhs_V, %lhs_V" [sha256d/sha256d.cpp:51]   --->   Operation 139 'and' 'ret_V_33' <Predicate = (!icmp_ln887_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node ret_V_18)   --->   "%r_V_16 = xor i32 %lhs_V, -1" [sha256d/sha256d.cpp:51]   --->   Operation 140 'xor' 'r_V_16' <Predicate = (!icmp_ln887_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node ret_V_18)   --->   "%ret_V_34 = and i32 %rhs_V_15, %r_V_16" [sha256d/sha256d.cpp:51]   --->   Operation 141 'and' 'ret_V_34' <Predicate = (!icmp_ln887_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 142 [1/1] (0.40ns) (out node of the LUT)   --->   "%ret_V_18 = xor i32 %ret_V_34, %ret_V_33" [sha256d/sha256d.cpp:51]   --->   Operation 142 'xor' 'ret_V_18' <Predicate = (!icmp_ln887_1)> <Delay = 0.40> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 143 [1/1] (0.00ns)   --->   "%zext_ln544_6 = zext i7 %p_01115_2 to i64" [sha256d/sha256d.cpp:51]   --->   Operation 143 'zext' 'zext_ln544_6' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_11 : Operation 144 [1/1] (0.00ns)   --->   "%K_V_addr = getelementptr [64 x i32]* @K_V, i64 0, i64 %zext_ln544_6" [sha256d/sha256d.cpp:51]   --->   Operation 144 'getelementptr' 'K_V_addr' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_11 : Operation 145 [2/2] (1.35ns)   --->   "%K_V_load = load i32* %K_V_addr, align 4" [sha256d/sha256d.cpp:51]   --->   Operation 145 'load' 'K_V_load' <Predicate = (!icmp_ln887_1)> <Delay = 1.35> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>
ST_11 : Operation 146 [1/1] (0.00ns)   --->   "%m_V_addr_6 = getelementptr [64 x i32]* %m_V, i64 0, i64 %zext_ln544_6" [sha256d/sha256d.cpp:51]   --->   Operation 146 'getelementptr' 'm_V_addr_6' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_11 : Operation 147 [2/2] (1.35ns)   --->   "%m_V_load_4 = load i32* %m_V_addr_6, align 4" [sha256d/sha256d.cpp:51]   --->   Operation 147 'load' 'm_V_load_4' <Predicate = (!icmp_ln887_1)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_11 : Operation 148 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln209_4 = add i32 %ret_V_18, %ret_V_15" [sha256d/sha256d.cpp:51]   --->   Operation 148 'add' 'add_ln209_4' <Predicate = (!icmp_ln887_1)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 149 [1/1] (0.88ns) (root node of TernaryAdder)   --->   "%add_ln209_5 = add i32 %add_ln209_4, %p_01439_0" [sha256d/sha256d.cpp:51]   --->   Operation 149 'add' 'add_ln209_5' <Predicate = (!icmp_ln887_1)> <Delay = 0.88> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node ret_V_25)   --->   "%xor_ln1357_9 = xor i32 %rhs_V_17, %rhs_V_16" [sha256d/sha256d.cpp:52]   --->   Operation 150 'xor' 'xor_ln1357_9' <Predicate = (!icmp_ln887_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node ret_V_25)   --->   "%ret_V_38 = and i32 %xor_ln1357_9, %lhs_V_10" [sha256d/sha256d.cpp:52]   --->   Operation 151 'and' 'ret_V_38' <Predicate = (!icmp_ln887_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node ret_V_25)   --->   "%ret_V_39 = and i32 %rhs_V_17, %rhs_V_16" [sha256d/sha256d.cpp:52]   --->   Operation 152 'and' 'ret_V_39' <Predicate = (!icmp_ln887_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 153 [1/1] (0.40ns) (out node of the LUT)   --->   "%ret_V_25 = xor i32 %ret_V_38, %ret_V_39" [sha256d/sha256d.cpp:52]   --->   Operation 153 'xor' 'ret_V_25' <Predicate = (!icmp_ln887_1)> <Delay = 0.40> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 154 [1/1] (1.20ns)   --->   "%add_ln700_3 = add i32 %a_V, %lhs_V_10" [sha256d/sha256d.cpp:63]   --->   Operation 154 'add' 'add_ln700_3' <Predicate = (icmp_ln887_1)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 155 [1/1] (0.79ns)   --->   "store i32 %add_ln700_3, i32* %state_V_addr, align 4" [sha256d/sha256d.cpp:63]   --->   Operation 155 'store' <Predicate = (icmp_ln887_1)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_11 : Operation 156 [1/1] (1.20ns)   --->   "%add_ln700_4 = add i32 %b_V, %rhs_V_16" [sha256d/sha256d.cpp:64]   --->   Operation 156 'add' 'add_ln700_4' <Predicate = (icmp_ln887_1)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 157 [1/1] (0.79ns)   --->   "store i32 %add_ln700_4, i32* %state_V_addr_1, align 4" [sha256d/sha256d.cpp:64]   --->   Operation 157 'store' <Predicate = (icmp_ln887_1)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_11 : Operation 158 [1/1] (1.20ns)   --->   "%add_ln700_5 = add i32 %c_V, %rhs_V_17" [sha256d/sha256d.cpp:65]   --->   Operation 158 'add' 'add_ln700_5' <Predicate = (icmp_ln887_1)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 159 [1/1] (1.20ns)   --->   "%add_ln700_7 = add i32 %e_V, %lhs_V" [sha256d/sha256d.cpp:67]   --->   Operation 159 'add' 'add_ln700_7' <Predicate = (icmp_ln887_1)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 160 [1/1] (1.20ns)   --->   "%add_ln700_8 = add i32 %f_V, %rhs_V" [sha256d/sha256d.cpp:68]   --->   Operation 160 'add' 'add_ln700_8' <Predicate = (icmp_ln887_1)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 161 [1/1] (1.20ns)   --->   "%add_ln700_9 = add i32 %g_V, %rhs_V_15" [sha256d/sha256d.cpp:69]   --->   Operation 161 'add' 'add_ln700_9' <Predicate = (icmp_ln887_1)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 162 [1/1] (1.20ns)   --->   "%add_ln700_10 = add i32 %h_V, %p_01439_0" [sha256d/sha256d.cpp:70]   --->   Operation 162 'add' 'add_ln700_10' <Predicate = (icmp_ln887_1)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 8> <Delay = 3.44>
ST_12 : Operation 163 [1/2] (1.35ns)   --->   "%K_V_load = load i32* %K_V_addr, align 4" [sha256d/sha256d.cpp:51]   --->   Operation 163 'load' 'K_V_load' <Predicate = true> <Delay = 1.35> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>
ST_12 : Operation 164 [1/2] (1.35ns)   --->   "%m_V_load_4 = load i32* %m_V_addr_6, align 4" [sha256d/sha256d.cpp:51]   --->   Operation 164 'load' 'm_V_load_4' <Predicate = true> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_12 : Operation 165 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln209_3 = add i32 %K_V_load, %m_V_load_4" [sha256d/sha256d.cpp:51]   --->   Operation 165 'add' 'add_ln209_3' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 166 [1/1] (0.88ns) (root node of TernaryAdder)   --->   "%t1_V = add i32 %add_ln209_5, %add_ln209_3" [sha256d/sha256d.cpp:51]   --->   Operation 166 'add' 't1_V' <Predicate = true> <Delay = 0.88> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node ret_V_22)   --->   "%r_V_8 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %lhs_V_10, i32 2, i32 31)" [sha256d/sha256d.cpp:52]   --->   Operation 167 'partselect' 'r_V_8' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node ret_V_22)   --->   "%trunc_ln1503_7 = trunc i32 %lhs_V_10 to i2" [sha256d/sha256d.cpp:52]   --->   Operation 168 'trunc' 'trunc_ln1503_7' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node ret_V_22)   --->   "%ret_V_35 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %trunc_ln1503_7, i30 %r_V_8)" [sha256d/sha256d.cpp:52]   --->   Operation 169 'bitconcatenate' 'ret_V_35' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node ret_V_22)   --->   "%r_V_9 = call i19 @_ssdm_op_PartSelect.i19.i32.i32.i32(i32 %lhs_V_10, i32 13, i32 31)" [sha256d/sha256d.cpp:52]   --->   Operation 170 'partselect' 'r_V_9' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node ret_V_22)   --->   "%trunc_ln1503_8 = trunc i32 %lhs_V_10 to i13" [sha256d/sha256d.cpp:52]   --->   Operation 171 'trunc' 'trunc_ln1503_8' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node ret_V_22)   --->   "%ret_V_36 = call i32 @_ssdm_op_BitConcatenate.i32.i13.i19(i13 %trunc_ln1503_8, i19 %r_V_9)" [sha256d/sha256d.cpp:52]   --->   Operation 172 'bitconcatenate' 'ret_V_36' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 173 [1/1] (0.00ns) (grouped into LUT with out node ret_V_22)   --->   "%r_V_10 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %lhs_V_10, i32 22, i32 31)" [sha256d/sha256d.cpp:52]   --->   Operation 173 'partselect' 'r_V_10' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node ret_V_22)   --->   "%trunc_ln1503_9 = trunc i32 %lhs_V_10 to i22" [sha256d/sha256d.cpp:52]   --->   Operation 174 'trunc' 'trunc_ln1503_9' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node ret_V_22)   --->   "%ret_V_37 = call i32 @_ssdm_op_BitConcatenate.i32.i22.i10(i22 %trunc_ln1503_9, i10 %r_V_10)" [sha256d/sha256d.cpp:52]   --->   Operation 175 'bitconcatenate' 'ret_V_37' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 176 [1/1] (0.00ns) (grouped into LUT with out node ret_V_22)   --->   "%xor_ln1357_7 = xor i32 %ret_V_35, %ret_V_36" [sha256d/sha256d.cpp:52]   --->   Operation 176 'xor' 'xor_ln1357_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 177 [1/1] (0.40ns) (out node of the LUT)   --->   "%ret_V_22 = xor i32 %xor_ln1357_7, %ret_V_37" [sha256d/sha256d.cpp:52]   --->   Operation 177 'xor' 'ret_V_22' <Predicate = true> <Delay = 0.40> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.40> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 178 [1/1] (1.20ns)   --->   "%e_V_1 = add i32 %t1_V, %p_01587_0" [sha256d/sha256d.cpp:56]   --->   Operation 178 'add' 'e_V_1' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 179 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln209_8 = add i32 %ret_V_22, %t1_V" [sha256d/sha256d.cpp:60]   --->   Operation 179 'add' 'add_ln209_8' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 180 [1/1] (0.88ns) (root node of TernaryAdder)   --->   "%a_V_1 = add i32 %add_ln209_8, %ret_V_25" [sha256d/sha256d.cpp:60]   --->   Operation 180 'add' 'a_V_1' <Predicate = true> <Delay = 0.88> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 181 [1/1] (0.00ns)   --->   "br label %1" [sha256d/sha256d.cpp:50]   --->   Operation 181 'br' <Predicate = true> <Delay = 0.00>

State 13 <SV = 8> <Delay = 1.99>
ST_13 : Operation 182 [1/1] (0.79ns)   --->   "store i32 %add_ln700_5, i32* %state_V_addr_2, align 4" [sha256d/sha256d.cpp:65]   --->   Operation 182 'store' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_13 : Operation 183 [1/1] (1.20ns)   --->   "%add_ln700_6 = add i32 %d_V, %p_01587_0" [sha256d/sha256d.cpp:66]   --->   Operation 183 'add' 'add_ln700_6' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 184 [1/1] (0.79ns)   --->   "store i32 %add_ln700_6, i32* %state_V_addr_3, align 4" [sha256d/sha256d.cpp:66]   --->   Operation 184 'store' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 14 <SV = 9> <Delay = 0.79>
ST_14 : Operation 185 [1/1] (0.79ns)   --->   "store i32 %add_ln700_7, i32* %state_V_addr_4, align 4" [sha256d/sha256d.cpp:67]   --->   Operation 185 'store' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_14 : Operation 186 [1/1] (0.79ns)   --->   "store i32 %add_ln700_8, i32* %state_V_addr_5, align 4" [sha256d/sha256d.cpp:68]   --->   Operation 186 'store' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 15 <SV = 10> <Delay = 0.79>
ST_15 : Operation 187 [1/1] (0.79ns)   --->   "store i32 %add_ln700_9, i32* %state_V_addr_6, align 4" [sha256d/sha256d.cpp:69]   --->   Operation 187 'store' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_15 : Operation 188 [1/1] (0.79ns)   --->   "store i32 %add_ln700_10, i32* %state_V_addr_7, align 4" [sha256d/sha256d.cpp:70]   --->   Operation 188 'store' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_15 : Operation 189 [1/1] (0.00ns)   --->   "ret void" [sha256d/sha256d.cpp:71]   --->   Operation 189 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j.V') with incoming values : ('j.V', sha256d/sha256d.cpp:36) [9]  (0.755 ns)

 <State 2>: 0.897ns
The critical path consists of the following:
	'phi' operation ('j.V') with incoming values : ('j.V', sha256d/sha256d.cpp:36) [9]  (0 ns)
	'add' operation ('j.V', sha256d/sha256d.cpp:36) [25]  (0.897 ns)

 <State 3>: 2.14ns
The critical path consists of the following:
	'load' operation ('rhs.V', sha256d/sha256d.cpp:37) on array 'data_V' [21]  (0.79 ns)
	'store' operation ('store_ln37', sha256d/sha256d.cpp:37) of variable 'zext_ln209', sha256d/sha256d.cpp:37 on array 'm.V', sha256d/sha256d.cpp:34 [24]  (1.35 ns)

 <State 4>: 2.24ns
The critical path consists of the following:
	'phi' operation ('i.V') with incoming values : ('i.V', sha256d/sha256d.cpp:38) [30]  (0 ns)
	'add' operation ('ret.V', sha256d/sha256d.cpp:39) [37]  (0.887 ns)
	'getelementptr' operation ('m_V_addr_1', sha256d/sha256d.cpp:39) [39]  (0 ns)
	'load' operation ('m_V_load', sha256d/sha256d.cpp:39) on array 'm.V', sha256d/sha256d.cpp:34 [40]  (1.35 ns)

 <State 5>: 2.24ns
The critical path consists of the following:
	'add' operation ('ret.V', sha256d/sha256d.cpp:39) [55]  (0.887 ns)
	'getelementptr' operation ('m_V_addr_3', sha256d/sha256d.cpp:39) [57]  (0 ns)
	'load' operation ('m_V_load_2', sha256d/sha256d.cpp:39) on array 'm.V', sha256d/sha256d.cpp:34 [58]  (1.35 ns)

 <State 6>: 4.8ns
The critical path consists of the following:
	'load' operation ('m_V_load_2', sha256d/sha256d.cpp:39) on array 'm.V', sha256d/sha256d.cpp:34 [58]  (1.35 ns)
	'xor' operation ('xor_ln1357_2', sha256d/sha256d.cpp:39) [67]  (0 ns)
	'xor' operation ('ret.V', sha256d/sha256d.cpp:39) [68]  (0 ns)
	'add' operation ('add_ln209_1', sha256d/sha256d.cpp:39) [74]  (1.2 ns)
	'add' operation ('add_ln209_2', sha256d/sha256d.cpp:39) [75]  (0.889 ns)
	'store' operation ('store_ln39', sha256d/sha256d.cpp:39) of variable 'add_ln209_2', sha256d/sha256d.cpp:39 on array 'm.V', sha256d/sha256d.cpp:34 [77]  (1.35 ns)

 <State 7>: 0.79ns
The critical path consists of the following:
	'load' operation ('a.V', sha256d/sha256d.cpp:41) on array 'state_V' [81]  (0.79 ns)

 <State 8>: 0.79ns
The critical path consists of the following:
	'load' operation ('c.V', sha256d/sha256d.cpp:43) on array 'state_V' [85]  (0.79 ns)

 <State 9>: 0.79ns
The critical path consists of the following:
	'load' operation ('e.V', sha256d/sha256d.cpp:45) on array 'state_V' [89]  (0.79 ns)

 <State 10>: 0.79ns
The critical path consists of the following:
	'load' operation ('g.V', sha256d/sha256d.cpp:47) on array 'state_V' [93]  (0.79 ns)

 <State 11>: 1.99ns
The critical path consists of the following:
	'phi' operation ('a.V') with incoming values : ('a.V', sha256d/sha256d.cpp:41) ('a.V', sha256d/sha256d.cpp:60) [99]  (0 ns)
	'add' operation ('add_ln700_3', sha256d/sha256d.cpp:63) [156]  (1.2 ns)
	'store' operation ('store_ln63', sha256d/sha256d.cpp:63) of variable 'add_ln700_3', sha256d/sha256d.cpp:63 on array 'state_V' [157]  (0.79 ns)

 <State 12>: 3.44ns
The critical path consists of the following:
	'load' operation ('K_V_load', sha256d/sha256d.cpp:51) on array 'K_V' [129]  (1.35 ns)
	'add' operation ('add_ln209_3', sha256d/sha256d.cpp:51) [132]  (0 ns)
	'add' operation ('t1.V', sha256d/sha256d.cpp:51) [135]  (0.889 ns)
	'add' operation ('e.V', sha256d/sha256d.cpp:56) [151]  (1.2 ns)

 <State 13>: 1.99ns
The critical path consists of the following:
	'add' operation ('add_ln700_6', sha256d/sha256d.cpp:66) [162]  (1.2 ns)
	'store' operation ('store_ln66', sha256d/sha256d.cpp:66) of variable 'add_ln700_6', sha256d/sha256d.cpp:66 on array 'state_V' [163]  (0.79 ns)

 <State 14>: 0.79ns
The critical path consists of the following:
	'store' operation ('store_ln67', sha256d/sha256d.cpp:67) of variable 'add_ln700_7', sha256d/sha256d.cpp:67 on array 'state_V' [165]  (0.79 ns)

 <State 15>: 0.79ns
The critical path consists of the following:
	'store' operation ('store_ln69', sha256d/sha256d.cpp:69) of variable 'add_ln700_9', sha256d/sha256d.cpp:69 on array 'state_V' [169]  (0.79 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
