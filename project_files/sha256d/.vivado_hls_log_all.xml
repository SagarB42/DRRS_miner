<?xml version="1.0" encoding="UTF-8"?>
<vivadoHLSLog:LogRoot xmlns:vivadoHLSLog="www.xilinx.com/vivadoHLSLog">
  <errorLogs>
    <logs>
      <synLog>
        <logs message="ERROR: [HLS 200-70] Compilation errors found: In file included from sha256d/sha256.c:1:&#xD;&#xA;sha256d/sha256.c:33:48: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?&#xD;&#xA;void sha256_transform(uint32_t state[8], const uint8_t data[]) {&#xD;&#xA;                                               ^~~~~~~&#xD;&#xA;                                               uint32_t&#xD;&#xA;sha256d/sha256.c:1:22: note: 'uint32_t' declared here&#xD;&#xA;typedef unsigned int uint32_t;&#xD;&#xA;                     ^&#xD;&#xA;sha256d/sha256.c:86:45: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?&#xD;&#xA;void sha256_update(uint32_t state[8], const uint8_t data[]) {&#xD;&#xA;                                            ^~~~~~~&#xD;&#xA;                                            uint32_t&#xD;&#xA;sha256d/sha256.c:1:22: note: 'uint32_t' declared here&#xD;&#xA;typedef unsigned int uint32_t;&#xD;&#xA;                     ^&#xD;&#xA;sha256d/sha256.c:87:5: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?&#xD;&#xA;    uint8_t block[64];&#xD;&#xA;    ^~~~~~~&#xD;&#xA;    uint32_t&#xD;&#xA;sha256d/sha256.c:1:22: note: 'uint32_t' declared here&#xD;&#xA;typedef unsigned int uint32_t;&#xD;&#xA;                     ^&#xD;&#xA;sha256d/sha256.c:96:14: error: redefinition of 'i'&#xD;&#xA;    for (int i = 0; i &lt; 64; i++) {&#xD;&#xA;             ^&#xD;&#xA;sha256d/sha256.c:90:14: note: previous definition is here&#xD;&#xA;    for (int i = 0; i &lt; 64; i++) {&#xD;&#xA;             ^&#xD;&#xA;sha256d/sha256.c:99:14: error: redefinition of 'i'&#xD;&#xA;    for (int i = 0; i &lt; 16; i++) {&#xD;&#xA;             ^&#xD;&#xA;sha256d/sha256.c:90:14: note: previous definition is here&#xD;&#xA;    for (int i = 0; i &lt; 64; i++) {&#xD;&#xA;             ^&#xD;&#xA;sha256d/sha256.c:105:14: error: redefinition of 'i'&#xD;&#xA;    for (int i = 17; i &lt; 56; i++) {&#xD;&#xA;             ^&#xD;&#xA;sha256d/sha256.c:90:14: note: previous definition is here&#xD;&#xA;    for (int i = 0; i &lt; 64; i++) {&#xD;&#xA;             ^&#xD;&#xA;sha256d/sha256.c:108:5: error: unknown type name 'uint64_t'; did you mean 'uint32_t'?&#xD;&#xA;    uint64_t len_be = __builtin_bswap64(80 * 8);&#xD;&#xA;    ^~~~~~~~&#xD;&#xA;    uint32_t&#xD;&#xA;sha256d/sha256.c:1:22: note: 'uint32_t' declared here&#xD;&#xA;typedef unsigned int uint32_t;&#xD;&#xA;                     ^&#xD;&#xA;sha256d/sha256.c:109:14: error: redefinition of 'i'&#xD;&#xA;    for (int i = 0; i &lt; 8; i++) {&#xD;&#xA;             ^&#xD;&#xA;sha256d/sha256.c:90:14: note: previous definition is here&#xD;&#xA;    for (int i = 0; i &lt; 64; i++) {&#xD;&#xA;             ^&#xD;&#xA;sha256d/sha256.c:116:38: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?&#xD;&#xA;void sha256_final(uint32_t state[8], uint8_t hash[]) {&#xD;&#xA;                                     ^~~~~~~&#xD;&#xA;                                     uint32_t&#xD;&#xA;sha256d/sha256.c:1:22: note: 'uint32_t' declared here&#xD;&#xA;typedef unsigned int uint32_t;&#xD;&#xA;                     ^&#xD;&#xA;sha256d/sha256.c:126:19: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?&#xD;&#xA;void sha256(const uint8_t data[], uint8_t hash[]) {&#xD;&#xA;                  ^~~~~~~&#xD;&#xA;                  uint32_t&#xD;&#xA;sha256d/sha256.c:1:22: note: 'uint32_t' declared here&#xD;&#xA;typedef unsigned int uint32_t;&#xD;&#xA;                     ^&#xD;&#xA;sha256d/sha256.c:126:35: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?&#xD;&#xA;void sha256(const uint8_t data[], uint8_t hash[]) {&#xD;&#xA;                                  ^~~~~~~&#xD;&#xA;                                  uint32_t&#xD;&#xA;sha256d/sha256.c:1:22: note: 'uint32_t' declared here&#xD;&#xA;typedef unsigned int uint32_t;&#xD;&#xA;                     ^&#xD;&#xA;sha256d/sha256.c:134:20: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?&#xD;&#xA;void sha256d(const uint8_t input[], uint8_t output[]) {&#xD;&#xA;                   ^~~~~~~&#xD;&#xA;                   uint32_t&#xD;&#xA;sha256d/sha256.c:1:22: note: 'uint32_t' declared here&#xD;&#xA;typedef unsigned int uint32_t;&#xD;&#xA;                     ^&#xD;&#xA;sha256d/sha256.c:134:37: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?&#xD;&#xA;void sha256d(const uint8_t input[], uint8_t output[]) {&#xD;&#xA;                                    ^~~~~~~&#xD;&#xA;                                    uint32_t&#xD;&#xA;sha256d/sha256.c:1:22: note: 'uint32_t' declared here&#xD;&#xA;typedef unsigned int uint32_t;&#xD;&#xA;                     ^&#xD;&#xA;sha256d/sha256.c:135:5: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?&#xD;&#xA;    uint8_t hash1[32];&#xD;&#xA;    ^~~~~~~&#xD;&#xA;    uint32_t&#xD;&#xA;sha256d/sha256.c:1:22: note: 'uint32_t' declared here&#xD;&#xA;typedef unsigned int uint32_t;&#xD;&#xA;                     ^&#xD;&#xA;sha256d/sha256.c:141:10: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?&#xD;&#xA;volatile uint8_t input_memory[80];&#xD;&#xA;         ^~~~~~~&#xD;&#xA;         uint32_t&#xD;&#xA;sha256d/sha256.c:1:22: note: 'uint32_t' declared here&#xD;&#xA;typedef unsigned int uint32_t;&#xD;&#xA;                     ^&#xD;&#xA;sha256d/sha256.c:142:10: error: unknown type name 'uint8_t'; did you mean 'uint32_t'?&#xD;&#xA;volatile uint8_t output_memory[32];&#xD;&#xA;         ^~~~~~~&#xD;&#xA;         uint32_t&#xD;&#xA;sha256d/sha256.c:1:22: note: 'uint32_t' declared here&#xD;&#xA;typedef unsigned int uint32_t;&#xD;&#xA;                     ^&#xD;&#xA;sha256d/sha256.c:146:13: warning: passing 'volatile uint32_t [80]' to parameter of type 'const uint32_t *' (aka 'const unsigned int *') discards qualifiers [-Wincompatible-pointer-types]&#xD;&#xA;    sha256d(input_memory, output_memory);&#xD;&#xA;            ^~~~~~~~~~~~&#xD;&#xA;sha256d/sha256.c:134:28: note: passing argument to parameter 'input' here&#xD;&#xA;void sha256d(const uint8_t input[], uint8_t output[]) {&#xD;&#xA;                           ^&#xD;&#xA;sha256d/sha256.c:146:27: warning: passing 'volatile uint32_t [32]' to parameter of type 'uint32_t *' (aka 'unsigned int *') discards qualifiers [-Wincompatible-pointer-types]&#xD;&#xA;    sha256d(input_memory, output_memory);&#xD;&#xA;                          ^~~~~~~~~~~~~&#xD;&#xA;sha256d/sha256.c:134:45: note: passing argument to parameter 'output' here&#xD;&#xA;void sha256d(const uint8_t input[], uint8_t output[]) {&#xD;&#xA;                                            ^&#xD;&#xA;2 warnings and 16 errors generated.&#xD;&#xA;Failed during preprocessing.&#xD;&#xA;    while executing&#xD;&#xA;&quot;source C:/DRRS_miner/project_files/sha256d/solution1/csynth.tcl&quot;&#xD;&#xA;    invoked from within&#xD;&#xA;&quot;hls::main C:/DRRS_miner/project_files/sha256d/solution1/csynth.tcl&quot;&#xD;&#xA;    (&quot;uplevel&quot; body line 1)&#xD;&#xA;    invoked from within&#xD;&#xA;&quot;uplevel 1 hls::main {*}$args&quot;&#xD;&#xA;    (procedure &quot;hls_proc&quot; line 5)&#xD;&#xA;    invoked from within&#xD;&#xA;&quot;hls_proc $argv&quot;&#xD;&#xA;" projectName="sha256d" solutionName="solution1" date="2024-07-27T10:39:55.790+1000"/>
      </synLog>
      <simLog/>
      <mgLog/>
      <packageLog/>
      <csimLog/>
    </logs>
  </errorLogs>
  <warningLogs>
    <logs>
      <synLog/>
      <simLog/>
      <mgLog/>
      <packageLog/>
      <csimLog/>
    </logs>
  </warningLogs>
</vivadoHLSLog:LogRoot>
