// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "compress.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic compress::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic compress::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<24> compress::ap_ST_fsm_state1 = "1";
const sc_lv<24> compress::ap_ST_fsm_state2 = "10";
const sc_lv<24> compress::ap_ST_fsm_state3 = "100";
const sc_lv<24> compress::ap_ST_fsm_state4 = "1000";
const sc_lv<24> compress::ap_ST_fsm_state5 = "10000";
const sc_lv<24> compress::ap_ST_fsm_state6 = "100000";
const sc_lv<24> compress::ap_ST_fsm_state7 = "1000000";
const sc_lv<24> compress::ap_ST_fsm_state8 = "10000000";
const sc_lv<24> compress::ap_ST_fsm_state9 = "100000000";
const sc_lv<24> compress::ap_ST_fsm_state10 = "1000000000";
const sc_lv<24> compress::ap_ST_fsm_state11 = "10000000000";
const sc_lv<24> compress::ap_ST_fsm_state12 = "100000000000";
const sc_lv<24> compress::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<24> compress::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<24> compress::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<24> compress::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<24> compress::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<24> compress::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<24> compress::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<24> compress::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<24> compress::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<24> compress::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<24> compress::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<24> compress::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<32> compress::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> compress::ap_const_lv32_6 = "110";
const sc_lv<32> compress::ap_const_lv32_8 = "1000";
const sc_lv<32> compress::ap_const_lv32_A = "1010";
const sc_lv<32> compress::ap_const_lv32_C = "1100";
const sc_lv<32> compress::ap_const_lv32_E = "1110";
const sc_lv<32> compress::ap_const_lv32_10 = "10000";
const sc_lv<32> compress::ap_const_lv32_12 = "10010";
const sc_lv<32> compress::ap_const_lv32_14 = "10100";
const sc_lv<32> compress::ap_const_lv32_1 = "1";
const sc_lv<1> compress::ap_const_lv1_0 = "0";
const sc_lv<1> compress::ap_const_lv1_1 = "1";
const sc_lv<32> compress::ap_const_lv32_4 = "100";
const sc_lv<32> compress::ap_const_lv32_5 = "101";
const sc_lv<32> compress::ap_const_lv32_7 = "111";
const sc_lv<32> compress::ap_const_lv32_9 = "1001";
const sc_lv<32> compress::ap_const_lv32_B = "1011";
const sc_lv<32> compress::ap_const_lv32_D = "1101";
const sc_lv<32> compress::ap_const_lv32_F = "1111";
const sc_lv<32> compress::ap_const_lv32_11 = "10001";
const sc_lv<32> compress::ap_const_lv32_13 = "10011";
const sc_lv<32> compress::ap_const_lv32_16 = "10110";
const sc_lv<32> compress::ap_const_lv32_2 = "10";
const sc_lv<4> compress::ap_const_lv4_0 = "0000";
const sc_lv<32> compress::ap_const_lv32_3 = "11";
const sc_lv<32> compress::ap_const_lv32_15 = "10101";
const sc_lv<32> compress::ap_const_lv32_17 = "10111";
const sc_lv<4> compress::ap_const_lv4_1 = "1";
const sc_lv<4> compress::ap_const_lv4_2 = "10";
const sc_lv<4> compress::ap_const_lv4_3 = "11";
const sc_lv<4> compress::ap_const_lv4_4 = "100";
const sc_lv<4> compress::ap_const_lv4_5 = "101";
const sc_lv<4> compress::ap_const_lv4_6 = "110";
const sc_lv<4> compress::ap_const_lv4_7 = "111";
const sc_lv<5> compress::ap_const_lv5_8 = "1000";
const sc_lv<5> compress::ap_const_lv5_9 = "1001";
const sc_lv<5> compress::ap_const_lv5_A = "1010";
const sc_lv<5> compress::ap_const_lv5_B = "1011";
const sc_lv<5> compress::ap_const_lv5_C = "1100";
const sc_lv<5> compress::ap_const_lv5_D = "1101";
const sc_lv<5> compress::ap_const_lv5_E = "1110";
const sc_lv<5> compress::ap_const_lv5_F = "1111";
const sc_lv<64> compress::ap_const_lv64_C = "1100";
const sc_lv<4> compress::ap_const_lv4_8 = "1000";
const sc_lv<32> compress::ap_const_lv32_40 = "1000000";
const sc_lv<4> compress::ap_const_lv4_A = "1010";
const bool compress::ap_const_boolean_1 = true;

compress::compress(sc_module_name name) : sc_module(name), mVcdFile(0) {
    IV_V_U = new compress_IV_V("IV_V_U");
    IV_V_U->clk(ap_clk);
    IV_V_U->reset(ap_rst);
    IV_V_U->address0(IV_V_address0);
    IV_V_U->ce0(IV_V_ce0);
    IV_V_U->q0(IV_V_q0);
    SIGMA_V_0_U = new compress_SIGMA_V_0("SIGMA_V_0_U");
    SIGMA_V_0_U->clk(ap_clk);
    SIGMA_V_0_U->reset(ap_rst);
    SIGMA_V_0_U->address0(SIGMA_V_0_address0);
    SIGMA_V_0_U->ce0(SIGMA_V_0_ce0);
    SIGMA_V_0_U->q0(SIGMA_V_0_q0);
    SIGMA_V_1_U = new compress_SIGMA_V_1("SIGMA_V_1_U");
    SIGMA_V_1_U->clk(ap_clk);
    SIGMA_V_1_U->reset(ap_rst);
    SIGMA_V_1_U->address0(SIGMA_V_1_address0);
    SIGMA_V_1_U->ce0(SIGMA_V_1_ce0);
    SIGMA_V_1_U->q0(SIGMA_V_1_q0);
    SIGMA_V_2_U = new compress_SIGMA_V_2("SIGMA_V_2_U");
    SIGMA_V_2_U->clk(ap_clk);
    SIGMA_V_2_U->reset(ap_rst);
    SIGMA_V_2_U->address0(SIGMA_V_2_address0);
    SIGMA_V_2_U->ce0(SIGMA_V_2_ce0);
    SIGMA_V_2_U->q0(SIGMA_V_2_q0);
    SIGMA_V_3_U = new compress_SIGMA_V_3("SIGMA_V_3_U");
    SIGMA_V_3_U->clk(ap_clk);
    SIGMA_V_3_U->reset(ap_rst);
    SIGMA_V_3_U->address0(SIGMA_V_3_address0);
    SIGMA_V_3_U->ce0(SIGMA_V_3_ce0);
    SIGMA_V_3_U->q0(SIGMA_V_3_q0);
    SIGMA_V_4_U = new compress_SIGMA_V_4("SIGMA_V_4_U");
    SIGMA_V_4_U->clk(ap_clk);
    SIGMA_V_4_U->reset(ap_rst);
    SIGMA_V_4_U->address0(SIGMA_V_4_address0);
    SIGMA_V_4_U->ce0(SIGMA_V_4_ce0);
    SIGMA_V_4_U->q0(SIGMA_V_4_q0);
    SIGMA_V_5_U = new compress_SIGMA_V_5("SIGMA_V_5_U");
    SIGMA_V_5_U->clk(ap_clk);
    SIGMA_V_5_U->reset(ap_rst);
    SIGMA_V_5_U->address0(SIGMA_V_5_address0);
    SIGMA_V_5_U->ce0(SIGMA_V_5_ce0);
    SIGMA_V_5_U->q0(SIGMA_V_5_q0);
    SIGMA_V_6_U = new compress_SIGMA_V_6("SIGMA_V_6_U");
    SIGMA_V_6_U->clk(ap_clk);
    SIGMA_V_6_U->reset(ap_rst);
    SIGMA_V_6_U->address0(SIGMA_V_6_address0);
    SIGMA_V_6_U->ce0(SIGMA_V_6_ce0);
    SIGMA_V_6_U->q0(SIGMA_V_6_q0);
    SIGMA_V_7_U = new compress_SIGMA_V_7("SIGMA_V_7_U");
    SIGMA_V_7_U->clk(ap_clk);
    SIGMA_V_7_U->reset(ap_rst);
    SIGMA_V_7_U->address0(SIGMA_V_7_address0);
    SIGMA_V_7_U->ce0(SIGMA_V_7_ce0);
    SIGMA_V_7_U->q0(SIGMA_V_7_q0);
    SIGMA_V_8_U = new compress_SIGMA_V_8("SIGMA_V_8_U");
    SIGMA_V_8_U->clk(ap_clk);
    SIGMA_V_8_U->reset(ap_rst);
    SIGMA_V_8_U->address0(SIGMA_V_8_address0);
    SIGMA_V_8_U->ce0(SIGMA_V_8_ce0);
    SIGMA_V_8_U->q0(SIGMA_V_8_q0);
    SIGMA_V_9_U = new compress_SIGMA_V_9("SIGMA_V_9_U");
    SIGMA_V_9_U->clk(ap_clk);
    SIGMA_V_9_U->reset(ap_rst);
    SIGMA_V_9_U->address0(SIGMA_V_9_address0);
    SIGMA_V_9_U->ce0(SIGMA_V_9_ce0);
    SIGMA_V_9_U->q0(SIGMA_V_9_q0);
    SIGMA_V_10_U = new compress_SIGMA_V_10("SIGMA_V_10_U");
    SIGMA_V_10_U->clk(ap_clk);
    SIGMA_V_10_U->reset(ap_rst);
    SIGMA_V_10_U->address0(SIGMA_V_10_address0);
    SIGMA_V_10_U->ce0(SIGMA_V_10_ce0);
    SIGMA_V_10_U->q0(SIGMA_V_10_q0);
    SIGMA_V_11_U = new compress_SIGMA_V_11("SIGMA_V_11_U");
    SIGMA_V_11_U->clk(ap_clk);
    SIGMA_V_11_U->reset(ap_rst);
    SIGMA_V_11_U->address0(SIGMA_V_11_address0);
    SIGMA_V_11_U->ce0(SIGMA_V_11_ce0);
    SIGMA_V_11_U->q0(SIGMA_V_11_q0);
    SIGMA_V_12_U = new compress_SIGMA_V_12("SIGMA_V_12_U");
    SIGMA_V_12_U->clk(ap_clk);
    SIGMA_V_12_U->reset(ap_rst);
    SIGMA_V_12_U->address0(SIGMA_V_12_address0);
    SIGMA_V_12_U->ce0(SIGMA_V_12_ce0);
    SIGMA_V_12_U->q0(SIGMA_V_12_q0);
    SIGMA_V_13_U = new compress_SIGMA_V_13("SIGMA_V_13_U");
    SIGMA_V_13_U->clk(ap_clk);
    SIGMA_V_13_U->reset(ap_rst);
    SIGMA_V_13_U->address0(SIGMA_V_13_address0);
    SIGMA_V_13_U->ce0(SIGMA_V_13_ce0);
    SIGMA_V_13_U->q0(SIGMA_V_13_q0);
    SIGMA_V_14_U = new compress_SIGMA_V_14("SIGMA_V_14_U");
    SIGMA_V_14_U->clk(ap_clk);
    SIGMA_V_14_U->reset(ap_rst);
    SIGMA_V_14_U->address0(SIGMA_V_14_address0);
    SIGMA_V_14_U->ce0(SIGMA_V_14_ce0);
    SIGMA_V_14_U->q0(SIGMA_V_14_q0);
    SIGMA_V_15_U = new compress_SIGMA_V_15("SIGMA_V_15_U");
    SIGMA_V_15_U->clk(ap_clk);
    SIGMA_V_15_U->reset(ap_rst);
    SIGMA_V_15_U->address0(SIGMA_V_15_address0);
    SIGMA_V_15_U->ce0(SIGMA_V_15_ce0);
    SIGMA_V_15_U->q0(SIGMA_V_15_q0);
    v_V_U = new compress_v_V("v_V_U");
    v_V_U->clk(ap_clk);
    v_V_U->reset(ap_rst);
    v_V_U->address0(v_V_address0);
    v_V_U->ce0(v_V_ce0);
    v_V_U->we0(v_V_we0);
    v_V_U->d0(v_V_d0);
    v_V_U->q0(v_V_q0);
    v_V_U->address1(v_V_address1);
    v_V_U->ce1(v_V_ce1);
    v_V_U->we1(v_V_we1);
    v_V_U->d1(v_V_d1);
    v_V_U->q1(v_V_q1);
    grp_G_fu_554 = new G("grp_G_fu_554");
    grp_G_fu_554->ap_clk(ap_clk);
    grp_G_fu_554->ap_rst(ap_rst);
    grp_G_fu_554->ap_start(grp_G_fu_554_ap_start);
    grp_G_fu_554->ap_done(grp_G_fu_554_ap_done);
    grp_G_fu_554->ap_idle(grp_G_fu_554_ap_idle);
    grp_G_fu_554->ap_ready(grp_G_fu_554_ap_ready);
    grp_G_fu_554->v_V_address0(grp_G_fu_554_v_V_address0);
    grp_G_fu_554->v_V_ce0(grp_G_fu_554_v_V_ce0);
    grp_G_fu_554->v_V_we0(grp_G_fu_554_v_V_we0);
    grp_G_fu_554->v_V_d0(grp_G_fu_554_v_V_d0);
    grp_G_fu_554->v_V_q0(v_V_q0);
    grp_G_fu_554->v_V_address1(grp_G_fu_554_v_V_address1);
    grp_G_fu_554->v_V_ce1(grp_G_fu_554_v_V_ce1);
    grp_G_fu_554->v_V_q1(v_V_q1);
    grp_G_fu_554->a(grp_G_fu_554_a);
    grp_G_fu_554->b(grp_G_fu_554_b);
    grp_G_fu_554->c(grp_G_fu_554_c);
    grp_G_fu_554->d(grp_G_fu_554_d);
    grp_G_fu_554->x_V(reg_583);
    grp_G_fu_554->y_V(reg_588);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_IV_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln21_fu_605_p1 );

    SC_METHOD(thread_IV_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_SIGMA_V_0_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln29_fu_641_p1 );

    SC_METHOD(thread_SIGMA_V_0_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_SIGMA_V_10_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln29_fu_641_p1 );

    SC_METHOD(thread_SIGMA_V_10_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_SIGMA_V_11_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln29_fu_641_p1 );

    SC_METHOD(thread_SIGMA_V_11_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_SIGMA_V_12_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln29_fu_641_p1 );

    SC_METHOD(thread_SIGMA_V_12_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_SIGMA_V_13_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln29_fu_641_p1 );

    SC_METHOD(thread_SIGMA_V_13_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_SIGMA_V_14_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln29_fu_641_p1 );

    SC_METHOD(thread_SIGMA_V_14_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_SIGMA_V_15_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln29_fu_641_p1 );

    SC_METHOD(thread_SIGMA_V_15_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_SIGMA_V_1_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln29_fu_641_p1 );

    SC_METHOD(thread_SIGMA_V_1_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_SIGMA_V_2_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln29_fu_641_p1 );

    SC_METHOD(thread_SIGMA_V_2_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_SIGMA_V_3_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln29_fu_641_p1 );

    SC_METHOD(thread_SIGMA_V_3_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_SIGMA_V_4_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln29_fu_641_p1 );

    SC_METHOD(thread_SIGMA_V_4_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_SIGMA_V_5_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln29_fu_641_p1 );

    SC_METHOD(thread_SIGMA_V_5_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_SIGMA_V_6_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln29_fu_641_p1 );

    SC_METHOD(thread_SIGMA_V_6_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_SIGMA_V_7_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln29_fu_641_p1 );

    SC_METHOD(thread_SIGMA_V_7_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_SIGMA_V_8_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln29_fu_641_p1 );

    SC_METHOD(thread_SIGMA_V_8_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_SIGMA_V_9_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln29_fu_641_p1 );

    SC_METHOD(thread_SIGMA_V_9_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( icmp_ln39_fu_727_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( icmp_ln39_fu_727_p2 );

    SC_METHOD(thread_grp_G_fu_554_a);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_grp_G_fu_554_ap_start);
    sensitive << ( grp_G_fu_554_ap_start_reg );

    SC_METHOD(thread_grp_G_fu_554_b);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_grp_G_fu_554_c);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_grp_G_fu_554_d);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_h_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln21_fu_605_p1 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( h_V_addr_1_reg_1054 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( zext_ln40_fu_739_p1 );

    SC_METHOD(thread_h_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_h_V_d0);
    sensitive << ( v_V_q1 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( xor_ln719_2_fu_756_p2 );

    SC_METHOD(thread_h_V_we0);
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_i_1_fu_635_p2);
    sensitive << ( i1_0_reg_532 );

    SC_METHOD(thread_i_2_fu_733_p2);
    sensitive << ( i2_0_reg_543 );

    SC_METHOD(thread_i_fu_599_p2);
    sensitive << ( i_0_reg_520 );

    SC_METHOD(thread_icmp_ln20_fu_593_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_520 );

    SC_METHOD(thread_icmp_ln28_fu_629_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i1_0_reg_532 );

    SC_METHOD(thread_icmp_ln39_fu_727_p2);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( i2_0_reg_543 );

    SC_METHOD(thread_m_V_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( zext_ln544_fu_661_p1 );
    sensitive << ( zext_ln544_2_fu_671_p1 );
    sensitive << ( zext_ln544_4_fu_679_p1 );
    sensitive << ( zext_ln544_6_fu_687_p1 );
    sensitive << ( zext_ln544_8_fu_695_p1 );
    sensitive << ( zext_ln544_10_fu_703_p1 );
    sensitive << ( zext_ln544_12_fu_711_p1 );
    sensitive << ( zext_ln544_14_fu_719_p1 );

    SC_METHOD(thread_m_V_address1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( zext_ln544_1_fu_666_p1 );
    sensitive << ( zext_ln544_3_fu_675_p1 );
    sensitive << ( zext_ln544_5_fu_683_p1 );
    sensitive << ( zext_ln544_7_fu_691_p1 );
    sensitive << ( zext_ln544_9_fu_699_p1 );
    sensitive << ( zext_ln544_11_fu_707_p1 );
    sensitive << ( zext_ln544_13_fu_715_p1 );
    sensitive << ( zext_ln544_15_fu_723_p1 );

    SC_METHOD(thread_m_V_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_G_fu_554_ap_done );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_m_V_ce1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_G_fu_554_ap_done );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_v_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln21_reg_777 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( grp_G_fu_554_v_V_address0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( zext_ln40_fu_739_p1 );

    SC_METHOD(thread_v_V_address1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( grp_G_fu_554_v_V_address1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( zext_ln22_fu_617_p1 );
    sensitive << ( zext_ln40_1_fu_751_p1 );

    SC_METHOD(thread_v_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( grp_G_fu_554_v_V_ce0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_v_V_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( grp_G_fu_554_v_V_ce1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_v_V_d0);
    sensitive << ( h_V_q0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( grp_G_fu_554_v_V_d0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_v_V_d1);
    sensitive << ( IV_V_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( xor_ln719_fu_622_p2 );

    SC_METHOD(thread_v_V_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( grp_G_fu_554_v_V_we0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_v_V_we1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_xor_ln22_fu_611_p2);
    sensitive << ( i_0_reg_520 );

    SC_METHOD(thread_xor_ln40_fu_745_p2);
    sensitive << ( i2_0_reg_543 );

    SC_METHOD(thread_xor_ln719_2_fu_756_p2);
    sensitive << ( h_V_q0 );
    sensitive << ( v_V_q0 );

    SC_METHOD(thread_xor_ln719_fu_622_p2);
    sensitive << ( v_V_q0 );

    SC_METHOD(thread_zext_ln21_fu_605_p1);
    sensitive << ( i_0_reg_520 );

    SC_METHOD(thread_zext_ln22_fu_617_p1);
    sensitive << ( xor_ln22_fu_611_p2 );

    SC_METHOD(thread_zext_ln29_fu_641_p1);
    sensitive << ( i1_0_reg_532 );

    SC_METHOD(thread_zext_ln40_1_fu_751_p1);
    sensitive << ( xor_ln40_fu_745_p2 );

    SC_METHOD(thread_zext_ln40_fu_739_p1);
    sensitive << ( i2_0_reg_543 );

    SC_METHOD(thread_zext_ln544_10_fu_703_p1);
    sensitive << ( SIGMA_V_10_load_reg_936 );

    SC_METHOD(thread_zext_ln544_11_fu_707_p1);
    sensitive << ( SIGMA_V_11_load_reg_941 );

    SC_METHOD(thread_zext_ln544_12_fu_711_p1);
    sensitive << ( SIGMA_V_12_load_reg_946 );

    SC_METHOD(thread_zext_ln544_13_fu_715_p1);
    sensitive << ( SIGMA_V_13_load_reg_951 );

    SC_METHOD(thread_zext_ln544_14_fu_719_p1);
    sensitive << ( SIGMA_V_14_load_reg_956 );

    SC_METHOD(thread_zext_ln544_15_fu_723_p1);
    sensitive << ( SIGMA_V_15_load_reg_961 );

    SC_METHOD(thread_zext_ln544_1_fu_666_p1);
    sensitive << ( SIGMA_V_1_q0 );

    SC_METHOD(thread_zext_ln544_2_fu_671_p1);
    sensitive << ( SIGMA_V_2_load_reg_896 );

    SC_METHOD(thread_zext_ln544_3_fu_675_p1);
    sensitive << ( SIGMA_V_3_load_reg_901 );

    SC_METHOD(thread_zext_ln544_4_fu_679_p1);
    sensitive << ( SIGMA_V_4_load_reg_906 );

    SC_METHOD(thread_zext_ln544_5_fu_683_p1);
    sensitive << ( SIGMA_V_5_load_reg_911 );

    SC_METHOD(thread_zext_ln544_6_fu_687_p1);
    sensitive << ( SIGMA_V_6_load_reg_916 );

    SC_METHOD(thread_zext_ln544_7_fu_691_p1);
    sensitive << ( SIGMA_V_7_load_reg_921 );

    SC_METHOD(thread_zext_ln544_8_fu_695_p1);
    sensitive << ( SIGMA_V_8_load_reg_926 );

    SC_METHOD(thread_zext_ln544_9_fu_699_p1);
    sensitive << ( SIGMA_V_9_load_reg_931 );

    SC_METHOD(thread_zext_ln544_fu_661_p1);
    sensitive << ( SIGMA_V_0_q0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln20_fu_593_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln28_fu_629_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_G_fu_554_ap_done );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( icmp_ln39_fu_727_p2 );
    sensitive << ( ap_CS_fsm_state22 );

    ap_CS_fsm = "000000000000000000000001";
    grp_G_fu_554_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "compress_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, h_V_address0, "(port)h_V_address0");
    sc_trace(mVcdFile, h_V_ce0, "(port)h_V_ce0");
    sc_trace(mVcdFile, h_V_we0, "(port)h_V_we0");
    sc_trace(mVcdFile, h_V_d0, "(port)h_V_d0");
    sc_trace(mVcdFile, h_V_q0, "(port)h_V_q0");
    sc_trace(mVcdFile, m_V_address0, "(port)m_V_address0");
    sc_trace(mVcdFile, m_V_ce0, "(port)m_V_ce0");
    sc_trace(mVcdFile, m_V_q0, "(port)m_V_q0");
    sc_trace(mVcdFile, m_V_address1, "(port)m_V_address1");
    sc_trace(mVcdFile, m_V_ce1, "(port)m_V_ce1");
    sc_trace(mVcdFile, m_V_q1, "(port)m_V_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, IV_V_address0, "IV_V_address0");
    sc_trace(mVcdFile, IV_V_ce0, "IV_V_ce0");
    sc_trace(mVcdFile, IV_V_q0, "IV_V_q0");
    sc_trace(mVcdFile, SIGMA_V_0_address0, "SIGMA_V_0_address0");
    sc_trace(mVcdFile, SIGMA_V_0_ce0, "SIGMA_V_0_ce0");
    sc_trace(mVcdFile, SIGMA_V_0_q0, "SIGMA_V_0_q0");
    sc_trace(mVcdFile, SIGMA_V_1_address0, "SIGMA_V_1_address0");
    sc_trace(mVcdFile, SIGMA_V_1_ce0, "SIGMA_V_1_ce0");
    sc_trace(mVcdFile, SIGMA_V_1_q0, "SIGMA_V_1_q0");
    sc_trace(mVcdFile, SIGMA_V_2_address0, "SIGMA_V_2_address0");
    sc_trace(mVcdFile, SIGMA_V_2_ce0, "SIGMA_V_2_ce0");
    sc_trace(mVcdFile, SIGMA_V_2_q0, "SIGMA_V_2_q0");
    sc_trace(mVcdFile, SIGMA_V_3_address0, "SIGMA_V_3_address0");
    sc_trace(mVcdFile, SIGMA_V_3_ce0, "SIGMA_V_3_ce0");
    sc_trace(mVcdFile, SIGMA_V_3_q0, "SIGMA_V_3_q0");
    sc_trace(mVcdFile, SIGMA_V_4_address0, "SIGMA_V_4_address0");
    sc_trace(mVcdFile, SIGMA_V_4_ce0, "SIGMA_V_4_ce0");
    sc_trace(mVcdFile, SIGMA_V_4_q0, "SIGMA_V_4_q0");
    sc_trace(mVcdFile, SIGMA_V_5_address0, "SIGMA_V_5_address0");
    sc_trace(mVcdFile, SIGMA_V_5_ce0, "SIGMA_V_5_ce0");
    sc_trace(mVcdFile, SIGMA_V_5_q0, "SIGMA_V_5_q0");
    sc_trace(mVcdFile, SIGMA_V_6_address0, "SIGMA_V_6_address0");
    sc_trace(mVcdFile, SIGMA_V_6_ce0, "SIGMA_V_6_ce0");
    sc_trace(mVcdFile, SIGMA_V_6_q0, "SIGMA_V_6_q0");
    sc_trace(mVcdFile, SIGMA_V_7_address0, "SIGMA_V_7_address0");
    sc_trace(mVcdFile, SIGMA_V_7_ce0, "SIGMA_V_7_ce0");
    sc_trace(mVcdFile, SIGMA_V_7_q0, "SIGMA_V_7_q0");
    sc_trace(mVcdFile, SIGMA_V_8_address0, "SIGMA_V_8_address0");
    sc_trace(mVcdFile, SIGMA_V_8_ce0, "SIGMA_V_8_ce0");
    sc_trace(mVcdFile, SIGMA_V_8_q0, "SIGMA_V_8_q0");
    sc_trace(mVcdFile, SIGMA_V_9_address0, "SIGMA_V_9_address0");
    sc_trace(mVcdFile, SIGMA_V_9_ce0, "SIGMA_V_9_ce0");
    sc_trace(mVcdFile, SIGMA_V_9_q0, "SIGMA_V_9_q0");
    sc_trace(mVcdFile, SIGMA_V_10_address0, "SIGMA_V_10_address0");
    sc_trace(mVcdFile, SIGMA_V_10_ce0, "SIGMA_V_10_ce0");
    sc_trace(mVcdFile, SIGMA_V_10_q0, "SIGMA_V_10_q0");
    sc_trace(mVcdFile, SIGMA_V_11_address0, "SIGMA_V_11_address0");
    sc_trace(mVcdFile, SIGMA_V_11_ce0, "SIGMA_V_11_ce0");
    sc_trace(mVcdFile, SIGMA_V_11_q0, "SIGMA_V_11_q0");
    sc_trace(mVcdFile, SIGMA_V_12_address0, "SIGMA_V_12_address0");
    sc_trace(mVcdFile, SIGMA_V_12_ce0, "SIGMA_V_12_ce0");
    sc_trace(mVcdFile, SIGMA_V_12_q0, "SIGMA_V_12_q0");
    sc_trace(mVcdFile, SIGMA_V_13_address0, "SIGMA_V_13_address0");
    sc_trace(mVcdFile, SIGMA_V_13_ce0, "SIGMA_V_13_ce0");
    sc_trace(mVcdFile, SIGMA_V_13_q0, "SIGMA_V_13_q0");
    sc_trace(mVcdFile, SIGMA_V_14_address0, "SIGMA_V_14_address0");
    sc_trace(mVcdFile, SIGMA_V_14_ce0, "SIGMA_V_14_ce0");
    sc_trace(mVcdFile, SIGMA_V_14_q0, "SIGMA_V_14_q0");
    sc_trace(mVcdFile, SIGMA_V_15_address0, "SIGMA_V_15_address0");
    sc_trace(mVcdFile, SIGMA_V_15_ce0, "SIGMA_V_15_ce0");
    sc_trace(mVcdFile, SIGMA_V_15_q0, "SIGMA_V_15_q0");
    sc_trace(mVcdFile, reg_583, "reg_583");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, reg_588, "reg_588");
    sc_trace(mVcdFile, i_fu_599_p2, "i_fu_599_p2");
    sc_trace(mVcdFile, i_reg_772, "i_reg_772");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln21_fu_605_p1, "zext_ln21_fu_605_p1");
    sc_trace(mVcdFile, zext_ln21_reg_777, "zext_ln21_reg_777");
    sc_trace(mVcdFile, icmp_ln20_fu_593_p2, "icmp_ln20_fu_593_p2");
    sc_trace(mVcdFile, i_1_fu_635_p2, "i_1_fu_635_p2");
    sc_trace(mVcdFile, i_1_reg_801, "i_1_reg_801");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln28_fu_629_p2, "icmp_ln28_fu_629_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, SIGMA_V_2_load_reg_896, "SIGMA_V_2_load_reg_896");
    sc_trace(mVcdFile, SIGMA_V_3_load_reg_901, "SIGMA_V_3_load_reg_901");
    sc_trace(mVcdFile, SIGMA_V_4_load_reg_906, "SIGMA_V_4_load_reg_906");
    sc_trace(mVcdFile, SIGMA_V_5_load_reg_911, "SIGMA_V_5_load_reg_911");
    sc_trace(mVcdFile, SIGMA_V_6_load_reg_916, "SIGMA_V_6_load_reg_916");
    sc_trace(mVcdFile, SIGMA_V_7_load_reg_921, "SIGMA_V_7_load_reg_921");
    sc_trace(mVcdFile, SIGMA_V_8_load_reg_926, "SIGMA_V_8_load_reg_926");
    sc_trace(mVcdFile, SIGMA_V_9_load_reg_931, "SIGMA_V_9_load_reg_931");
    sc_trace(mVcdFile, SIGMA_V_10_load_reg_936, "SIGMA_V_10_load_reg_936");
    sc_trace(mVcdFile, SIGMA_V_11_load_reg_941, "SIGMA_V_11_load_reg_941");
    sc_trace(mVcdFile, SIGMA_V_12_load_reg_946, "SIGMA_V_12_load_reg_946");
    sc_trace(mVcdFile, SIGMA_V_13_load_reg_951, "SIGMA_V_13_load_reg_951");
    sc_trace(mVcdFile, SIGMA_V_14_load_reg_956, "SIGMA_V_14_load_reg_956");
    sc_trace(mVcdFile, SIGMA_V_15_load_reg_961, "SIGMA_V_15_load_reg_961");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_G_fu_554_ap_ready, "grp_G_fu_554_ap_ready");
    sc_trace(mVcdFile, grp_G_fu_554_ap_done, "grp_G_fu_554_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, i_2_fu_733_p2, "i_2_fu_733_p2");
    sc_trace(mVcdFile, i_2_reg_1039, "i_2_reg_1039");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, icmp_ln39_fu_727_p2, "icmp_ln39_fu_727_p2");
    sc_trace(mVcdFile, h_V_addr_1_reg_1054, "h_V_addr_1_reg_1054");
    sc_trace(mVcdFile, v_V_address0, "v_V_address0");
    sc_trace(mVcdFile, v_V_ce0, "v_V_ce0");
    sc_trace(mVcdFile, v_V_we0, "v_V_we0");
    sc_trace(mVcdFile, v_V_d0, "v_V_d0");
    sc_trace(mVcdFile, v_V_q0, "v_V_q0");
    sc_trace(mVcdFile, v_V_address1, "v_V_address1");
    sc_trace(mVcdFile, v_V_ce1, "v_V_ce1");
    sc_trace(mVcdFile, v_V_we1, "v_V_we1");
    sc_trace(mVcdFile, v_V_d1, "v_V_d1");
    sc_trace(mVcdFile, v_V_q1, "v_V_q1");
    sc_trace(mVcdFile, grp_G_fu_554_ap_start, "grp_G_fu_554_ap_start");
    sc_trace(mVcdFile, grp_G_fu_554_ap_idle, "grp_G_fu_554_ap_idle");
    sc_trace(mVcdFile, grp_G_fu_554_v_V_address0, "grp_G_fu_554_v_V_address0");
    sc_trace(mVcdFile, grp_G_fu_554_v_V_ce0, "grp_G_fu_554_v_V_ce0");
    sc_trace(mVcdFile, grp_G_fu_554_v_V_we0, "grp_G_fu_554_v_V_we0");
    sc_trace(mVcdFile, grp_G_fu_554_v_V_d0, "grp_G_fu_554_v_V_d0");
    sc_trace(mVcdFile, grp_G_fu_554_v_V_address1, "grp_G_fu_554_v_V_address1");
    sc_trace(mVcdFile, grp_G_fu_554_v_V_ce1, "grp_G_fu_554_v_V_ce1");
    sc_trace(mVcdFile, grp_G_fu_554_a, "grp_G_fu_554_a");
    sc_trace(mVcdFile, grp_G_fu_554_b, "grp_G_fu_554_b");
    sc_trace(mVcdFile, grp_G_fu_554_c, "grp_G_fu_554_c");
    sc_trace(mVcdFile, grp_G_fu_554_d, "grp_G_fu_554_d");
    sc_trace(mVcdFile, i_0_reg_520, "i_0_reg_520");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i1_0_reg_532, "i1_0_reg_532");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, i2_0_reg_543, "i2_0_reg_543");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, grp_G_fu_554_ap_start_reg, "grp_G_fu_554_ap_start_reg");
    sc_trace(mVcdFile, zext_ln22_fu_617_p1, "zext_ln22_fu_617_p1");
    sc_trace(mVcdFile, zext_ln29_fu_641_p1, "zext_ln29_fu_641_p1");
    sc_trace(mVcdFile, zext_ln544_fu_661_p1, "zext_ln544_fu_661_p1");
    sc_trace(mVcdFile, zext_ln544_1_fu_666_p1, "zext_ln544_1_fu_666_p1");
    sc_trace(mVcdFile, zext_ln544_2_fu_671_p1, "zext_ln544_2_fu_671_p1");
    sc_trace(mVcdFile, zext_ln544_3_fu_675_p1, "zext_ln544_3_fu_675_p1");
    sc_trace(mVcdFile, zext_ln544_4_fu_679_p1, "zext_ln544_4_fu_679_p1");
    sc_trace(mVcdFile, zext_ln544_5_fu_683_p1, "zext_ln544_5_fu_683_p1");
    sc_trace(mVcdFile, zext_ln544_6_fu_687_p1, "zext_ln544_6_fu_687_p1");
    sc_trace(mVcdFile, zext_ln544_7_fu_691_p1, "zext_ln544_7_fu_691_p1");
    sc_trace(mVcdFile, zext_ln544_8_fu_695_p1, "zext_ln544_8_fu_695_p1");
    sc_trace(mVcdFile, zext_ln544_9_fu_699_p1, "zext_ln544_9_fu_699_p1");
    sc_trace(mVcdFile, zext_ln544_10_fu_703_p1, "zext_ln544_10_fu_703_p1");
    sc_trace(mVcdFile, zext_ln544_11_fu_707_p1, "zext_ln544_11_fu_707_p1");
    sc_trace(mVcdFile, zext_ln544_12_fu_711_p1, "zext_ln544_12_fu_711_p1");
    sc_trace(mVcdFile, zext_ln544_13_fu_715_p1, "zext_ln544_13_fu_715_p1");
    sc_trace(mVcdFile, zext_ln544_14_fu_719_p1, "zext_ln544_14_fu_719_p1");
    sc_trace(mVcdFile, zext_ln544_15_fu_723_p1, "zext_ln544_15_fu_723_p1");
    sc_trace(mVcdFile, zext_ln40_fu_739_p1, "zext_ln40_fu_739_p1");
    sc_trace(mVcdFile, zext_ln40_1_fu_751_p1, "zext_ln40_1_fu_751_p1");
    sc_trace(mVcdFile, xor_ln719_fu_622_p2, "xor_ln719_fu_622_p2");
    sc_trace(mVcdFile, xor_ln22_fu_611_p2, "xor_ln22_fu_611_p2");
    sc_trace(mVcdFile, xor_ln40_fu_745_p2, "xor_ln40_fu_745_p2");
    sc_trace(mVcdFile, xor_ln719_2_fu_756_p2, "xor_ln719_2_fu_756_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

compress::~compress() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete IV_V_U;
    delete SIGMA_V_0_U;
    delete SIGMA_V_1_U;
    delete SIGMA_V_2_U;
    delete SIGMA_V_3_U;
    delete SIGMA_V_4_U;
    delete SIGMA_V_5_U;
    delete SIGMA_V_6_U;
    delete SIGMA_V_7_U;
    delete SIGMA_V_8_U;
    delete SIGMA_V_9_U;
    delete SIGMA_V_10_U;
    delete SIGMA_V_11_U;
    delete SIGMA_V_12_U;
    delete SIGMA_V_13_U;
    delete SIGMA_V_14_U;
    delete SIGMA_V_15_U;
    delete v_V_U;
    delete grp_G_fu_554;
}

void compress::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_G_fu_554_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
            grp_G_fu_554_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_G_fu_554_ap_ready.read())) {
            grp_G_fu_554_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        i1_0_reg_532 = i_1_reg_801.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i1_0_reg_532 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln28_fu_629_p2.read()))) {
        i2_0_reg_543 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        i2_0_reg_543 = i_2_reg_1039.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_520 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_0_reg_520 = i_reg_772.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        SIGMA_V_10_load_reg_936 = SIGMA_V_10_q0.read();
        SIGMA_V_11_load_reg_941 = SIGMA_V_11_q0.read();
        SIGMA_V_12_load_reg_946 = SIGMA_V_12_q0.read();
        SIGMA_V_13_load_reg_951 = SIGMA_V_13_q0.read();
        SIGMA_V_14_load_reg_956 = SIGMA_V_14_q0.read();
        SIGMA_V_15_load_reg_961 = SIGMA_V_15_q0.read();
        SIGMA_V_2_load_reg_896 = SIGMA_V_2_q0.read();
        SIGMA_V_3_load_reg_901 = SIGMA_V_3_q0.read();
        SIGMA_V_4_load_reg_906 = SIGMA_V_4_q0.read();
        SIGMA_V_5_load_reg_911 = SIGMA_V_5_q0.read();
        SIGMA_V_6_load_reg_916 = SIGMA_V_6_q0.read();
        SIGMA_V_7_load_reg_921 = SIGMA_V_7_q0.read();
        SIGMA_V_8_load_reg_926 = SIGMA_V_8_q0.read();
        SIGMA_V_9_load_reg_931 = SIGMA_V_9_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln39_fu_727_p2.read()))) {
        h_V_addr_1_reg_1054 =  (sc_lv<3>) (zext_ln40_fu_739_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_1_reg_801 = i_1_fu_635_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        i_2_reg_1039 = i_2_fu_733_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_772 = i_fu_599_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        reg_583 = m_V_q0.read();
        reg_588 = m_V_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln20_fu_593_p2.read(), ap_const_lv1_0))) {
        zext_ln21_reg_777 = zext_ln21_fu_605_p1.read();
    }
}

void compress::thread_IV_V_address0() {
    IV_V_address0 =  (sc_lv<3>) (zext_ln21_fu_605_p1.read());
}

void compress::thread_IV_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        IV_V_ce0 = ap_const_logic_1;
    } else {
        IV_V_ce0 = ap_const_logic_0;
    }
}

void compress::thread_SIGMA_V_0_address0() {
    SIGMA_V_0_address0 =  (sc_lv<4>) (zext_ln29_fu_641_p1.read());
}

void compress::thread_SIGMA_V_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SIGMA_V_0_ce0 = ap_const_logic_1;
    } else {
        SIGMA_V_0_ce0 = ap_const_logic_0;
    }
}

void compress::thread_SIGMA_V_10_address0() {
    SIGMA_V_10_address0 =  (sc_lv<4>) (zext_ln29_fu_641_p1.read());
}

void compress::thread_SIGMA_V_10_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SIGMA_V_10_ce0 = ap_const_logic_1;
    } else {
        SIGMA_V_10_ce0 = ap_const_logic_0;
    }
}

void compress::thread_SIGMA_V_11_address0() {
    SIGMA_V_11_address0 =  (sc_lv<4>) (zext_ln29_fu_641_p1.read());
}

void compress::thread_SIGMA_V_11_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SIGMA_V_11_ce0 = ap_const_logic_1;
    } else {
        SIGMA_V_11_ce0 = ap_const_logic_0;
    }
}

void compress::thread_SIGMA_V_12_address0() {
    SIGMA_V_12_address0 =  (sc_lv<4>) (zext_ln29_fu_641_p1.read());
}

void compress::thread_SIGMA_V_12_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SIGMA_V_12_ce0 = ap_const_logic_1;
    } else {
        SIGMA_V_12_ce0 = ap_const_logic_0;
    }
}

void compress::thread_SIGMA_V_13_address0() {
    SIGMA_V_13_address0 =  (sc_lv<4>) (zext_ln29_fu_641_p1.read());
}

void compress::thread_SIGMA_V_13_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SIGMA_V_13_ce0 = ap_const_logic_1;
    } else {
        SIGMA_V_13_ce0 = ap_const_logic_0;
    }
}

void compress::thread_SIGMA_V_14_address0() {
    SIGMA_V_14_address0 =  (sc_lv<4>) (zext_ln29_fu_641_p1.read());
}

void compress::thread_SIGMA_V_14_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SIGMA_V_14_ce0 = ap_const_logic_1;
    } else {
        SIGMA_V_14_ce0 = ap_const_logic_0;
    }
}

void compress::thread_SIGMA_V_15_address0() {
    SIGMA_V_15_address0 =  (sc_lv<4>) (zext_ln29_fu_641_p1.read());
}

void compress::thread_SIGMA_V_15_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SIGMA_V_15_ce0 = ap_const_logic_1;
    } else {
        SIGMA_V_15_ce0 = ap_const_logic_0;
    }
}

void compress::thread_SIGMA_V_1_address0() {
    SIGMA_V_1_address0 =  (sc_lv<4>) (zext_ln29_fu_641_p1.read());
}

void compress::thread_SIGMA_V_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SIGMA_V_1_ce0 = ap_const_logic_1;
    } else {
        SIGMA_V_1_ce0 = ap_const_logic_0;
    }
}

void compress::thread_SIGMA_V_2_address0() {
    SIGMA_V_2_address0 =  (sc_lv<4>) (zext_ln29_fu_641_p1.read());
}

void compress::thread_SIGMA_V_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SIGMA_V_2_ce0 = ap_const_logic_1;
    } else {
        SIGMA_V_2_ce0 = ap_const_logic_0;
    }
}

void compress::thread_SIGMA_V_3_address0() {
    SIGMA_V_3_address0 =  (sc_lv<4>) (zext_ln29_fu_641_p1.read());
}

void compress::thread_SIGMA_V_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SIGMA_V_3_ce0 = ap_const_logic_1;
    } else {
        SIGMA_V_3_ce0 = ap_const_logic_0;
    }
}

void compress::thread_SIGMA_V_4_address0() {
    SIGMA_V_4_address0 =  (sc_lv<4>) (zext_ln29_fu_641_p1.read());
}

void compress::thread_SIGMA_V_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SIGMA_V_4_ce0 = ap_const_logic_1;
    } else {
        SIGMA_V_4_ce0 = ap_const_logic_0;
    }
}

void compress::thread_SIGMA_V_5_address0() {
    SIGMA_V_5_address0 =  (sc_lv<4>) (zext_ln29_fu_641_p1.read());
}

void compress::thread_SIGMA_V_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SIGMA_V_5_ce0 = ap_const_logic_1;
    } else {
        SIGMA_V_5_ce0 = ap_const_logic_0;
    }
}

void compress::thread_SIGMA_V_6_address0() {
    SIGMA_V_6_address0 =  (sc_lv<4>) (zext_ln29_fu_641_p1.read());
}

void compress::thread_SIGMA_V_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SIGMA_V_6_ce0 = ap_const_logic_1;
    } else {
        SIGMA_V_6_ce0 = ap_const_logic_0;
    }
}

void compress::thread_SIGMA_V_7_address0() {
    SIGMA_V_7_address0 =  (sc_lv<4>) (zext_ln29_fu_641_p1.read());
}

void compress::thread_SIGMA_V_7_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SIGMA_V_7_ce0 = ap_const_logic_1;
    } else {
        SIGMA_V_7_ce0 = ap_const_logic_0;
    }
}

void compress::thread_SIGMA_V_8_address0() {
    SIGMA_V_8_address0 =  (sc_lv<4>) (zext_ln29_fu_641_p1.read());
}

void compress::thread_SIGMA_V_8_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SIGMA_V_8_ce0 = ap_const_logic_1;
    } else {
        SIGMA_V_8_ce0 = ap_const_logic_0;
    }
}

void compress::thread_SIGMA_V_9_address0() {
    SIGMA_V_9_address0 =  (sc_lv<4>) (zext_ln29_fu_641_p1.read());
}

void compress::thread_SIGMA_V_9_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SIGMA_V_9_ce0 = ap_const_logic_1;
    } else {
        SIGMA_V_9_ce0 = ap_const_logic_0;
    }
}

void compress::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void compress::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void compress::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void compress::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void compress::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void compress::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void compress::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void compress::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void compress::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void compress::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void compress::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void compress::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void compress::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void compress::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void compress::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void compress::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void compress::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void compress::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void compress::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void compress::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void compress::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void compress::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void compress::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void compress::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void compress::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln39_fu_727_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void compress::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void compress::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln39_fu_727_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void compress::thread_grp_G_fu_554_a() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        grp_G_fu_554_a = ap_const_lv4_3;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        grp_G_fu_554_a = ap_const_lv4_2;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        grp_G_fu_554_a = ap_const_lv4_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        grp_G_fu_554_a = ap_const_lv4_0;
    } else {
        grp_G_fu_554_a = "XXXX";
    }
}

void compress::thread_grp_G_fu_554_ap_start() {
    grp_G_fu_554_ap_start = grp_G_fu_554_ap_start_reg.read();
}

void compress::thread_grp_G_fu_554_b() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        grp_G_fu_554_b = ap_const_lv4_7;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        grp_G_fu_554_b = ap_const_lv4_6;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        grp_G_fu_554_b = ap_const_lv4_5;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        grp_G_fu_554_b = ap_const_lv4_4;
    } else {
        grp_G_fu_554_b = "XXXX";
    }
}

void compress::thread_grp_G_fu_554_c() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        grp_G_fu_554_c = ap_const_lv5_B;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        grp_G_fu_554_c = ap_const_lv5_A;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        grp_G_fu_554_c = ap_const_lv5_9;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        grp_G_fu_554_c = ap_const_lv5_8;
    } else {
        grp_G_fu_554_c =  (sc_lv<5>) ("XXXXX");
    }
}

void compress::thread_grp_G_fu_554_d() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        grp_G_fu_554_d = ap_const_lv5_F;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        grp_G_fu_554_d = ap_const_lv5_E;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        grp_G_fu_554_d = ap_const_lv5_D;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        grp_G_fu_554_d = ap_const_lv5_C;
    } else {
        grp_G_fu_554_d =  (sc_lv<5>) ("XXXXX");
    }
}

void compress::thread_h_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        h_V_address0 = h_V_addr_1_reg_1054.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        h_V_address0 =  (sc_lv<3>) (zext_ln40_fu_739_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        h_V_address0 =  (sc_lv<3>) (zext_ln21_fu_605_p1.read());
    } else {
        h_V_address0 =  (sc_lv<3>) ("XXX");
    }
}

void compress::thread_h_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        h_V_ce0 = ap_const_logic_1;
    } else {
        h_V_ce0 = ap_const_logic_0;
    }
}

void compress::thread_h_V_d0() {
    h_V_d0 = (xor_ln719_2_fu_756_p2.read() ^ v_V_q1.read());
}

void compress::thread_h_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        h_V_we0 = ap_const_logic_1;
    } else {
        h_V_we0 = ap_const_logic_0;
    }
}

void compress::thread_i_1_fu_635_p2() {
    i_1_fu_635_p2 = (!i1_0_reg_532.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i1_0_reg_532.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void compress::thread_i_2_fu_733_p2() {
    i_2_fu_733_p2 = (!i2_0_reg_543.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i2_0_reg_543.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void compress::thread_i_fu_599_p2() {
    i_fu_599_p2 = (!i_0_reg_520.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_520.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void compress::thread_icmp_ln20_fu_593_p2() {
    icmp_ln20_fu_593_p2 = (!i_0_reg_520.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_520.read() == ap_const_lv4_8);
}

void compress::thread_icmp_ln28_fu_629_p2() {
    icmp_ln28_fu_629_p2 = (!i1_0_reg_532.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_532.read() == ap_const_lv4_A);
}

void compress::thread_icmp_ln39_fu_727_p2() {
    icmp_ln39_fu_727_p2 = (!i2_0_reg_543.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i2_0_reg_543.read() == ap_const_lv4_8);
}

void compress::thread_m_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        m_V_address0 =  (sc_lv<4>) (zext_ln544_14_fu_719_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        m_V_address0 =  (sc_lv<4>) (zext_ln544_12_fu_711_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        m_V_address0 =  (sc_lv<4>) (zext_ln544_10_fu_703_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        m_V_address0 =  (sc_lv<4>) (zext_ln544_8_fu_695_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        m_V_address0 =  (sc_lv<4>) (zext_ln544_6_fu_687_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        m_V_address0 =  (sc_lv<4>) (zext_ln544_4_fu_679_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        m_V_address0 =  (sc_lv<4>) (zext_ln544_2_fu_671_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        m_V_address0 =  (sc_lv<4>) (zext_ln544_fu_661_p1.read());
    } else {
        m_V_address0 = "XXXX";
    }
}

void compress::thread_m_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        m_V_address1 =  (sc_lv<4>) (zext_ln544_15_fu_723_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        m_V_address1 =  (sc_lv<4>) (zext_ln544_13_fu_715_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        m_V_address1 =  (sc_lv<4>) (zext_ln544_11_fu_707_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        m_V_address1 =  (sc_lv<4>) (zext_ln544_9_fu_699_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        m_V_address1 =  (sc_lv<4>) (zext_ln544_7_fu_691_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        m_V_address1 =  (sc_lv<4>) (zext_ln544_5_fu_683_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        m_V_address1 =  (sc_lv<4>) (zext_ln544_3_fu_675_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        m_V_address1 =  (sc_lv<4>) (zext_ln544_1_fu_666_p1.read());
    } else {
        m_V_address1 = "XXXX";
    }
}

void compress::thread_m_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
         (esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())))) {
        m_V_ce0 = ap_const_logic_1;
    } else {
        m_V_ce0 = ap_const_logic_0;
    }
}

void compress::thread_m_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
         (esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())))) {
        m_V_ce1 = ap_const_logic_1;
    } else {
        m_V_ce1 = ap_const_logic_0;
    }
}

void compress::thread_v_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        v_V_address0 =  (sc_lv<4>) (zext_ln40_fu_739_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        v_V_address0 =  (sc_lv<4>) (zext_ln21_reg_777.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        v_V_address0 =  (sc_lv<4>) (ap_const_lv64_C);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        v_V_address0 = grp_G_fu_554_v_V_address0.read();
    } else {
        v_V_address0 = "XXXX";
    }
}

void compress::thread_v_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        v_V_address1 =  (sc_lv<4>) (zext_ln40_1_fu_751_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v_V_address1 =  (sc_lv<4>) (ap_const_lv64_C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        v_V_address1 =  (sc_lv<4>) (zext_ln22_fu_617_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        v_V_address1 = grp_G_fu_554_v_V_address1.read();
    } else {
        v_V_address1 = "XXXX";
    }
}

void compress::thread_v_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        v_V_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        v_V_ce0 = grp_G_fu_554_v_V_ce0.read();
    } else {
        v_V_ce0 = ap_const_logic_0;
    }
}

void compress::thread_v_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        v_V_ce1 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        v_V_ce1 = grp_G_fu_554_v_V_ce1.read();
    } else {
        v_V_ce1 = ap_const_logic_0;
    }
}

void compress::thread_v_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        v_V_d0 = h_V_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        v_V_d0 = grp_G_fu_554_v_V_d0.read();
    } else {
        v_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compress::thread_v_V_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v_V_d1 = xor_ln719_fu_622_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        v_V_d1 = IV_V_q0.read();
    } else {
        v_V_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compress::thread_v_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        v_V_we0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        v_V_we0 = grp_G_fu_554_v_V_we0.read();
    } else {
        v_V_we0 = ap_const_logic_0;
    }
}

void compress::thread_v_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        v_V_we1 = ap_const_logic_1;
    } else {
        v_V_we1 = ap_const_logic_0;
    }
}

void compress::thread_xor_ln22_fu_611_p2() {
    xor_ln22_fu_611_p2 = (i_0_reg_520.read() ^ ap_const_lv4_8);
}

void compress::thread_xor_ln40_fu_745_p2() {
    xor_ln40_fu_745_p2 = (i2_0_reg_543.read() ^ ap_const_lv4_8);
}

void compress::thread_xor_ln719_2_fu_756_p2() {
    xor_ln719_2_fu_756_p2 = (v_V_q0.read() ^ h_V_q0.read());
}

void compress::thread_xor_ln719_fu_622_p2() {
    xor_ln719_fu_622_p2 = (v_V_q0.read() ^ ap_const_lv32_40);
}

void compress::thread_zext_ln21_fu_605_p1() {
    zext_ln21_fu_605_p1 = esl_zext<64,4>(i_0_reg_520.read());
}

void compress::thread_zext_ln22_fu_617_p1() {
    zext_ln22_fu_617_p1 = esl_zext<64,4>(xor_ln22_fu_611_p2.read());
}

void compress::thread_zext_ln29_fu_641_p1() {
    zext_ln29_fu_641_p1 = esl_zext<64,4>(i1_0_reg_532.read());
}

void compress::thread_zext_ln40_1_fu_751_p1() {
    zext_ln40_1_fu_751_p1 = esl_zext<64,4>(xor_ln40_fu_745_p2.read());
}

void compress::thread_zext_ln40_fu_739_p1() {
    zext_ln40_fu_739_p1 = esl_zext<64,4>(i2_0_reg_543.read());
}

void compress::thread_zext_ln544_10_fu_703_p1() {
    zext_ln544_10_fu_703_p1 = esl_zext<64,4>(SIGMA_V_10_load_reg_936.read());
}

void compress::thread_zext_ln544_11_fu_707_p1() {
    zext_ln544_11_fu_707_p1 = esl_zext<64,4>(SIGMA_V_11_load_reg_941.read());
}

void compress::thread_zext_ln544_12_fu_711_p1() {
    zext_ln544_12_fu_711_p1 = esl_zext<64,4>(SIGMA_V_12_load_reg_946.read());
}

void compress::thread_zext_ln544_13_fu_715_p1() {
    zext_ln544_13_fu_715_p1 = esl_zext<64,4>(SIGMA_V_13_load_reg_951.read());
}

void compress::thread_zext_ln544_14_fu_719_p1() {
    zext_ln544_14_fu_719_p1 = esl_zext<64,4>(SIGMA_V_14_load_reg_956.read());
}

void compress::thread_zext_ln544_15_fu_723_p1() {
    zext_ln544_15_fu_723_p1 = esl_zext<64,4>(SIGMA_V_15_load_reg_961.read());
}

void compress::thread_zext_ln544_1_fu_666_p1() {
    zext_ln544_1_fu_666_p1 = esl_zext<64,4>(SIGMA_V_1_q0.read());
}

void compress::thread_zext_ln544_2_fu_671_p1() {
    zext_ln544_2_fu_671_p1 = esl_zext<64,4>(SIGMA_V_2_load_reg_896.read());
}

void compress::thread_zext_ln544_3_fu_675_p1() {
    zext_ln544_3_fu_675_p1 = esl_zext<64,4>(SIGMA_V_3_load_reg_901.read());
}

void compress::thread_zext_ln544_4_fu_679_p1() {
    zext_ln544_4_fu_679_p1 = esl_zext<64,4>(SIGMA_V_4_load_reg_906.read());
}

void compress::thread_zext_ln544_5_fu_683_p1() {
    zext_ln544_5_fu_683_p1 = esl_zext<64,4>(SIGMA_V_5_load_reg_911.read());
}

void compress::thread_zext_ln544_6_fu_687_p1() {
    zext_ln544_6_fu_687_p1 = esl_zext<64,4>(SIGMA_V_6_load_reg_916.read());
}

void compress::thread_zext_ln544_7_fu_691_p1() {
    zext_ln544_7_fu_691_p1 = esl_zext<64,4>(SIGMA_V_7_load_reg_921.read());
}

void compress::thread_zext_ln544_8_fu_695_p1() {
    zext_ln544_8_fu_695_p1 = esl_zext<64,4>(SIGMA_V_8_load_reg_926.read());
}

void compress::thread_zext_ln544_9_fu_699_p1() {
    zext_ln544_9_fu_699_p1 = esl_zext<64,4>(SIGMA_V_9_load_reg_931.read());
}

void compress::thread_zext_ln544_fu_661_p1() {
    zext_ln544_fu_661_p1 = esl_zext<64,4>(SIGMA_V_0_q0.read());
}

void compress::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln20_fu_593_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln28_fu_629_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(grp_G_fu_554_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 4194304 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln39_fu_727_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

