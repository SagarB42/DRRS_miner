// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _blake2s_HH_
#define _blake2s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "compress.h"
#include "compress_IV_V.h"
#include "blake2s_h_V.h"
#include "blake2s_m_V.h"

namespace ap_rtl {

struct blake2s : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<512> > data_V;
    sc_out< sc_lv<3> > hash_V_address0;
    sc_out< sc_logic > hash_V_ce0;
    sc_out< sc_logic > hash_V_we0;
    sc_out< sc_lv<32> > hash_V_d0;


    // Module declarations
    blake2s(sc_module_name name);
    SC_HAS_PROCESS(blake2s);

    ~blake2s();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    compress_IV_V* IV_V_U;
    blake2s_h_V* h_V_U;
    blake2s_m_V* m_V_U;
    compress* grp_compress_fu_200;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > IV_V_address0;
    sc_signal< sc_logic > IV_V_ce0;
    sc_signal< sc_lv<32> > IV_V_q0;
    sc_signal< sc_lv<4> > i_fu_246_p2;
    sc_signal< sc_lv<4> > i_reg_420;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln47_fu_252_p1;
    sc_signal< sc_lv<64> > zext_ln47_reg_425;
    sc_signal< sc_lv<1> > icmp_ln46_fu_240_p2;
    sc_signal< sc_lv<3> > h_V_addr_reg_435;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > i_3_fu_270_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > i_4_fu_406_p2;
    sc_signal< sc_lv<4> > i_4_reg_457;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > zext_ln59_fu_412_p1;
    sc_signal< sc_lv<64> > zext_ln59_reg_462;
    sc_signal< sc_lv<1> > icmp_ln58_fu_400_p2;
    sc_signal< sc_lv<3> > h_V_address0;
    sc_signal< sc_logic > h_V_ce0;
    sc_signal< sc_logic > h_V_we0;
    sc_signal< sc_lv<32> > h_V_d0;
    sc_signal< sc_lv<32> > h_V_q0;
    sc_signal< sc_lv<4> > m_V_address0;
    sc_signal< sc_logic > m_V_ce0;
    sc_signal< sc_logic > m_V_we0;
    sc_signal< sc_lv<32> > m_V_d0;
    sc_signal< sc_lv<32> > m_V_q0;
    sc_signal< sc_logic > m_V_ce1;
    sc_signal< sc_lv<32> > m_V_q1;
    sc_signal< sc_logic > grp_compress_fu_200_ap_start;
    sc_signal< sc_logic > grp_compress_fu_200_ap_done;
    sc_signal< sc_logic > grp_compress_fu_200_ap_idle;
    sc_signal< sc_logic > grp_compress_fu_200_ap_ready;
    sc_signal< sc_lv<3> > grp_compress_fu_200_h_V_address0;
    sc_signal< sc_logic > grp_compress_fu_200_h_V_ce0;
    sc_signal< sc_logic > grp_compress_fu_200_h_V_we0;
    sc_signal< sc_lv<32> > grp_compress_fu_200_h_V_d0;
    sc_signal< sc_lv<4> > grp_compress_fu_200_m_V_address0;
    sc_signal< sc_logic > grp_compress_fu_200_m_V_ce0;
    sc_signal< sc_lv<4> > grp_compress_fu_200_m_V_address1;
    sc_signal< sc_logic > grp_compress_fu_200_m_V_ce1;
    sc_signal< sc_lv<4> > i_0_reg_167;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<5> > i2_0_reg_178;
    sc_signal< sc_lv<1> > icmp_ln52_fu_264_p2;
    sc_signal< sc_lv<4> > i3_0_reg_189;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > grp_compress_fu_200_ap_start_reg;
    sc_signal< sc_lv<64> > zext_ln53_fu_276_p1;
    sc_signal< sc_lv<32> > xor_ln719_fu_257_p2;
    sc_signal< sc_lv<4> > trunc_ln53_fu_281_p1;
    sc_signal< sc_lv<9> > Lo_assign_fu_285_p3;
    sc_signal< sc_lv<9> > or_ln53_fu_293_p2;
    sc_signal< sc_lv<10> > zext_ln665_fu_305_p1;
    sc_signal< sc_lv<10> > zext_ln665_1_fu_309_p1;
    sc_signal< sc_lv<1> > icmp_ln665_fu_299_p2;
    sc_signal< sc_lv<10> > sub_ln665_fu_322_p2;
    sc_signal< sc_lv<10> > sub_ln665_1_fu_334_p2;
    sc_signal< sc_lv<512> > tmp_fu_313_p4;
    sc_signal< sc_lv<10> > xor_ln665_fu_328_p2;
    sc_signal< sc_lv<10> > select_ln665_fu_340_p3;
    sc_signal< sc_lv<10> > select_ln665_2_fu_355_p3;
    sc_signal< sc_lv<10> > sub_ln665_2_fu_363_p2;
    sc_signal< sc_lv<512> > select_ln665_1_fu_348_p3;
    sc_signal< sc_lv<512> > zext_ln665_2_fu_369_p1;
    sc_signal< sc_lv<512> > zext_ln665_3_fu_373_p1;
    sc_signal< sc_lv<512> > lshr_ln665_fu_377_p2;
    sc_signal< sc_lv<512> > lshr_ln665_1_fu_383_p2;
    sc_signal< sc_lv<512> > p_Result_s_fu_389_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_1010020;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<9> ap_const_lv9_1F;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<10> ap_const_lv10_1FF;
    static const sc_lv<512> ap_const_lv512_lc_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_IV_V_address0();
    void thread_IV_V_ce0();
    void thread_Lo_assign_fu_285_p3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_compress_fu_200_ap_start();
    void thread_h_V_addr_reg_435();
    void thread_h_V_address0();
    void thread_h_V_ce0();
    void thread_h_V_d0();
    void thread_h_V_we0();
    void thread_hash_V_address0();
    void thread_hash_V_ce0();
    void thread_hash_V_d0();
    void thread_hash_V_we0();
    void thread_i_3_fu_270_p2();
    void thread_i_4_fu_406_p2();
    void thread_i_fu_246_p2();
    void thread_icmp_ln46_fu_240_p2();
    void thread_icmp_ln52_fu_264_p2();
    void thread_icmp_ln58_fu_400_p2();
    void thread_icmp_ln665_fu_299_p2();
    void thread_lshr_ln665_1_fu_383_p2();
    void thread_lshr_ln665_fu_377_p2();
    void thread_m_V_address0();
    void thread_m_V_ce0();
    void thread_m_V_ce1();
    void thread_m_V_d0();
    void thread_m_V_we0();
    void thread_or_ln53_fu_293_p2();
    void thread_p_Result_s_fu_389_p2();
    void thread_select_ln665_1_fu_348_p3();
    void thread_select_ln665_2_fu_355_p3();
    void thread_select_ln665_fu_340_p3();
    void thread_sub_ln665_1_fu_334_p2();
    void thread_sub_ln665_2_fu_363_p2();
    void thread_sub_ln665_fu_322_p2();
    void thread_tmp_fu_313_p4();
    void thread_trunc_ln53_fu_281_p1();
    void thread_xor_ln665_fu_328_p2();
    void thread_xor_ln719_fu_257_p2();
    void thread_zext_ln47_fu_252_p1();
    void thread_zext_ln53_fu_276_p1();
    void thread_zext_ln59_fu_412_p1();
    void thread_zext_ln665_1_fu_309_p1();
    void thread_zext_ln665_2_fu_369_p1();
    void thread_zext_ln665_3_fu_373_p1();
    void thread_zext_ln665_fu_305_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
